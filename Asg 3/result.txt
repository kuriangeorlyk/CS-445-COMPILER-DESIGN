=================================================
Output of Building User Code
Exploding tar files
20230323011326-geor5198-CS445-S23-A3.tar
parser.l
parser.y
makefile
TokenTree.cpp
ourgetopt.c
symbolTable.cpp
semantic.cpp
yyerror.cpp
TokenTree.h
ourgetopt.h
symbolTable.h
semantic.h
yyerror.h
Undossing tarred files assumes all files are ascii and not binary
undosing parser.l
undosing parser.y
undosing makefile
undosing TokenTree.cpp
undosing ourgetopt.c
undosing symbolTable.cpp
undosing semantic.cpp
undosing yyerror.cpp
undosing TokenTree.h
undosing ourgetopt.h
undosing symbolTable.h
undosing semantic.h
undosing yyerror.h
Extracting test files
allbad.c-
allgood.c-
array.c-
arrayops.c-
arrayx.c-
assignb.c-
assignBool.c-
assignChar.c-
assignInt.c-
break2.c-
break3.c-
break4.c-
break.c-
call2.c-
call3.c-
call.c-
callerr.c-
constants.c-
cover.c-
decl.c-
emptyline.c-
everythingS23.c-
exp.c-
expL.c-
expR.c-
for2.c-
fora.c-
forb.c-
for.c-
forscope.c-
funcscope.c-
if.c-
ifNest.c-
init2.c-
init3.c-
init4.c-
init.c-
mixedControl2.c-
mixedControl3.c-
mixedControl.c-
nest.c-
ops.c-
optype.c-
overlapArray.c-
overlap.c-
overlapStatic.c-
part2.c-
randomRoll.c-
return.c-
scope.c-
static.c-
strange.c-
types3.c-
types.c-
undeclared.c-
uninit2.c-
uninit.c-
varAssign.c-
var.c-
varPair.c-
while.c-
whileif.c-
remove Tmp dir contents
Now start the build process

find makefile (lowercase)
makefile
A makefile is here and you compiler will be built with it
make the program
Alter compiler with special development tool set including g++ 4.9
parser.y: warning: 2 shift/reduce conflicts [-Wconflicts-sr]
In file included from parser.y:687:0:
yyerror.h:7:0: warning: "YYERROR_VERBOSE" redefined
 #define YYERROR_VERBOSE
 
parser.tab.c:103:0: note: this is the location of the previous definition
 # define YYERROR_VERBOSE 1
 
Output from build is 5 lines long
Output from build will be trimmed to 1000 lines if it is too long.
bison -v -t -d parser.y
flex parser.l
g++    -c -o lex.yy.o lex.yy.c
g++    -c -o parser.tab.o parser.tab.c
g++ lex.yy.o parser.tab.o TokenTree.cpp ourgetopt.c  symbolTable.cpp semantic.cpp  -o c-
was a program called c- built?
c- is here and you compiler will now be tested
-rwx--x--x. 1 rs-cs-heckendo domain_users 194680 Mar 23 01:16 c-

END OF BUILD
=================================================
Complete Output of Testing
Run Tests
Limited to 30 seconds total run time and 8000 lines of output

* ================================================ *
|      Tests for CS445 Assignment 3                |
|       Comparison with Expected Output            |
|            Semantic Analysis I                   |
|  Errors and Warnings will be sorted by line num  |
|                                                  |
* ================================================ *

/home/rs-cs-heckendo/TestWorld
-rwxrwxrwx jp/jp          1522 2022-05-30 14:11 allbad.c-
-rwxrwxrwx jp/jp          1288 2022-05-30 14:11 allgood.c-
-rwxrwxrwx jp/jp           175 2022-05-30 14:11 array.c-
-rwxrwxrwx jp/jp           860 2022-05-30 14:11 arrayops.c-
-rwxrwxrwx jp/jp           273 2022-05-30 14:11 arrayx.c-
-rwxrwxrwx jp/jp           175 2022-05-30 14:11 assignb.c-
-rwxrwxrwx jp/jp           492 2022-05-30 14:11 assignBool.c-
-rwxrwxrwx jp/jp           483 2022-05-30 14:11 assignChar.c-
-rwxrwxrwx jp/jp           470 2022-05-30 14:11 assignInt.c-
-rwxrwxrwx jp/jp           281 2022-05-30 14:11 break2.c-
-rwxrwxrwx jp/jp           110 2022-05-30 14:11 break3.c-
-rwxrwxrwx jp/jp           155 2022-05-30 14:11 break4.c-
-rwxrwxrwx jp/jp           122 2022-05-30 14:11 break.c-
-rwxrwxrwx jp/jp           340 2022-05-30 14:11 call2.c-
-rwxrwxrwx jp/jp           415 2022-05-30 14:11 call3.c-
-rwxrwxrwx jp/jp           929 2022-05-30 14:11 call.c-
-rwxrwxrwx jp/jp           293 2022-05-30 14:11 callerr.c-
-rwxrwxrwx jp/jp           117 2022-05-30 14:11 constants.c-
-rwxrwxrwx jp/jp          1150 2022-05-30 14:11 cover.c-
-rwxrwxrwx jp/jp            62 2022-05-30 14:11 decl.c-
-rwxrwxrwx jp/jp           206 2022-05-30 14:11 emptyline.c-
-rwxrwxrwx jp/jp          3292 2022-05-30 14:11 everythingS23.c-
-rwxrwxrwx jp/jp          1079 2022-05-30 14:11 exp.c-
-rwxrwxrwx jp/jp            59 2022-05-30 14:11 expL.c-
-rwxrwxrwx jp/jp            59 2022-05-30 14:11 expR.c-
-rwxrwxrwx jp/jp           164 2022-05-30 14:11 for2.c-
-rwxrwxrwx jp/jp           204 2022-05-30 14:11 fora.c-
-rwxrwxrwx jp/jp           139 2022-05-30 14:11 forb.c-
-rwxrwxrwx jp/jp           465 2022-05-30 14:11 for.c-
-rwxrwxrwx jp/jp           984 2022-05-30 14:11 forscope.c-
-rwxrwxrwx jp/jp           763 2022-05-30 14:11 funcscope.c-
-rwxrwxrwx jp/jp           112 2022-05-30 14:11 if.c-
-rwxrwxrwx jp/jp           299 2022-05-30 14:11 ifNest.c-
-rwxrwxrwx jp/jp           272 2022-05-30 14:11 init2.c-
-rwxrwxrwx jp/jp           411 2022-05-30 14:11 init3.c-
-rwxrwxrwx jp/jp           105 2022-05-30 14:11 init4.c-
-rwxrwxrwx jp/jp           146 2022-05-30 14:11 init.c-
-rwxrwxrwx jp/jp           298 2022-05-30 14:11 mixedControl2.c-
-rwxrwxrwx jp/jp           364 2022-05-30 14:11 mixedControl3.c-
-rwxrwxrwx jp/jp           490 2022-05-30 14:11 mixedControl.c-
-rwxrwxrwx jp/jp          1547 2022-05-30 14:11 nest.c-
-rwxrwxrwx jp/jp          4230 2022-05-30 14:11 ops.c-
-rwxrwxrwx jp/jp           226 2022-05-30 14:11 optype.c-
-rwxrwxrwx jp/jp           445 2022-05-30 14:11 overlapArray.c-
-rwxrwxrwx jp/jp           408 2022-05-30 14:11 overlap.c-
-rwxrwxrwx jp/jp           672 2022-05-30 14:11 overlapStatic.c-
-rwxrwxrwx jp/jp           539 2022-05-30 14:11 part2.c-
-rwxrwxrwx jp/jp           321 2022-05-30 14:11 randomRoll.c-
-rwxrwxrwx jp/jp           483 2022-05-30 14:11 return.c-
-rwxrwxrwx jp/jp           650 2022-05-30 14:11 scope.c-
-rwxrwxrwx jp/jp            93 2022-05-30 14:11 static.c-
-rwxrwxrwx jp/jp           464 2022-05-30 14:11 strange.c-
-rwxrwxrwx jp/jp           244 2022-05-30 14:11 types3.c-
-rwxrwxrwx jp/jp          1748 2022-05-30 14:11 types.c-
-rwxrwxrwx jp/jp           101 2022-05-30 14:11 undeclared.c-
-rwxrwxrwx jp/jp           217 2022-05-30 14:11 uninit2.c-
-rwxrwxrwx jp/jp           201 2022-05-30 14:11 uninit.c-
-rwxrwxrwx jp/jp           947 2022-05-30 14:11 varAssign.c-
-rwxrwxrwx jp/jp           216 2022-05-30 14:11 var.c-
-rwxrwxrwx jp/jp           664 2022-05-30 14:11 varPair.c-
-rwxrwxrwx jp/jp            75 2022-05-30 14:11 while.c-
-rwxrwxrwx jp/jp          1792 2022-05-30 14:11 whileif.c-

==============
==============
Test invalid input
./c- gcd.c- (should produce no tree)
ERROR(ARGLIST): source file "gcd.c-" could not be opened.
Number of warnings: 0
Number of errors: 1

==============
==============
./c- -P allbad.c-
ERROR(LINKER): A function named 'main()' must be defined.
ERROR(7): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(8): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(9): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(11): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(13): '!<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(13): '!>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(14): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(15): 'and' requires operands of type bool but lhs is of type int.
ERROR(15): Unary 'not' requires an operand of type bool but was given type int.
ERROR(16): 'or' requires operands of type bool but lhs is of type int.
ERROR(16): Unary 'not' requires an operand of type bool but was given type int.
ERROR(17): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(21): '+' requires operands of type int but lhs is of type bool.
ERROR(22): '-' requires operands of type int but rhs is of type bool.
ERROR(23): '*' requires operands of type int but lhs is of type bool.
ERROR(24): '/' requires operands of type int but rhs is of type bool.
ERROR(25): '%' requires operands of type int but lhs is of type bool.
ERROR(27): '+=' requires operands of type int but lhs is of type bool.
ERROR(28): '-=' requires operands of type int but lhs is of type bool.
ERROR(29): '*=' requires operands of type int but lhs is of type bool.
ERROR(30): '/=' requires operands of type int but lhs is of type bool.
ERROR(32): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(33): Unary 'not' requires an operand of type bool but was given type int.
ERROR(34): Unary '?' requires an operand of type int but was given type bool.
WARNING(42): Variable 'aa' may be uninitialized when used here.
ERROR(43): Array 'ba' should be indexed by type int but got type char.
ERROR(43): '<=' requires operands of the same type but lhs is type char and rhs is type int.
WARNING(43): Variable 'b' may be uninitialized when used here.
ERROR(44): Array 'ca' should be indexed by type int but got type bool.
ERROR(44): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
WARNING(44): Variable 'c' may be uninitialized when used here.
ERROR(45): Array 'aa' should be indexed by type int but got type bool.
ERROR(45): Array index is the unindexed array 'aa'.
ERROR(46): Cannot index nonarray 'cat'.
ERROR(46): Cannot use function 'cat' as a variable.
ERROR(47): Cannot use function 'cat' as a variable.
ERROR(54): '<=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(65): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(67): Cannot return an array.
WARNING(73): Variable 'i' may be uninitialized when used here.
ERROR(79): Symbol 'a' is already declared at line 79.
ERROR(81): Symbol 'a' is already declared at line 79.
ERROR(82): Symbol 'b' is not declared.
WARNING(84): The variable 'a' seems not to be used.
ERROR(85): Symbol 'c' is not declared.
ERROR(85): Symbol 'c' is not declared.
ERROR(86): Symbol 'c' is not declared.
WARNING(86): Variable 'b' may be uninitialized when used here.
ERROR(96): The operation '?' does not work with arrays.
ERROR(96): Unary '?' requires an operand of type int but was given type char.
ERROR(97): '/' requires operands of type int but lhs is of type char.
ERROR(97): '/' requires operands of type int but rhs is of type char.
ERROR(97): The operation '/' does not work with arrays.
ERROR(98): The operation 'sizeof' only works with arrays.
ERROR(99): 'bbb' is a simple variable and cannot be called.
ERROR(102): '<=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(105): '+' requires operands of type int but lhs is of type void.
ERROR(105): '+' requires operands of type int but rhs is of type bool.
ERROR(107): '+' requires operands of type int but lhs is of type char.
ERROR(110): Symbol 'mane' is already declared at line 91.
Number of warnings: 6
Number of errors: 56

==============
==============
./c- -P allgood.c-
WARNING(40): Variable 'aa' may be uninitialized when used here.
WARNING(41): Variable 'b' may be uninitialized when used here.
WARNING(42): Variable 'c' may be uninitialized when used here.
WARNING(48): The variable 'z' seems not to be used.
WARNING(70): Variable 'i' may be uninitialized when used here.
Func: ant returns type int [line: 1]
.   Child: 1  Compound [line: 1]
.   .   Child: 1  Return [line: 1]
.   .   .   Child: 0  Const 111 of type int [line: 1]
Sibling: 1  Func: bat returns type void [line: 2]
.   Child: 0  Parm: a of type int [line: 2]
.   Sibling: 1  Parm: c of type char [line: 2]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: b of type bool [line: 3]
.   .   .   Child: 0  Const false of type bool [line: 3]
.   .   Child: 1  Assign: <= of type int [line: 5]
.   .   .   Child: 0  Id: a of type int [line: 5]
.   .   .   Child: 1  Const 222 of type int [line: 5]
.   .   Sibling: 1  Assign: <= of type bool [line: 6]
.   .   .   Child: 0  Id: b of type bool [line: 6]
.   .   .   Child: 1  Const true of type bool [line: 6]
.   .   Sibling: 2  Assign: <= of type char [line: 7]
.   .   .   Child: 0  Id: c of type char [line: 7]
.   .   .   Child: 1  Const 'z'  of type char [line: 7]
.   .   Sibling: 3  If [line: 9]
.   .   .   Child: 0  Op: > of type bool [line: 9]
.   .   .   .   Child: 0  Id: a of type int [line: 9]
.   .   .   .   Child: 1  Const 222 of type int [line: 9]
.   .   .   Child: 1  Const 333 of type int [line: 9]
.   .   Sibling: 4  If [line: 10]
.   .   .   Child: 0  Op: < of type bool [line: 10]
.   .   .   .   Child: 0  Id: a of type int [line: 10]
.   .   .   .   Child: 1  Const 333 of type int [line: 10]
.   .   .   Child: 1  Const 444 of type int [line: 10]
.   .   .   Child: 2  Const 555 of type int [line: 10]
.   .   Sibling: 5  If [line: 11]
.   .   .   Child: 0  Op: !> of type bool [line: 11]
.   .   .   .   Child: 0  Id: a of type int [line: 11]
.   .   .   .   Child: 1  Const 666 of type int [line: 11]
.   .   .   Child: 1  If [line: 11]
.   .   .   .   Child: 0  Op: !< of type bool [line: 11]
.   .   .   .   .   Child: 0  Id: a of type int [line: 11]
.   .   .   .   .   Child: 1  Const 777 of type int [line: 11]
.   .   .   .   Child: 1  Const 888 of type int [line: 11]
.   .   .   .   Child: 2  Const 555 of type int [line: 11]
.   .   Sibling: 6  While [line: 12]
.   .   .   Child: 0  Op: = of type bool [line: 12]
.   .   .   .   Child: 0  Const 999 of type int [line: 12]
.   .   .   .   Child: 1  Id: a of type int [line: 12]
.   .   .   Child: 1  Const 1010 of type int [line: 12]
.   .   Sibling: 7  If [line: 13]
.   .   .   Child: 0  Id: b of type bool [line: 13]
.   .   .   Child: 1  If [line: 13]
.   .   .   .   Child: 0  Op: not of type bool [line: 13]
.   .   .   .   .   Child: 0  Id: b of type bool [line: 13]
.   .   .   .   Child: 1  While [line: 13]
.   .   .   .   .   Child: 0  Op: and of type bool [line: 13]
.   .   .   .   .   .   Child: 0  Id: b of type bool [line: 13]
.   .   .   .   .   .   Child: 1  Const true of type bool [line: 13]
.   .   .   .   .   Child: 1  Const 1111 of type int [line: 13]
.   .   .   .   Child: 2  Const 1212 of type int [line: 13]
.   .   Sibling: 8  If [line: 14]
.   .   .   Child: 0  Id: b of type bool [line: 14]
.   .   .   Child: 1  If [line: 14]
.   .   .   .   Child: 0  Op: not of type bool [line: 14]
.   .   .   .   .   Child: 0  Id: b of type bool [line: 14]
.   .   .   .   Child: 1  While [line: 14]
.   .   .   .   .   Child: 0  Op: or of type bool [line: 14]
.   .   .   .   .   .   Child: 0  Id: b of type bool [line: 14]
.   .   .   .   .   .   Child: 1  Const true of type bool [line: 14]
.   .   .   .   .   Child: 1  Const 1313 of type int [line: 14]
.   .   .   .   Child: 2  Const 1414 of type int [line: 14]
.   .   .   Child: 2  Const 1515 of type int [line: 14]
.   .   Sibling: 9  If [line: 15]
.   .   .   Child: 0  Assign: <= of type bool [line: 15]
.   .   .   .   Child: 0  Id: b of type bool [line: 15]
.   .   .   .   Child: 1  Const true of type bool [line: 15]
.   .   .   Child: 1  Const 1616 of type int [line: 15]
.   .   Sibling: 10  While [line: 17]
.   .   .   Child: 0  Const false of type bool [line: 17]
.   .   .   Child: 1  Break [line: 17]
.   .   Sibling: 11  Op: + of type int [line: 19]
.   .   .   Child: 0  Id: a of type int [line: 19]
.   .   .   Child: 1  Const 1717 of type int [line: 19]
.   .   Sibling: 12  Op: - of type int [line: 20]
.   .   .   Child: 0  Const 1818 of type int [line: 20]
.   .   .   Child: 1  Id: a of type int [line: 20]
.   .   Sibling: 13  Op: * of type int [line: 21]
.   .   .   Child: 0  Id: a of type int [line: 21]
.   .   .   Child: 1  Const 1919 of type int [line: 21]
.   .   Sibling: 14  Op: / of type int [line: 22]
.   .   .   Child: 0  Const 2020 of type int [line: 22]
.   .   .   Child: 1  Id: a of type int [line: 22]
.   .   Sibling: 15  Op: % of type int [line: 23]
.   .   .   Child: 0  Id: a of type int [line: 23]
.   .   .   Child: 1  Const 2121 of type int [line: 23]
.   .   Sibling: 16  Assign: += of type int [line: 25]
.   .   .   Child: 0  Id: a of type int [line: 25]
.   .   .   Child: 1  Const 1 of type int [line: 25]
.   .   Sibling: 17  Assign: -= of type int [line: 26]
.   .   .   Child: 0  Id: a of type int [line: 26]
.   .   .   Child: 1  Const 2 of type int [line: 26]
.   .   Sibling: 18  Assign: *= of type int [line: 27]
.   .   .   Child: 0  Id: a of type int [line: 27]
.   .   .   Child: 1  Const 3 of type int [line: 27]
.   .   Sibling: 19  Assign: /= of type int [line: 28]
.   .   .   Child: 0  Id: a of type int [line: 28]
.   .   .   Child: 1  Const 4 of type int [line: 28]
.   .   Sibling: 20  Op: chsign of type int [line: 30]
.   .   .   Child: 0  Id: a of type int [line: 30]
.   .   Sibling: 21  Op: not of type bool [line: 31]
.   .   .   Child: 0  Id: b of type bool [line: 31]
.   .   Sibling: 22  Op: ? of type int [line: 32]
.   .   .   Child: 0  Id: a of type int [line: 32]
Sibling: 2  Func: cat returns type char [line: 35]
.   Child: 1  Compound [line: 36]
.   .   Child: 0  Var: a of type int [line: 37]
.   .   Sibling: 1  Var: b of type bool [line: 37]
.   .   Sibling: 2  Var: c of type char [line: 37]
.   .   Sibling: 3  Var: aa is array of type int [line: 38]
.   .   Sibling: 4  Var: ba is array of type bool [line: 38]
.   .   Sibling: 5  Var: ca is array of type char [line: 38]
.   .   Child: 1  Op: [ of type int [line: 40]
.   .   .   Child: 0  Id: aa of type int [line: 40]
.   .   .   Child: 1  Const 2 of type int [line: 40]
.   .   Sibling: 1  Assign: <= of type bool [line: 41]
.   .   .   Child: 0  Op: [ of type bool [line: 41]
.   .   .   .   Child: 0  Id: ba of type bool [line: 41]
.   .   .   .   Child: 1  Id: a of type int [line: 41]
.   .   .   Child: 1  Id: b of type bool [line: 41]
.   .   Sibling: 2  Assign: <= of type char [line: 42]
.   .   .   Child: 0  Op: [ of type char [line: 42]
.   .   .   .   Child: 0  Id: ca of type char [line: 42]
.   .   .   .   Child: 1  Op: [ of type int [line: 42]
.   .   .   .   .   Child: 0  Id: aa of type int [line: 42]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 42]
.   .   .   Child: 1  Id: c of type char [line: 42]
.   .   Sibling: 3  Op: sizeof of type int [line: 44]
.   .   .   Child: 0  Id: ba of type bool [line: 44]
.   .   Sibling: 4  Op: ? of type int [line: 45]
.   .   .   Child: 0  Const 11 of type int [line: 45]
.   .   Sibling: 5  For [line: 47]
.   .   .   Child: 0  Var: z of type int [line: 47]
.   .   .   Child: 1  Range [line: 47]
.   .   .   .   Child: 0  Id: aa of undefined type [line: 47]
.   .   .   .   Child: 1  Id: aa of undefined type [line: 47]
.   .   .   Child: 2  Op: + of type int [line: 47]
.   .   .   .   Child: 0  Id: z of type int [line: 47]
.   .   .   .   Child: 1  Id: z of type int [line: 47]
.   .   Sibling: 6  For [line: 48]
.   .   .   Child: 0  Var: z of type int [line: 48]
.   .   .   Child: 1  Range [line: 48]
.   .   .   .   Child: 0  Id: ba of undefined type [line: 48]
.   .   .   .   Child: 1  Id: aa of undefined type [line: 48]
.   .   .   .   Child: 2  Id: aa of undefined type [line: 48]
.   .   .   Child: 2  Op: and of type bool [line: 48]
.   .   .   .   Child: 0  Id: b of type bool [line: 48]
.   .   .   .   Child: 1  Id: b of type bool [line: 48]
.   .   Sibling: 7  For [line: 49]
.   .   .   Child: 0  Var: z of type int [line: 49]
.   .   .   Child: 1  Range [line: 49]
.   .   .   .   Child: 0  Op: + of undefined type [line: 49]
.   .   .   .   .   Child: 0  Const 3 of type int [line: 49]
.   .   .   .   .   Child: 1  Const 4 of type int [line: 49]
.   .   .   .   Child: 1  Op: * of undefined type [line: 49]
.   .   .   .   .   Child: 0  Const 7 of type int [line: 49]
.   .   .   .   .   Child: 1  Const 8 of type int [line: 49]
.   .   .   .   Child: 2  Op: % of undefined type [line: 49]
.   .   .   .   .   Child: 0  Const 15 of type int [line: 49]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 49]
.   .   .   Child: 2  Compound [line: 49]
.   .   .   .   Child: 1  Assign: <= of type int [line: 50]
.   .   .   .   .   Child: 0  Id: a of type int [line: 50]
.   .   .   .   .   Child: 1  Id: z of type int [line: 50]
.   .   .   .   Sibling: 1  Assign: <= of type int [line: 51]
.   .   .   .   .   Child: 0  Id: z of type int [line: 51]
.   .   .   .   .   Child: 1  Id: a of type int [line: 51]
.   .   Sibling: 8  Assign: <= of type int [line: 54]
.   .   .   Child: 0  Id: aa of type int [line: 54]
.   .   .   Child: 1  Id: aa of type int [line: 54]
.   .   Sibling: 9  Op: = of type bool [line: 55]
.   .   .   Child: 0  Id: ba of type bool [line: 55]
.   .   .   Child: 1  Id: ba of type bool [line: 55]
.   .   Sibling: 10  Op: != of type bool [line: 56]
.   .   .   Child: 0  Id: ca of type char [line: 56]
.   .   .   Child: 1  Id: ca of type char [line: 56]
.   .   Sibling: 11  Op: > of type bool [line: 57]
.   .   .   Child: 0  Id: aa of type int [line: 57]
.   .   .   Child: 1  Id: aa of type int [line: 57]
.   .   Sibling: 12  Op: !< of type bool [line: 58]
.   .   .   Child: 0  Id: ba of type bool [line: 58]
.   .   .   Child: 1  Id: ba of type bool [line: 58]
.   .   Sibling: 13  Op: < of type bool [line: 59]
.   .   .   Child: 0  Id: ca of type char [line: 59]
.   .   .   Child: 1  Id: ca of type char [line: 59]
.   .   Sibling: 14  Op: !> of type bool [line: 60]
.   .   .   Child: 0  Id: aa of type int [line: 60]
.   .   .   Child: 1  Id: aa of type int [line: 60]
.   .   Sibling: 15  Assign: <= of type char [line: 62]
.   .   .   Child: 0  Id: ca of type char [line: 62]
.   .   .   Child: 1  Const is array "dogs are great" of type char [line: 62]
.   .   Sibling: 16  Return [line: 64]
.   .   .   Child: 0  Const 'm'  of type char [line: 64]
Sibling: 3  Func: dog returns type void [line: 67]
.   Child: 0  Parm: i of type int [line: 67]
.   Child: 1  Compound [line: 67]
.   .   Child: 1  If [line: 68]
.   .   .   Child: 0  Op: = of type bool [line: 68]
.   .   .   .   Child: 0  Id: i of type int [line: 68]
.   .   .   .   Child: 1  Const 3 of type int [line: 68]
.   .   .   Child: 1  Compound [line: 68]
.   .   .   .   Child: 0  Var: i of type int [line: 69]
.   .   .   .   Child: 1  Assign: <= of type int [line: 70]
.   .   .   .   .   Child: 0  Id: i of type int [line: 70]
.   .   .   .   .   Child: 1  Id: i of type int [line: 70]
Sibling: 4  Func: main returns type int [line: 74]
.   Child: 1  Compound [line: 75]
.   .   Child: 0  Var: bbb of type bool [line: 76]
.   .   Sibling: 1  Var: ccc is array of type char [line: 77]
.   .   .   Child: 0  Const is array "cows" of type char [line: 77]
.   .   Child: 1  Call: ant of type int [line: 79]
.   .   Sibling: 1  Call: bat of type void [line: 80]
.   .   .   Child: 0  Const 676 of type int [line: 80]
.   .   .   Sibling: 1  Const 'g'  of type char [line: 80]
.   .   Sibling: 2  Call: cat of type char [line: 81]
.   .   Sibling: 3  Call: bat of type void [line: 82]
.   .   .   Child: 0  Call: ant of type int [line: 82]
.   .   .   Sibling: 1  Call: cat of type char [line: 82]
.   .   Sibling: 4  Assign: <= of type bool [line: 83]
.   .   .   Child: 0  Id: bbb of type bool [line: 83]
.   .   .   Child: 1  Op: != of type bool [line: 83]
.   .   .   .   Child: 0  Op: [ of type char [line: 83]
.   .   .   .   .   Child: 0  Id: ccc of type char [line: 83]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 83]
.   .   .   .   Child: 1  Const 'r'  of type char [line: 83]
.   .   Sibling: 5  Return [line: 85]
.   .   .   Child: 0  Op: + of type int [line: 85]
.   .   .   .   Child: 0  Call: ant of type int [line: 85]
.   .   .   .   Child: 1  Const 807 of type int [line: 85]
Number of warnings: 5
Number of errors: 0

==============
==============
./c- -P array.c-
ERROR(11): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.
WARNING(12): Variable 'b' may be uninitialized when used here.
ERROR(13): Symbol 'output' is not declared.
Number of warnings: 1
Number of errors: 3

==============
==============
./c- -P arrayops.c-
ERROR(13): '<=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(14): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(18): The operation 'chsign' does not work with arrays.
ERROR(19): The operation 'chsign' does not work with arrays.
ERROR(21): Cannot index nonarray 'a'.
ERROR(22): Array index is the unindexed array 'aa'.
ERROR(22): Cannot index nonarray 'a'.
ERROR(24): Array index is the unindexed array 'aa'.
ERROR(26): The operation 'sizeof' only works with arrays.
ERROR(29): The operation '?' does not work with arrays.
ERROR(31): The operation 'not' does not work with arrays.
ERROR(33): The operation '++' does not work with arrays.
ERROR(36): The operation '+' does not work with arrays.
ERROR(37): The operation '+' does not work with arrays.
ERROR(38): The operation '+' does not work with arrays.
ERROR(41): The operation 'and' does not work with arrays.
ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): The operation 'and' does not work with arrays.
ERROR(45): Cannot index nonarray 'c'.
WARNING(45): Variable 'c' may be uninitialized when used here.
WARNING(46): Variable 'cc' may be uninitialized when used here.
ERROR(47): Cannot index nonarray 'c'.
ERROR(47): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(48): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(51): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(56): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(57): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(58): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(63): '!<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(64): '!<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(65): '!<' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(70): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(71): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(72): '<' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(75): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(75): '<' requires operands of the same type but lhs is type char and rhs is type int.
Number of warnings: 2
Number of errors: 34

==============
==============
./c- -P arrayx.c-
WARNING(2): The variable 'e' seems not to be used.
ERROR(10): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(11): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(12): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
WARNING(19): Variable 'd' may be uninitialized when used here.
Number of warnings: 2
Number of errors: 3

==============
==============
./c- -P assignb.c-
WARNING(5): The variable 'c' seems not to be used.
ERROR(7): Symbol 'x' is not declared.
ERROR(7): Symbol 'x' is not declared.
ERROR(8): Symbol 'x' is not declared.
WARNING(9): Variable 'aa' may be uninitialized when used here.
WARNING(10): Variable 'b' may be uninitialized when used here.
WARNING(12): Variable 'cc' may be uninitialized when used here.
Number of warnings: 4
Number of errors: 3

==============
==============
./c- -P assignBool.c-
ERROR(10): Symbol 'outputb' is not declared.
ERROR(12): Symbol 'outputb' is not declared.
ERROR(14): Symbol 'outputb' is not declared.
ERROR(16): Symbol 'outputb' is not declared.
ERROR(17): Symbol 'outnl' is not declared.
ERROR(20): Symbol 'outputb' is not declared.
ERROR(22): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outnl' is not declared.
WARNING(34): Variable 'zx' may be uninitialized when used here.
WARNING(34): Variable 'zy' may be uninitialized when used here.
Number of warnings: 2
Number of errors: 10

==============
==============
./c- -P assignChar.c-
ERROR(10): Symbol 'outputc' is not declared.
ERROR(12): Symbol 'outputc' is not declared.
ERROR(14): Symbol 'outputc' is not declared.
ERROR(16): Symbol 'outputc' is not declared.
ERROR(17): Symbol 'outnl' is not declared.
ERROR(19): Symbol 'outputc' is not declared.
ERROR(21): Symbol 'outputc' is not declared.
ERROR(23): Symbol 'outputc' is not declared.
ERROR(25): Symbol 'outputc' is not declared.
ERROR(26): Symbol 'outnl' is not declared.
WARNING(33): Variable 'zx' may be uninitialized when used here.
WARNING(33): Variable 'zy' may be uninitialized when used here.
Number of warnings: 2
Number of errors: 10

==============
==============
./c- -P assignInt.c-
ERROR(10): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.
ERROR(14): Symbol 'output' is not declared.
ERROR(16): Symbol 'output' is not declared.
ERROR(17): Symbol 'outnl' is not declared.
ERROR(19): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.
ERROR(23): Symbol 'output' is not declared.
ERROR(25): Symbol 'output' is not declared.
ERROR(26): Symbol 'outnl' is not declared.
WARNING(33): Variable 'zx' may be uninitialized when used here.
WARNING(33): Variable 'zy' may be uninitialized when used here.
Number of warnings: 2
Number of errors: 10

==============
==============
./c- -P break2.c-
ERROR(10): Symbol 'output' is not declared.
ERROR(12): Symbol 'outnl' is not declared.
ERROR(16): Symbol 'output' is not declared.
ERROR(17): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 4

==============
==============
./c- -P break3.c-
WARNING(4): The variable 'x' seems not to be used.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Child: 1  While [line: 5]
.   .   .   Child: 0  Const true of type bool [line: 5]
.   .   .   Child: 1  For [line: 5]
.   .   .   .   Child: 0  Var: x of type int [line: 5]
.   .   .   .   Child: 1  Range [line: 5]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 5]
.   .   .   .   .   Child: 1  Id: x of undefined type [line: 5]
.   .   .   .   Child: 2  If [line: 5]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 5]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 5]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 5]
.   .   .   .   .   Child: 1  Break [line: 5]
.   .   .   .   .   Child: 2  Break [line: 5]
Number of warnings: 1
Number of errors: 0

==============
==============
./c- -P break4.c-
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  While [line: 4]
.   .   .   Child: 0  Const true of type bool [line: 4]
.   .   .   Child: 1  Compound [line: 4]
.   .   .   .   Child: 1  While [line: 5]
.   .   .   .   .   Child: 0  Const true of type bool [line: 5]
.   .   .   .   .   Child: 1  Compound [line: 5]
.   .   .   .   .   .   Child: 1  Break [line: 6]
.   .   .   .   Sibling: 1  Break [line: 8]
.   .   Sibling: 1  Break [line: 10]
Number of warnings: 0
Number of errors: 0

==============
==============
./c- -P break.c-
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  While [line: 4]
.   .   .   Child: 0  Const true of type bool [line: 4]
.   .   .   Child: 1  Compound [line: 4]
.   .   .   .   Child: 1  Const 666 of type int [line: 5]
.   .   .   .   Sibling: 1  Break [line: 6]
.   .   .   .   Sibling: 2  Const 777 of type int [line: 7]
.   .   .   .   Sibling: 3  Break [line: 8]
Number of warnings: 0
Number of errors: 0

==============
==============
./c- -P call2.c-
ERROR(3): Symbol 'output' is not declared.
ERROR(5): Symbol 'outnl' is not declared.
ERROR(10): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.
ERROR(17): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.
ERROR(29): Symbol 'output' is not declared.
ERROR(30): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 8

==============
==============
./c- -P call3.c-
ERROR(3): Symbol 'output' is not declared.
ERROR(5): Symbol 'outnl' is not declared.
ERROR(12): Symbol 'output' is not declared.
ERROR(14): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.
ERROR(23): Symbol 'output' is not declared.
ERROR(34): Symbol 'output' is not declared.
ERROR(35): Symbol 'output' is not declared.
ERROR(36): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 9

==============
==============
./c- -P call.c-
ERROR(4): Symbol 'output' is not declared.
ERROR(5): Symbol 'outputb' is not declared.
ERROR(6): Symbol 'outputc' is not declared.
ERROR(7): Symbol 'outnl' is not declared.
ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outputb' is not declared.
ERROR(15): Symbol 'outputc' is not declared.
ERROR(16): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 8

==============
==============
./c- -P callerr.c-
ERROR(LINKER): A function named 'main()' must be defined.
ERROR(16): Symbol 'lyra' is not declared.
ERROR(22): Symbol 'lyra' is not declared.
ERROR(23): Symbol 'lyra' is not declared.
ERROR(27): '<=' requires operands of the same type but lhs is type int and rhs is type void.
Number of warnings: 0
Number of errors: 5

==============
==============
./c- -P constants.c-
ERROR(4): Symbol 'output' is not declared.
ERROR(5): Symbol 'outputb' is not declared.
ERROR(6): Symbol 'outputb' is not declared.
ERROR(7): Symbol 'outputc' is not declared.
ERROR(8): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 5

==============
==============
./c- -P cover.c-
ERROR(19): Unary '--' requires an operand of type int but was given type char.
ERROR(20): Unary '?' requires an operand of type int but was given type char.
ERROR(22): Cannot index nonarray 'e'.
ERROR(22): Cannot index nonarray 'e'.
ERROR(22): '+' requires operands of type int but lhs is of type bool.
ERROR(22): '+' requires operands of type int but rhs is of type bool.
ERROR(23): Array 'e' should be indexed by type int but got type bool.
ERROR(23): Cannot index nonarray 'e'.
ERROR(23): Cannot index nonarray 'e'.
ERROR(26): 'and' requires operands of type bool but lhs is of type int.
ERROR(26): 'and' requires operands of type bool but rhs is of type int.
WARNING(31): The variable 'i' seems not to be used.
WARNING(31): The variable 'x' seems not to be used.
WARNING(35): The variable 'a' seems not to be used.
WARNING(36): The variable 'c' seems not to be used.
WARNING(38): The variable 'g' seems not to be used.
WARNING(39): Variable 'b' may be uninitialized when used here.
WARNING(39): Variable 'd' may be uninitialized when used here.
WARNING(39): Variable 'e' may be uninitialized when used here.
WARNING(39): Variable 'f' may be uninitialized when used here.
Number of warnings: 9
Number of errors: 11

==============
==============
./c- -P decl.c-
WARNING(4): The variable 'a' seems not to be used.
WARNING(5): The variable 'b' seems not to be used.
WARNING(6): The variable 'c' seems not to be used.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: a of type int [line: 4]
.   .   Sibling: 1  Var: b of type bool [line: 5]
.   .   Sibling: 2  Var: c of type char [line: 6]
Number of warnings: 3
Number of errors: 0

==============
==============
./c- -P emptyline.c-
WARNING(6): The variable 'x' seems not to be used.
WARNING(12): The variable 'x' seems not to be used.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 2]
Sibling: 1  Func: dogs returns type void [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]
.   .   Child: 1  If [line: 9]
.   .   .   Child: 0  Const true of type bool [line: 9]
.   .   Sibling: 1  While [line: 11]
.   .   .   Child: 0  Const true of type bool [line: 11]
.   .   Sibling: 2  For [line: 12]
.   .   .   Child: 0  Var: x of type int [line: 12]
.   .   .   Child: 1  Range [line: 12]
.   .   .   .   Child: 0  Const 1 of type int [line: 12]
.   .   .   .   Child: 1  Const 10 of type int [line: 12]
.   .   Sibling: 3  Compound [line: 13]
Number of warnings: 2
Number of errors: 0

==============
==============
./c- -P everythingS23.c-
WARNING(46): Variable 'trousers' may be uninitialized when used here.
WARNING(54): The variable 'cheese' seems not to be used.
WARNING(54): The variable 'launch' seems not to be used.
WARNING(58): The variable 'c' seems not to be used.
WARNING(59): The variable 'i' seems not to be used.
WARNING(62): Variable 'Wensleydale' may be uninitialized when used here.
WARNING(70): The variable 'skein' seems not to be used.
WARNING(82): Variable 'chicken' may be uninitialized when used here.
WARNING(82): Variable 'run' may be uninitialized when used here.
WARNING(85): Variable 'gromit' may be uninitialized when used here.
WARNING(85): Variable 'wallace' may be uninitialized when used here.
WARNING(90): The variable 'y' seems not to be used.
WARNING(98): The variable 'pastry' seems not to be used.
WARNING(116): The variable 'wool' seems not to be used.
WARNING(125): Variable 'yarn' may be uninitialized when used here.
WARNING(127): Variable 'preston' may be uninitialized when used here.
WARNING(127): Variable 'shaun' may be uninitialized when used here.
Var: gromit of type int [line: 6]
Sibling: 1  Var: mysteriousPenguin of type int [line: 6]
Sibling: 2  Func: wallace returns type void [line: 9]
.   Child: 0  Parm: wrong of type int [line: 9]
.   Sibling: 1  Parm: trousers of type int [line: 9]
.   Child: 1  Compound [line: 10]
.   .   Child: 0  Var: close of type bool [line: 11]
.   .   .   Child: 0  Const true of type bool [line: 11]
.   .   Sibling: 1  Var: shave of type bool [line: 11]
.   .   .   Child: 0  Const false of type bool [line: 11]
.   .   Sibling: 2  Var: cheese of type int [line: 12]
.   .   .   Child: 0  Const 17 of type int [line: 12]
.   .   Child: 1  Const 1729 of type int [line: 14]
.   .   Sibling: 1  Id: close of type bool [line: 15]
.   .   Sibling: 2  Op: + of type int [line: 16]
.   .   .   Child: 0  Op: * of type int [line: 16]
.   .   .   .   Child: 0  Const 11 of type int [line: 16]
.   .   .   .   Child: 1  Const 22 of type int [line: 16]
.   .   .   Child: 1  Op: * of type int [line: 16]
.   .   .   .   Child: 0  Const 33 of type int [line: 16]
.   .   .   .   Child: 1  Const 44 of type int [line: 16]
.   .   Sibling: 3  Assign: <= of type bool [line: 17]
.   .   .   Child: 0  Id: close of type bool [line: 17]
.   .   .   Child: 1  Id: shave of type bool [line: 17]
.   .   Sibling: 4  Assign: <= of type int [line: 18]
.   .   .   Child: 0  Id: wrong of type int [line: 18]
.   .   .   Child: 1  Op: % of type int [line: 18]
.   .   .   .   Child: 0  Id: trousers of type int [line: 18]
.   .   .   .   Child: 1  Op: / of type int [line: 18]
.   .   .   .   .   Child: 0  Const 666 of type int [line: 18]
.   .   .   .   .   Child: 1  Id: wrong of type int [line: 18]
.   .   Sibling: 5  Assign: <= of type int [line: 19]
.   .   .   Child: 0  Id: gromit of type int [line: 19]
.   .   .   Child: 1  Op: + of type int [line: 19]
.   .   .   .   Child: 0  Op: - of type int [line: 19]
.   .   .   .   .   Child: 0  Op: * of type int [line: 19]
.   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 19]
.   .   .   .   .   .   Child: 1  Id: trousers of type int [line: 19]
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 19]
.   .   .   .   Child: 1  Op: chsign of type int [line: 19]
.   .   .   .   .   Child: 0  Const 42 of type int [line: 19]
.   .   Sibling: 6  Assign: += of type int [line: 20]
.   .   .   Child: 0  Id: gromit of type int [line: 20]
.   .   .   Child: 1  Const 27182818 of type int [line: 20]
.   .   Sibling: 7  Assign: -= of type int [line: 21]
.   .   .   Child: 0  Id: gromit of type int [line: 21]
.   .   .   Child: 1  Op: chsign of type int [line: 21]
.   .   .   .   Child: 0  Const 31415927 of type int [line: 21]
.   .   Sibling: 8  Assign: /= of type int [line: 22]
.   .   .   Child: 0  Id: gromit of type int [line: 22]
.   .   .   Child: 1  Assign: *= of type int [line: 22]
.   .   .   .   Child: 0  Id: wrong of type int [line: 22]
.   .   .   .   Child: 1  Const 42 of type int [line: 22]
.   .   Sibling: 9  Assign: <= of type bool [line: 23]
.   .   .   Child: 0  Id: close of type bool [line: 23]
.   .   .   Child: 1  Op: and of type bool [line: 23]
.   .   .   .   Child: 0  Op: < of type bool [line: 23]
.   .   .   .   .   Child: 0  Id: wrong of type int [line: 23]
.   .   .   .   .   Child: 1  Id: trousers of type int [line: 23]
.   .   .   .   Child: 1  Op: !> of type bool [line: 23]
.   .   .   .   .   Child: 0  Id: trousers of type int [line: 23]
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 23]
.   .   Sibling: 10  Assign: <= of type bool [line: 24]
.   .   .   Child: 0  Id: shave of type bool [line: 24]
.   .   .   Child: 1  Op: and of type bool [line: 24]
.   .   .   .   Child: 0  Op: > of type bool [line: 24]
.   .   .   .   .   Child: 0  Id: wrong of type int [line: 24]
.   .   .   .   .   Child: 1  Id: trousers of type int [line: 24]
.   .   .   .   Child: 1  Op: !< of type bool [line: 24]
.   .   .   .   .   Child: 0  Id: trousers of type int [line: 24]
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 24]
.   .   Sibling: 11  Compound [line: 25]
.   .   .   Child: 0  Var: a of type int [line: 26]
.   .   .   Sibling: 1  Var: grand of type int [line: 26]
.   .   .   .   Child: 0  Op: / of type int [line: 26]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 26]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 26]
.   .   .   Sibling: 2  Var: day of type int [line: 26]
.   .   .   .   Child: 0  Op: * of type int [line: 26]
.   .   .   .   .   Child: 0  Const 3 of type int [line: 26]
.   .   .   .   .   Child: 1  Const 4 of type int [line: 26]
.   .   .   Sibling: 3  Var: out of type int [line: 26]
.   .   .   .   Child: 0  Op: chsign of type int [line: 26]
.   .   .   .   .   Child: 0  Const 9 of type int [line: 26]
.   .   .   Child: 1  Assign: <= of type int [line: 27]
.   .   .   .   Child: 0  Id: a of type int [line: 27]
.   .   .   .   Child: 1  Assign: += of type int [line: 27]
.   .   .   .   .   Child: 0  Id: grand of type int [line: 27]
.   .   .   .   .   Child: 1  Assign: -= of type int [line: 27]
.   .   .   .   .   .   Child: 0  Id: day of type int [line: 27]
.   .   .   .   .   .   Child: 1  Id: out of type int [line: 27]
.   .   Sibling: 12  Assign: <= of type bool [line: 29]
.   .   .   Child: 0  Id: close of type bool [line: 29]
.   .   .   Child: 1  Op: and of type bool [line: 29]
.   .   .   .   Child: 0  Op: < of type bool [line: 29]
.   .   .   .   .   Child: 0  Op: + of type int [line: 29]
.   .   .   .   .   .   Child: 0  Op: * of type int [line: 29]
.   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 29]
.   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 29]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 29]
.   .   .   .   .   Child: 1  Op: * of type int [line: 29]
.   .   .   .   .   .   Child: 0  Const 4 of type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 5 of type int [line: 29]
.   .   .   .   Child: 1  Op: > of type bool [line: 29]
.   .   .   .   .   Child: 0  Op: + of type int [line: 29]
.   .   .   .   .   .   Child: 0  Const 6 of type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 7 of type int [line: 29]
.   .   .   .   .   Child: 1  Op: chsign of type int [line: 29]
.   .   .   .   .   .   Child: 0  Const 3 of type int [line: 29]
.   .   Sibling: 13  Assign: <= of type bool [line: 30]
.   .   .   Child: 0  Id: shave of type bool [line: 30]
.   .   .   Child: 1  Op: or of type bool [line: 30]
.   .   .   .   Child: 0  Const true of type bool [line: 30]
.   .   .   .   Child: 1  Op: and of type bool [line: 30]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 30]
.   .   .   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 30]
.   .   .   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 30]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Const 4 of type int [line: 30]
.   .   .   .   .   .   .   Child: 1  Const 5 of type int [line: 30]
.   .   .   .   .   Child: 1  Op: > of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Op: + of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Const 6 of type int [line: 30]
.   .   .   .   .   .   .   Child: 1  Const 7 of type int [line: 30]
.   .   .   .   .   .   Child: 1  Op: chsign of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 30]
.   .   Sibling: 14  If [line: 31]
.   .   .   Child: 0  Op: != of type bool [line: 31]
.   .   .   .   Child: 0  Id: shave of type bool [line: 31]
.   .   .   .   Child: 1  Id: close of type bool [line: 31]
.   .   .   Child: 1  Assign: <= of type bool [line: 31]
.   .   .   .   Child: 0  Id: shave of type bool [line: 31]
.   .   .   .   Child: 1  Op: not of type bool [line: 31]
.   .   .   .   .   Child: 0  Id: close of type bool [line: 31]
.   .   Sibling: 15  If [line: 32]
.   .   .   Child: 0  Op: not of type bool [line: 32]
.   .   .   .   Child: 0  Op: or of type bool [line: 32]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id: shave of type bool [line: 32]
.   .   .   .   .   .   Child: 1  Id: close of type bool [line: 32]
.   .   .   .   .   Child: 1  Op: not of type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id: close of type bool [line: 32]
.   .   .   Child: 1  Assign: <= of type bool [line: 32]
.   .   .   .   Child: 0  Id: shave of type bool [line: 32]
.   .   .   .   Child: 1  Const true of type bool [line: 32]
.   .   .   Child: 2  Assign: <= of type bool [line: 33]
.   .   .   .   Child: 0  Id: close of type bool [line: 33]
.   .   .   .   Child: 1  Const false of type bool [line: 33]
.   .   Sibling: 16  Assign: <= of type int [line: 34]
.   .   .   Child: 0  Id: mysteriousPenguin of type int [line: 34]
.   .   .   Child: 1  Op: chsign of type int [line: 34]
.   .   .   .   Child: 0  Op: - of type int [line: 34]
.   .   .   .   .   Child: 0  Op: chsign of type int [line: 34]
.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 34]
.   .   .   .   .   .   .   Child: 0  Const 8 of type int [line: 34]
.   .   .   .   .   Child: 1  Op: chsign of type int [line: 34]
.   .   .   .   .   .   Child: 0  Assign: -- of type int [line: 34]
.   .   .   .   .   .   .   Child: 0  Id: cheese of type int [line: 34]
.   .   Sibling: 17  While [line: 36]
.   .   .   Child: 0  Id: shave of type bool [line: 36]
.   .   .   Child: 1  Compound [line: 36]
.   .   .   .   Child: 0  Var: were of type int [line: 37]
.   .   .   .   Sibling: 1  Var: rabbit of type int [line: 37]
.   .   .   .   Sibling: 2  Var: sheep is array of type int [line: 38]
.   .   .   .   Child: 1  Assign: <= of type int [line: 40]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 40]
.   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 40]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 40]
.   .   .   .   .   Child: 1  Const 1618 of type int [line: 40]
.   .   .   .   Sibling: 1  If [line: 41]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 41]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 41]
.   .   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 41]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 41]
.   .   .   .   .   .   Child: 1  Const 496 of type int [line: 41]
.   .   .   .   .   Child: 1  Break [line: 41]
.   .   .   .   Sibling: 2  Call: wallace of type void [line: 42]
.   .   .   .   .   Child: 0  Assign: -- of type int [line: 42]
.   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 42]
.   .   .   .   .   Sibling: 1  Op: - of type int [line: 42]
.   .   .   .   .   .   Child: 0  Id: were of type int [line: 42]
.   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 42]
.   .   .   .   Sibling: 3  Compound [line: 43]
.   .   .   .   .   Child: 0  Var: the of type int [line: 44]
.   .   .   .   .   Sibling: 1  Var: wrong of type int [line: 44]
.   .   .   .   .   Sibling: 2  Var: trousers of type int [line: 44]
.   .   .   .   .   Child: 1  Assign: <= of type int [line: 46]
.   .   .   .   .   .   Child: 0  Id: the of type int [line: 46]
.   .   .   .   .   .   Child: 1  Assign: += of type int [line: 46]
.   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 46]
.   .   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 46]
.   .   .   .   .   .   .   .   Child: 0  Id: trousers of type int [line: 46]
.   .   .   .   .   Sibling: 1  If [line: 47]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 47]
.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]
.   .   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 47]
.   .   .   .   .   .   Child: 1  Assign: <= of type int [line: 47]
.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]
.   .   .   .   .   .   .   Child: 1  Assign: -- of type int [line: 47]
.   .   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 47]
.   .   Sibling: 18  Return [line: 50]
Sibling: 3  Func: penguin returns type bool [line: 54]
.   Child: 0  Parm: Feathers of type char [line: 54]
.   Sibling: 1  Parm: McGraw is array of type char [line: 54]
.   Sibling: 2  Parm: moon of type bool [line: 54]
.   Sibling: 3  Parm: cheese of type bool [line: 54]
.   Sibling: 4  Parm: launch of type int [line: 54]
.   Child: 1  Compound [line: 55]
.   .   Child: 0  Var: tottington of type char [line: 56]
.   .   .   Child: 0  Const 'x'  of type char [line: 56]
.   .   Sibling: 1  Var: Wensleydale is array of type char [line: 57]
.   .   Sibling: 2  Var: c of type char [line: 58]
.   .   Sibling: 3  Var: i of type int [line: 59]
.   .   Child: 1  Assign: <= of type char [line: 61]
.   .   .   Child: 0  Id: tottington of type char [line: 61]
.   .   .   Child: 1  Id: Feathers of type char [line: 61]
.   .   Sibling: 1  Assign: <= of type bool [line: 62]
.   .   .   Child: 0  Id: moon of type bool [line: 62]
.   .   .   Child: 1  Op: and of type bool [line: 62]
.   .   .   .   Child: 0  Op: !> of type bool [line: 62]
.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 62]
.   .   .   .   .   Child: 1  Id: Wensleydale of type char [line: 62]
.   .   .   .   Child: 1  Id: moon of type bool [line: 62]
.   .   Sibling: 2  Assign: <= of type char [line: 63]
.   .   .   Child: 0  Id: Wensleydale of type char [line: 63]
.   .   .   Child: 1  Id: McGraw of type char [line: 63]
.   .   Sibling: 3  Assign: <= of type char [line: 64]
.   .   .   Child: 0  Op: [ of type char [line: 64]
.   .   .   .   Child: 0  Id: Wensleydale of type char [line: 64]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 64]
.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 64]
.   .   .   Child: 1  Const 'Q'  of type char [line: 64]
.   .   Sibling: 4  Assign: <= of type char [line: 65]
.   .   .   Child: 0  Op: [ of type char [line: 65]
.   .   .   .   Child: 0  Id: McGraw of type char [line: 65]
.   .   .   .   Child: 1  Const 3 of type int [line: 65]
.   .   .   Child: 1  Const 'A'  of type char [line: 65]
Sibling: 4  Func: Wendolene returns type int [line: 68]
.   Child: 0  Parm: wool of type int [line: 68]
.   Sibling: 1  Parm: shaun of type bool [line: 68]
.   Sibling: 2  Parm: yarn is array of type int [line: 68]
.   Sibling: 3  Parm: preston is array of type bool [line: 68]
.   Child: 1  Compound [line: 69]
.   .   Child: 0  Var: skein of type int [line: 70]
.   .   Child: 1  Assign: <= of type bool [line: 71]
.   .   .   Child: 0  Op: [ of type bool [line: 71]
.   .   .   .   Child: 0  Id: preston of type bool [line: 71]
.   .   .   .   Child: 1  Const 3 of type int [line: 71]
.   .   .   Child: 1  Op: or of type bool [line: 71]
.   .   .   .   Child: 0  Op: > of type bool [line: 71]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 71]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 71]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 71]
.   .   .   .   .   Child: 1  Id: wool of type int [line: 71]
.   .   .   .   Child: 1  Op: not of type bool [line: 71]
.   .   .   .   .   Child: 0  Id: shaun of type bool [line: 71]
.   .   Sibling: 1  Return [line: 72]
.   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 72]
.   .   .   .   .   .   Child: 1  Op: sizeof of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 72]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Const 7 of type int [line: 72]
.   .   .   .   .   .   .   Child: 1  Id: wool of type int [line: 72]
.   .   .   .   Child: 1  Op: [ of type int [line: 72]
.   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   Child: 1  Op: - of type int [line: 72]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 1  Op: * of type int [line: 72]
.   .   .   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]
.   .   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 72]
.   .   .   .   .   .   Child: 1  Const 4 of type int [line: 72]
Sibling: 5  Func: ramsBottom returns type bool [line: 76]
.   Child: 1  Compound [line: 77]
.   .   Child: 0  Var: chicken is array of type int [line: 78]
.   .   Sibling: 1  Var: run is array of type bool [line: 79]
.   .   Sibling: 2  Var: wallace is array of type int [line: 80]
.   .   Sibling: 3  Var: gromit is array of type int [line: 80]
.   .   Child: 1  Op: * of type int [line: 82]
.   .   .   Child: 0  Const 42 of type int [line: 82]
.   .   .   Child: 1  Call: Wendolene of type int [line: 82]
.   .   .   .   Child: 0  Op: + of type int [line: 82]
.   .   .   .   .   Child: 0  Op: + of type int [line: 82]
.   .   .   .   .   .   Child: 0  Const 1 of type int [line: 82]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 82]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 82]
.   .   .   .   Sibling: 1  Op: or of type bool [line: 82]
.   .   .   .   .   Child: 0  Op: not of type bool [line: 82]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 82]
.   .   .   .   .   Child: 1  Op: and of type bool [line: 82]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 82]
.   .   .   .   .   .   Child: 1  Const false of type bool [line: 82]
.   .   .   .   Sibling: 2  Id: chicken of type int [line: 82]
.   .   .   .   Sibling: 3  Id: run of type bool [line: 82]
.   .   Sibling: 1  Op: [ of type bool [line: 83]
.   .   .   Child: 0  Id: run of type bool [line: 83]
.   .   .   Child: 1  Op: - of type int [line: 83]
.   .   .   .   Child: 0  Op: sizeof of type int [line: 83]
.   .   .   .   .   Child: 0  Id: run of type bool [line: 83]
.   .   .   .   Child: 1  Const 1 of type int [line: 83]
.   .   Sibling: 2  Return [line: 85]
.   .   .   Child: 0  Op: not of type bool [line: 85]
.   .   .   .   Child: 0  Op: !< of type bool [line: 85]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 85]
.   .   .   .   .   .   Child: 0  Id: wallace of type int [line: 85]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 85]
.   .   .   .   .   Child: 1  Op: * of type int [line: 85]
.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 85]
.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 85]
.   .   .   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 85]
.   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 85]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 85]
Sibling: 6  Func: cheese returns type int [line: 88]
.   Child: 0  Parm: x of type int [line: 88]
.   Sibling: 1  Parm: y of type int [line: 88]
.   Child: 1  Compound [line: 88]
.   .   Child: 1  While [line: 88]
.   .   .   Child: 0  Op: > of type bool [line: 88]
.   .   .   .   Child: 0  Id: x of type int [line: 88]
.   .   .   .   Child: 1  Const 0 of type int [line: 88]
.   .   .   Child: 1  If [line: 88]
.   .   .   .   Child: 0  Op: > of type bool [line: 88]
.   .   .   .   .   Child: 0  Id: y of type int [line: 88]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 88]
.   .   .   .   Child: 1  Assign: -- of type int [line: 88]
.   .   .   .   .   Child: 0  Id: x of type int [line: 88]
.   .   .   .   Child: 2  Return [line: 88]
.   .   .   .   .   Child: 0  Op: % of type int [line: 88]
.   .   .   .   .   .   Child: 0  Op: * of type int [line: 88]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 88]
.   .   .   .   .   .   .   Child: 1  Id: x of type int [line: 88]
.   .   .   .   .   .   Child: 1  Id: y of type int [line: 88]
Sibling: 7  Func: Wensleydale returns type int [line: 90]
.   Child: 0  Parm: x of type int [line: 90]
.   Sibling: 1  Parm: y of type int [line: 90]
.   Child: 1  Compound [line: 90]
.   .   Child: 1  Return [line: 90]
.   .   .   Child: 0  Call: cheese of type int [line: 90]
.   .   .   .   Child: 0  Id: x of type int [line: 90]
.   .   .   .   Sibling: 1  Id: gromit of type int [line: 90]
Sibling: 8  Func: LadyCampanula returns type int [line: 92]
.   Child: 0  Parm: c of type char [line: 92]
.   Sibling: 1  Parm: s is array of type char [line: 92]
.   Child: 1  Compound [line: 92]
.   .   Child: 1  While [line: 92]
.   .   .   Child: 0  Const true of type bool [line: 92]
.   .   .   Child: 1  For [line: 92]
.   .   .   .   Child: 0  Var: i of type int [line: 92]
.   .   .   .   Child: 1  Range [line: 92]
.   .   .   .   .   Child: 0  Op: - of undefined type [line: 92]
.   .   .   .   .   .   Child: 0  Op: sizeof of undefined type [line: 92]
.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 92]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 92]
.   .   .   .   .   Child: 2  Op: chsign of undefined type [line: 92]
.   .   .   .   .   .   Child: 0  Const 1 of type int [line: 92]
.   .   .   .   Child: 2  If [line: 92]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 92]
.   .   .   .   .   .   Child: 0  Op: [ of type char [line: 92]
.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 92]
.   .   .   .   .   .   Child: 1  Id: c of type char [line: 92]
.   .   .   .   .   Child: 1  Return [line: 92]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 92]
Sibling: 9  Func: MrsTweedy returns type char [line: 95]
.   Child: 0  Parm: c of type char [line: 95]
.   Sibling: 1  Parm: s is array of type char [line: 95]
.   Child: 1  Compound [line: 96]
.   .   Child: 1  For [line: 97]
.   .   .   Child: 0  Var: ginger of type int [line: 97]
.   .   .   Child: 1  Range [line: 97]
.   .   .   .   Child: 0  Const 0 of type int [line: 97]
.   .   .   .   Child: 1  Const 10 of type int [line: 97]
.   .   .   Child: 2  Assign: <= of type char [line: 97]
.   .   .   .   Child: 0  Op: [ of type char [line: 97]
.   .   .   .   .   Child: 0  Id: s of type char [line: 97]
.   .   .   .   .   Child: 1  Id: ginger of type int [line: 97]
.   .   .   .   Child: 1  Id: c of type char [line: 97]
.   .   Sibling: 1  For [line: 98]
.   .   .   Child: 0  Var: pastry of type int [line: 98]
.   .   .   Child: 1  Range [line: 98]
.   .   .   .   Child: 0  Const 0 of type int [line: 98]
.   .   .   .   Child: 1  Const 2 of type int [line: 98]
.   .   .   .   Child: 2  Const 7 of type int [line: 98]
.   .   .   Child: 2  If [line: 98]
.   .   .   .   Child: 0  Op: = of type bool [line: 98]
.   .   .   .   .   Child: 0  Op: [ of type char [line: 98]
.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 98]
.   .   .   .   .   Child: 1  Op: [ of type char [line: 98]
.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 98]
.   .   .   .   Child: 1  Break [line: 98]
.   .   Sibling: 2  While [line: 99]
.   .   .   Child: 0  Const true of type bool [line: 99]
.   .   .   Child: 1  Break [line: 99]
.   .   Sibling: 3  Return [line: 101]
.   .   .   Child: 0  Const 'x'  of type char [line: 101]
Sibling: 10  Func: TheWereRabbit returns type char [line: 104]
.   Child: 0  Parm: x of type int [line: 104]
.   Child: 1  Compound [line: 105]
.   .   Child: 1  If [line: 106]
.   .   .   Child: 0  Op: = of type bool [line: 106]
.   .   .   .   Child: 0  Id: x of type int [line: 106]
.   .   .   .   Child: 1  Const 0 of type int [line: 106]
.   .   .   Child: 1  Return [line: 106]
.   .   .   .   Child: 0  Const '@'  of type char [line: 106]
.   .   .   Child: 2  If [line: 107]
.   .   .   .   Child: 0  Op: = of type bool [line: 107]
.   .   .   .   .   Child: 0  Id: x of type int [line: 107]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 107]
.   .   .   .   Child: 1  Return [line: 107]
.   .   .   .   .   Child: 0  Const 'a'  of type char [line: 107]
.   .   .   .   Child: 2  If [line: 108]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 108]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 108]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 108]
.   .   .   .   .   Child: 1  Return [line: 108]
.   .   .   .   .   .   Child: 0  Const 'b'  of type char [line: 108]
.   .   .   .   .   Child: 2  If [line: 109]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 109]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 109]
.   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 109]
.   .   .   .   .   .   Child: 1  Return [line: 109]
.   .   .   .   .   .   .   Child: 0  Const 'c'  of type char [line: 109]
.   .   .   .   .   .   Child: 2  If [line: 110]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 110]
.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 110]
.   .   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 110]
.   .   .   .   .   .   .   Child: 1  Return [line: 110]
.   .   .   .   .   .   .   .   Child: 0  Const 'd'  of type char [line: 110]
.   .   .   .   .   .   .   Child: 2  Return [line: 111]
.   .   .   .   .   .   .   .   Child: 0  Const ' '  of type char [line: 111]
Sibling: 11  Func: main returns type int [line: 114]
.   Child: 1  Compound [line: 115]
.   .   Child: 0  Var: wool of type int [line: 116]
.   .   Sibling: 1  Var: yarn is array of type int [line: 116]
.   .   Sibling: 2  Var: shaun of type bool [line: 117]
.   .   Sibling: 3  Var: preston is array of type bool [line: 117]
.   .   Sibling: 4  Var: rocky is array of type char [line: 118]
.   .   Child: 1  Call: wallace of type void [line: 120]
.   .   .   Child: 0  Call: cheese of type int [line: 120]
.   .   .   .   Child: 0  Const 62 of type int [line: 120]
.   .   .   .   Sibling: 1  Op: chsign of type int [line: 120]
.   .   .   .   .   Child: 0  Const 311 of type int [line: 120]
.   .   .   Sibling: 1  Id: gromit of type int [line: 120]
.   .   Sibling: 1  Assign: <= of type char [line: 121]
.   .   .   Child: 0  Id: rocky of type char [line: 121]
.   .   .   Child: 1  Const is array "molybdenum" of type char [line: 121]
.   .   Sibling: 2  Call: MrsTweedy of type char [line: 123]
.   .   .   Child: 0  Const 'Z'  of type char [line: 123]
.   .   .   Sibling: 1  Id: rocky of type char [line: 123]
.   .   Sibling: 3  Op: + of type int [line: 125]
.   .   .   Child: 0  Op: [ of type int [line: 125]
.   .   .   .   Child: 0  Id: yarn of type int [line: 125]
.   .   .   .   Child: 1  Op: ? of type int [line: 125]
.   .   .   .   .   Child: 0  Const 100 of type int [line: 125]
.   .   .   Child: 1  Op: [ of type int [line: 125]
.   .   .   .   Child: 0  Id: yarn of type int [line: 125]
.   .   .   .   Child: 1  Op: ? of type int [line: 125]
.   .   .   .   .   Child: 0  Op: sizeof of type int [line: 125]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 125]
.   .   Sibling: 4  Return [line: 127]
.   .   .   Child: 0  Call: Wendolene of type int [line: 127]
.   .   .   .   Child: 0  Op: * of type int [line: 127]
.   .   .   .   .   Child: 0  Op: sizeof of type int [line: 127]
.   .   .   .   .   .   Child: 0  Id: preston of type bool [line: 127]
.   .   .   .   .   Child: 1  Op: sizeof of type int [line: 127]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 127]
.   .   .   .   Sibling: 1  Id: shaun of type bool [line: 127]
.   .   .   .   Sibling: 2  Id: yarn of type int [line: 127]
.   .   .   .   Sibling: 3  Id: preston of type bool [line: 127]
Sibling: 12  Var: aBigLongVariableName6andthx1138 of type bool [line: 130]
Sibling: 13  Var: odd of type int [line: 131]
Sibling: 14  Var: separation of type int [line: 131]
Sibling: 15  Var: of of type int [line: 131]
Sibling: 16  Var: stuff of type int [line: 132]
Sibling: 17  Var: ant is array of type char [line: 134]
.   Child: 0  Const is array "unwrinkled" of type char [line: 134]
Sibling: 18  Var: bat of type char [line: 135]
.   Child: 0  Const '''  of type char [line: 135]
Sibling: 19  Var: cat of type char [line: 136]
.   Child: 0  Const 't'  of type char [line: 136]
Sibling: 20  Var: dog of type char [line: 137]
.   Child: 0  Const '
'  of type char [line: 137]
Sibling: 21  Var: hog of type char [line: 138]
.   Child: 0  Const ' '  of type char [line: 138]
Number of warnings: 17
Number of errors: 0

==============
==============
./c- -P exp.c-
ERROR(8): Symbol 'output' is not declared.
ERROR(9): Symbol 'output' is not declared.
ERROR(10): Symbol 'output' is not declared.
ERROR(11): Symbol 'outnl' is not declared.
ERROR(12): Symbol 'output' is not declared.
ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outnl' is not declared.
ERROR(15): Symbol 'output' is not declared.
ERROR(16): Symbol 'output' is not declared.
ERROR(17): Symbol 'outnl' is not declared.
ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'outnl' is not declared.
ERROR(22): Symbol 'outputb' is not declared.
ERROR(23): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outnl' is not declared.
ERROR(25): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outnl' is not declared.
ERROR(28): Symbol 'outputb' is not declared.
ERROR(29): Symbol 'outputb' is not declared.
ERROR(30): Symbol 'outnl' is not declared.
ERROR(31): Symbol 'outputb' is not declared.
ERROR(32): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 25

==============
==============
./c- -P expL.c-
WARNING(6): Variable 'x' may be uninitialized when used here.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Child: 1  Op: > of type bool [line: 6]
.   .   .   Child: 0  Op: + of type int [line: 6]
.   .   .   .   Child: 0  Op: * of type int [line: 6]
.   .   .   .   .   Child: 0  Const 555 of type int [line: 6]
.   .   .   .   .   Child: 1  Const 666 of type int [line: 6]
.   .   .   .   Child: 1  Id: x of type int [line: 6]
.   .   .   Child: 1  Const 777 of type int [line: 6]
Number of warnings: 1
Number of errors: 0

==============
==============
./c- -P expR.c-
WARNING(6): Variable 'x' may be uninitialized when used here.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Child: 1  Op: > of type bool [line: 6]
.   .   .   Child: 0  Const 555 of type int [line: 6]
.   .   .   Child: 1  Op: + of type int [line: 6]
.   .   .   .   Child: 0  Const 666 of type int [line: 6]
.   .   .   .   Child: 1  Op: * of type int [line: 6]
.   .   .   .   .   Child: 0  Id: x of type int [line: 6]
.   .   .   .   .   Child: 1  Const 777 of type int [line: 6]
Number of warnings: 1
Number of errors: 0

==============
==============
./c- -P for2.c-
WARNING(3): The variable 'a' seems not to be used.
WARNING(5): The variable 'i' seems not to be used.
ERROR(8): Symbol 'j' is already declared at line 6.
WARNING(9): Variable 'i' may be uninitialized when used here.
Number of warnings: 3
Number of errors: 1

==============
==============
./c- -P fora.c-
WARNING(7): The variable 'i' seems not to be used.
Func: main returns type void [line: 1]
.   Child: 1  Compound [line: 2]
.   .   Child: 1  For [line: 3]
.   .   .   Child: 0  Var: i of type int [line: 3]
.   .   .   Child: 1  Range [line: 3]
.   .   .   .   Child: 0  Const 1 of type int [line: 3]
.   .   .   .   Child: 1  Const 11 of type int [line: 3]
.   .   .   Child: 2  Assign: <= of type int [line: 3]
.   .   .   .   Child: 0  Id: i of type int [line: 3]
.   .   .   .   Child: 1  Const 3 of type int [line: 3]
.   .   Sibling: 1  For [line: 5]
.   .   .   Child: 0  Var: j of type int [line: 5]
.   .   .   Child: 1  Range [line: 5]
.   .   .   .   Child: 0  Const 2 of type int [line: 5]
.   .   .   .   Child: 1  Const 22 of type int [line: 5]
.   .   .   .   Child: 2  Const 3 of type int [line: 5]
.   .   .   Child: 2  Assign: <= of type int [line: 5]
.   .   .   .   Child: 0  Id: j of type int [line: 5]
.   .   .   .   Child: 1  Const 7 of type int [line: 5]
.   .   Sibling: 2  For [line: 7]
.   .   .   Child: 0  Var: i of type int [line: 7]
.   .   .   Child: 1  Range [line: 7]
.   .   .   .   Child: 0  Id: i of undefined type [line: 7]
.   .   .   .   Child: 1  Id: i of undefined type [line: 7]
.   .   .   .   Child: 2  Id: i of undefined type [line: 7]
.   .   .   Child: 2  Const 666 of type int [line: 7]
Number of warnings: 1
Number of errors: 0

==============
==============
./c- -P forb.c-
WARNING(3): The variable 'y' seems not to be used.
WARNING(3): The variable 'z' seems not to be used.
Func: main returns type void [line: 1]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: y of type int [line: 3]
.   .   Sibling: 1  Var: z is array of type int [line: 3]
.   .   Child: 1  For [line: 4]
.   .   .   Child: 0  Var: x of type int [line: 4]
.   .   .   Child: 1  Range [line: 5]
.   .   .   .   Child: 0  Id: x of undefined type [line: 5]
.   .   .   .   Child: 1  Id: x of undefined type [line: 5]
.   .   .   .   Child: 2  Id: x of undefined type [line: 5]
.   .   .   Child: 2  Id: x of type int [line: 6]
.   .   Sibling: 1  For [line: 7]
.   .   .   Child: 0  Var: x of type int [line: 7]
.   .   .   Child: 1  Range [line: 7]
.   .   .   .   Child: 0  Id: y of undefined type [line: 7]
.   .   .   .   Child: 1  Id: x of undefined type [line: 7]
.   .   .   Child: 2  Id: x of type int [line: 7]
.   .   Sibling: 2  For [line: 8]
.   .   .   Child: 0  Var: x of type int [line: 8]
.   .   .   Child: 1  Range [line: 8]
.   .   .   .   Child: 0  Id: z of undefined type [line: 8]
.   .   .   .   Child: 1  Id: x of undefined type [line: 8]
.   .   .   Child: 2  Id: x of type int [line: 8]
Number of warnings: 2
Number of errors: 0

==============
==============
./c- -P for.c-
WARNING(5): The variable 'ba' seems not to be used.
ERROR(12): Cannot index nonarray 'bb'.
ERROR(12): Symbol 'bb' is not declared.
ERROR(13): Cannot index nonarray 'bb'.
ERROR(13): Symbol 'bb' is not declared.
ERROR(14): Cannot index nonarray 'bb'.
ERROR(14): Symbol 'bb' is not declared.
ERROR(16): Cannot index nonarray 'cc'.
ERROR(16): Symbol 'cc' is not declared.
ERROR(17): Cannot index nonarray 'cc'.
ERROR(17): Symbol 'cc' is not declared.
ERROR(20): Cannot index nonarray 'a'.
ERROR(20): Symbol 'a' is not declared.
ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'outnl' is not declared.
ERROR(23): Cannot index nonarray 'b'.
ERROR(23): Symbol 'b' is not declared.
ERROR(23): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outnl' is not declared.
ERROR(26): Cannot index nonarray 'c'.
ERROR(26): Symbol 'c' is not declared.
ERROR(26): Symbol 'outputc' is not declared.
ERROR(27): Symbol 'outnl' is not declared.
ERROR(29): Symbol 'output' is not declared.
Number of warnings: 1
Number of errors: 23

==============
==============
./c- -P forscope.c-
ERROR(6): Symbol 'x' is already declared at line 5.
WARNING(10): The variable 'x' seems not to be used.
WARNING(15): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.
ERROR(29): Symbol 'x' is already declared at line 28.
Number of warnings: 2
Number of errors: 3

==============
==============
./c- -P funcscope.c-
ERROR(LINKER): A function named 'main()' must be defined.
ERROR(5): Symbol 'x' is already declared at line 5.
ERROR(6): Symbol 'x' is already declared at line 5.
WARNING(10): The variable 'x' seems not to be used.
WARNING(15): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.
ERROR(29): Symbol 'x' is already declared at line 28.
Number of warnings: 2
Number of errors: 5

==============
==============
./c- -P if.c-
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Child: 1  Assign: <= of type int [line: 6]
.   .   .   Child: 0  Id: x of type int [line: 6]
.   .   .   Child: 1  Const 0 of type int [line: 6]
.   .   Sibling: 1  If [line: 8]
.   .   .   Child: 0  Const false of type bool [line: 8]
.   .   .   Child: 1  Assign: ++ of type int [line: 8]
.   .   .   .   Child: 0  Id: x of type int [line: 8]
.   .   Sibling: 2  If [line: 10]
.   .   .   Child: 0  Op: < of type bool [line: 10]
.   .   .   .   Child: 0  Id: x of type int [line: 10]
.   .   .   .   Child: 1  Const 10 of type int [line: 10]
.   .   .   Child: 1  Assign: ++ of type int [line: 10]
.   .   .   .   Child: 0  Id: x of type int [line: 10]
.   .   .   Child: 2  Assign: -- of type int [line: 11]
.   .   .   .   Child: 0  Id: x of type int [line: 11]
Number of warnings: 0
Number of errors: 0

==============
==============
./c- -P ifNest.c-
WARNING(6): Variable 'x' may be uninitialized when used here.
WARNING(8): Variable 'y' may be uninitialized when used here.
WARNING(11): Variable 'z' may be uninitialized when used here.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Sibling: 1  Var: y of type int [line: 4]
.   .   Sibling: 2  Var: z of type int [line: 4]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op: !< of type bool [line: 6]
.   .   .   .   Child: 0  Id: x of type int [line: 6]
.   .   .   .   Child: 1  Const 0 of type int [line: 6]
.   .   .   Child: 1  If [line: 7]
.   .   .   .   Child: 0  Const true of type bool [line: 7]
.   .   .   .   Child: 1  Id: x of type int [line: 7]
.   .   .   .   Child: 2  Id: y of type int [line: 8]
.   .   Sibling: 1  Const 111 of type int [line: 9]
.   .   Sibling: 2  If [line: 10]
.   .   .   Child: 0  Op: !< of type bool [line: 10]
.   .   .   .   Child: 0  Id: y of type int [line: 10]
.   .   .   .   Child: 1  Const 0 of type int [line: 10]
.   .   .   Child: 1  Id: y of type int [line: 10]
.   .   .   Child: 2  If [line: 11]
.   .   .   .   Child: 0  Const true of type bool [line: 11]
.   .   .   .   Child: 1  Id: z of type int [line: 11]
.   .   Sibling: 3  Const 222 of type int [line: 12]
.   .   Sibling: 4  If [line: 13]
.   .   .   Child: 0  Op: !< of type bool [line: 13]
.   .   .   .   Child: 0  Id: y of type int [line: 13]
.   .   .   .   Child: 1  Const 0 of type int [line: 13]
.   .   .   Child: 1  Id: y of type int [line: 13]
.   .   .   Child: 2  If [line: 14]
.   .   .   .   Child: 0  Const true of type bool [line: 14]
.   .   .   .   Child: 1  Id: z of type int [line: 14]
.   .   .   .   Child: 2  Id: x of type int [line: 15]
.   .   Sibling: 5  Const 333 of type int [line: 16]
.   .   Sibling: 6  If [line: 17]
.   .   .   Child: 0  Op: !< of type bool [line: 17]
.   .   .   .   Child: 0  Id: x of type int [line: 17]
.   .   .   .   Child: 1  Const 0 of type int [line: 17]
.   .   .   Child: 1  If [line: 17]
.   .   .   .   Child: 0  Const true of type bool [line: 17]
.   .   .   .   Child: 1  Id: x of type int [line: 17]
.   .   .   .   Child: 2  Id: y of type int [line: 18]
.   .   .   Child: 2  Id: z of type int [line: 19]
Number of warnings: 3
Number of errors: 0

==============
==============
./c- -P init2.c-
ERROR(12): Symbol 'output' is not declared.
ERROR(13): Symbol 'output' is not declared.
WARNING(13): Variable 'b' may be uninitialized when used here.
ERROR(14): Symbol 'output' is not declared.
ERROR(15): Symbol 'outnl' is not declared.
ERROR(17): Symbol 'output' is not declared.
ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'outnl' is not declared.
Number of warnings: 1
Number of errors: 8

==============
==============
./c- -P init3.c-
ERROR(10): Symbol 'output' is not declared.
ERROR(11): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.
ERROR(13): Symbol 'outputb' is not declared.
ERROR(14): Symbol 'outputc' is not declared.
Number of warnings: 0
Number of errors: 5

==============
==============
./c- -P init4.c-
WARNING(4): The variable 'y' seems not to be used.
WARNING(5): The variable 'roll' seems not to be used.
Func: main returns type int [line: 1]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: x of type int [line: 3]
.   .   .   Child: 0  Op: * of type int [line: 3]
.   .   .   .   Child: 0  Const 23 of type int [line: 3]
.   .   .   .   Child: 1  Const 3 of type int [line: 3]
.   .   Sibling: 1  Var: y of type int [line: 4]
.   .   .   Child: 0  Id: x of type int [line: 4]
.   .   Sibling: 2  Var: roll of type int [line: 5]
.   .   .   Child: 0  Op: ? of type int [line: 5]
.   .   .   .   Child: 0  Const 6 of type int [line: 5]
.   .   Child: 1  Const 333 of type int [line: 6]
.   .   Sibling: 1  Const 'z'  of type char [line: 7]
.   .   Sibling: 2  Const true of type bool [line: 8]
Number of warnings: 2
Number of errors: 0

==============
==============
./c- -P init.c-
WARNING(8): The variable 'b' seems not to be used.
WARNING(9): The variable 'y' seems not to be used.
WARNING(10): The variable 'c' seems not to be used.
Var: a is array of type int [line: 3]
Sibling: 1  Var: x of type int [line: 4]
.   Child: 0  Const 666 of type int [line: 4]
Sibling: 2  Func: main returns type void [line: 6]
.   Child: 1  Compound [line: 7]
.   .   Child: 0  Var: b is array of type int [line: 8]
.   .   Sibling: 1  Var: y of type int [line: 9]
.   .   .   Child: 0  Const 777 of type int [line: 9]
.   .   Sibling: 2  Var: c is array of type int [line: 10]
.   .   Sibling: 3  Var: z of type int [line: 11]
.   .   .   Child: 0  Const 888 of type int [line: 11]
.   .   Child: 1  Assign: <= of type int [line: 13]
.   .   .   Child: 0  Id: z of type int [line: 13]
.   .   .   Child: 1  Const 999 of type int [line: 13]
Number of warnings: 3
Number of errors: 0

==============
==============
./c- -P mixedControl2.c-
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  If [line: 4]
.   .   .   Child: 0  Const 111 of type int [line: 4]
.   .   .   Child: 1  While [line: 5]
.   .   .   .   Child: 0  Const 222 of type int [line: 5]
.   .   .   .   Child: 1  If [line: 6]
.   .   .   .   .   Child: 0  Const 333 of type int [line: 6]
.   .   .   .   .   Child: 1  While [line: 7]
.   .   .   .   .   .   Child: 0  Const 444 of type int [line: 7]
.   .   .   .   .   .   Child: 1  Const 555 of type int [line: 7]
.   .   .   .   .   Child: 2  Const 666 of type int [line: 8]
.   .   .   Child: 2  Const 777 of type int [line: 9]
.   .   Sibling: 1  If [line: 11]
.   .   .   Child: 0  Const 111 of type int [line: 11]
.   .   .   Child: 1  While [line: 12]
.   .   .   .   Child: 0  Const 222 of type int [line: 12]
.   .   .   .   Child: 1  Const 333 of type int [line: 12]
.   .   .   Child: 2  While [line: 14]
.   .   .   .   Child: 0  Const 444 of type int [line: 14]
.   .   .   .   Child: 1  Const 555 of type int [line: 14]
.   .   Sibling: 2  If [line: 16]
.   .   .   Child: 0  Const 111 of type int [line: 16]
.   .   .   Child: 1  While [line: 17]
.   .   .   .   Child: 0  Const 222 of type int [line: 17]
.   .   .   .   Child: 1  While [line: 18]
.   .   .   .   .   Child: 0  Const 444 of type int [line: 18]
.   .   .   .   .   Child: 1  Const 555 of type int [line: 18]
.   .   .   Child: 2  Const 666 of type int [line: 19]
Number of warnings: 0
Number of errors: 0

==============
==============
./c- -P mixedControl3.c-
WARNING(4): The variable 'x' seems not to be used.
WARNING(7): The variable 'x' seems not to be used.
WARNING(9): The variable 'x' seems not to be used.
WARNING(16): The variable 'x' seems not to be used.
WARNING(19): The variable 'x' seems not to be used.
WARNING(20): The variable 'x' seems not to be used.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Const 111 of type int [line: 6]
.   .   .   Child: 1  For [line: 7]
.   .   .   .   Child: 0  Var: x of type int [line: 7]
.   .   .   .   Child: 1  Range [line: 7]
.   .   .   .   .   Child: 0  Id: x of undefined type [line: 7]
.   .   .   .   .   Child: 1  Id: x of undefined type [line: 7]
.   .   .   .   .   Child: 2  Id: x of undefined type [line: 7]
.   .   .   .   Child: 2  If [line: 8]
.   .   .   .   .   Child: 0  Const 333 of type int [line: 8]
.   .   .   .   .   Child: 1  For [line: 9]
.   .   .   .   .   .   Child: 0  Var: x of type int [line: 9]
.   .   .   .   .   .   Child: 1  Range [line: 9]
.   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 9]
.   .   .   .   .   .   .   Child: 1  Id: x of undefined type [line: 9]
.   .   .   .   .   .   Child: 2  Const 555 of type int [line: 9]
.   .   .   .   .   Child: 2  Const 666 of type int [line: 10]
.   .   .   Child: 2  Const 777 of type int [line: 11]
.   .   Sibling: 1  If [line: 13]
.   .   .   Child: 0  Const 111 of type int [line: 13]
.   .   .   Child: 1  For [line: 14]
.   .   .   .   Child: 0  Var: x of type int [line: 14]
.   .   .   .   Child: 1  Range [line: 14]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 14]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 14]
.   .   .   .   .   Child: 2  Op: * of undefined type [line: 14]
.   .   .   .   .   .   Child: 0  Id: x of undefined type [line: 14]
.   .   .   .   .   .   Child: 1  Id: x of undefined type [line: 14]
.   .   .   .   Child: 2  Const 333 of type int [line: 14]
.   .   .   Child: 2  For [line: 16]
.   .   .   .   Child: 0  Var: x of type int [line: 16]
.   .   .   .   Child: 1  Range [line: 16]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 16]
.   .   .   .   .   Child: 1  Id: x of undefined type [line: 16]
.   .   .   .   Child: 2  Const 555 of type int [line: 16]
.   .   Sibling: 2  If [line: 18]
.   .   .   Child: 0  Const 111 of type int [line: 18]
.   .   .   Child: 1  For [line: 19]
.   .   .   .   Child: 0  Var: x of type int [line: 19]
.   .   .   .   Child: 1  Range [line: 19]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 19]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 19]
.   .   .   .   Child: 2  For [line: 20]
.   .   .   .   .   Child: 0  Var: x of type int [line: 20]
.   .   .   .   .   Child: 1  Range [line: 20]
.   .   .   .   .   .   Child: 0  Id: x of undefined type [line: 20]
.   .   .   .   .   .   Child: 1  Const 10 of type int [line: 20]
.   .   .   .   .   Child: 2  Const 555 of type int [line: 20]
.   .   .   Child: 2  Const 666 of type int [line: 21]
Number of warnings: 6
Number of errors: 0

==============
==============
./c- -P mixedControl.c-
WARNING(6): Variable 'x' may be uninitialized when used here.
WARNING(8): Variable 'y' may be uninitialized when used here.
WARNING(11): Variable 'z' may be uninitialized when used here.
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Sibling: 1  Var: y of type int [line: 4]
.   .   Sibling: 2  Var: z of type int [line: 4]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op: !< of type bool [line: 6]
.   .   .   .   Child: 0  Id: x of type int [line: 6]
.   .   .   .   Child: 1  Const 0 of type int [line: 6]
.   .   .   Child: 1  While [line: 7]
.   .   .   .   Child: 0  Const true of type bool [line: 7]
.   .   .   .   Child: 1  Id: x of type int [line: 7]
.   .   .   Child: 2  Id: y of type int [line: 8]
.   .   Sibling: 1  Const 111 of type int [line: 9]
.   .   Sibling: 2  If [line: 10]
.   .   .   Child: 0  Op: !< of type bool [line: 10]
.   .   .   .   Child: 0  Id: y of type int [line: 10]
.   .   .   .   Child: 1  Const 0 of type int [line: 10]
.   .   .   Child: 1  Id: y of type int [line: 10]
.   .   .   Child: 2  While [line: 11]
.   .   .   .   Child: 0  Const true of type bool [line: 11]
.   .   .   .   Child: 1  Id: z of type int [line: 11]
.   .   Sibling: 3  Const 222 of type int [line: 12]
.   .   Sibling: 4  If [line: 13]
.   .   .   Child: 0  Op: !< of type bool [line: 13]
.   .   .   .   Child: 0  Id: y of type int [line: 13]
.   .   .   .   Child: 1  Const 0 of type int [line: 13]
.   .   .   Child: 1  Id: y of type int [line: 13]
.   .   Sibling: 5  While [line: 14]
.   .   .   Child: 0  Const true of type bool [line: 14]
.   .   .   Child: 1  If [line: 15]
.   .   .   .   Child: 0  Const true of type bool [line: 15]
.   .   .   .   Child: 1  Id: z of type int [line: 15]
.   .   .   .   Child: 2  Id: x of type int [line: 16]
.   .   Sibling: 6  Const 333 of type int [line: 17]
.   .   Sibling: 7  If [line: 18]
.   .   .   Child: 0  Op: !< of type bool [line: 18]
.   .   .   .   Child: 0  Id: x of type int [line: 18]
.   .   .   .   Child: 1  Const 0 of type int [line: 18]
.   .   .   Child: 1  While [line: 19]
.   .   .   .   Child: 0  Const true of type bool [line: 19]
.   .   .   .   Child: 1  If [line: 20]
.   .   .   .   .   Child: 0  Const true of type bool [line: 20]
.   .   .   .   .   Child: 1  Id: x of type int [line: 20]
.   .   .   .   .   Child: 2  Id: y of type int [line: 21]
.   .   .   Child: 2  Id: z of type int [line: 22]
.   .   Sibling: 8  Const 444 of type int [line: 23]
.   .   Sibling: 9  If [line: 24]
.   .   .   Child: 0  Op: !< of type bool [line: 24]
.   .   .   .   Child: 0  Id: x of type int [line: 24]
.   .   .   .   Child: 1  Const 0 of type int [line: 24]
.   .   .   Child: 1  Id: z of type int [line: 24]
.   .   .   Child: 2  If [line: 26]
.   .   .   .   Child: 0  Const true of type bool [line: 26]
.   .   .   .   Child: 1  While [line: 27]
.   .   .   .   .   Child: 0  Const true of type bool [line: 27]
.   .   .   .   .   Child: 1  If [line: 28]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 28]
.   .   .   .   .   .   Child: 1  Id: x of type int [line: 28]
.   .   .   .   .   .   Child: 2  Id: y of type int [line: 29]
.   .   .   .   Child: 2  Id: z of type int [line: 30]
Number of warnings: 3
Number of errors: 0

==============
==============
./c- -P nest.c-
ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.
ERROR(22): Symbol 'output' is not declared.
ERROR(23): Symbol 'outnl' is not declared.
ERROR(43): Symbol 'output' is not declared.
ERROR(44): Symbol 'output' is not declared.
ERROR(45): Symbol 'output' is not declared.
ERROR(46): Symbol 'output' is not declared.
ERROR(47): Symbol 'output' is not declared.
ERROR(48): Symbol 'outnl' is not declared.
ERROR(58): Symbol 'output' is not declared.
ERROR(59): Symbol 'output' is not declared.
ERROR(60): Symbol 'output' is not declared.
ERROR(61): Symbol 'output' is not declared.
ERROR(62): Symbol 'output' is not declared.
ERROR(63): Symbol 'outnl' is not declared.
ERROR(70): Symbol 'output' is not declared.
ERROR(71): Symbol 'output' is not declared.
ERROR(72): Symbol 'output' is not declared.
ERROR(73): Symbol 'output' is not declared.
ERROR(74): Symbol 'output' is not declared.
ERROR(75): Symbol 'outnl' is not declared.
ERROR(77): Symbol 'output' is not declared.
ERROR(78): Symbol 'output' is not declared.
ERROR(79): Symbol 'output' is not declared.
ERROR(80): Symbol 'output' is not declared.
ERROR(81): Symbol 'output' is not declared.
ERROR(82): Symbol 'outnl' is not declared.
ERROR(89): Symbol 'output' is not declared.
ERROR(90): Symbol 'output' is not declared.
ERROR(91): Symbol 'output' is not declared.
ERROR(92): Symbol 'output' is not declared.
ERROR(93): Symbol 'output' is not declared.
ERROR(94): Symbol 'outnl' is not declared.
ERROR(97): Symbol 'output' is not declared.
ERROR(98): Symbol 'output' is not declared.
ERROR(99): Symbol 'output' is not declared.
ERROR(100): Symbol 'output' is not declared.
ERROR(101): Symbol 'output' is not declared.
ERROR(102): Symbol 'outnl' is not declared.
ERROR(106): Symbol 'output' is not declared.
ERROR(107): Symbol 'output' is not declared.
ERROR(108): Symbol 'output' is not declared.
ERROR(109): Symbol 'output' is not declared.
ERROR(110): Symbol 'output' is not declared.
ERROR(111): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 48

==============
==============
./c- -P ops.c-
ERROR(25): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outputb' is not declared.
ERROR(28): Symbol 'outnl' is not declared.
ERROR(30): Symbol 'outputb' is not declared.
ERROR(31): Symbol 'outputb' is not declared.
ERROR(32): Symbol 'outputb' is not declared.
ERROR(33): Symbol 'outnl' is not declared.
ERROR(35): Symbol 'outputb' is not declared.
ERROR(36): Symbol 'outputb' is not declared.
ERROR(37): Symbol 'outputb' is not declared.
ERROR(38): Symbol 'outnl' is not declared.
ERROR(40): Symbol 'outputb' is not declared.
ERROR(41): Symbol 'outputb' is not declared.
ERROR(42): Symbol 'outputb' is not declared.
ERROR(43): Symbol 'outnl' is not declared.
ERROR(45): Symbol 'outputb' is not declared.
ERROR(46): Symbol 'outputb' is not declared.
ERROR(47): Symbol 'outputb' is not declared.
ERROR(48): Symbol 'outnl' is not declared.
ERROR(50): Symbol 'outputb' is not declared.
ERROR(51): Symbol 'outputb' is not declared.
ERROR(52): Symbol 'outputb' is not declared.
ERROR(53): Symbol 'outputb' is not declared.
ERROR(54): Symbol 'outnl' is not declared.
ERROR(56): Symbol 'outputb' is not declared.
ERROR(57): Symbol 'outputb' is not declared.
ERROR(58): Symbol 'outputb' is not declared.
ERROR(59): Symbol 'outputb' is not declared.
ERROR(60): Symbol 'outnl' is not declared.
ERROR(62): Symbol 'outputb' is not declared.
ERROR(63): Symbol 'outputb' is not declared.
ERROR(64): Symbol 'outputb' is not declared.
ERROR(65): Symbol 'outputb' is not declared.
ERROR(66): Symbol 'outnl' is not declared.
ERROR(68): Symbol 'outputb' is not declared.
ERROR(69): Symbol 'outputb' is not declared.
ERROR(70): Symbol 'outputb' is not declared.
ERROR(71): Symbol 'outputb' is not declared.
ERROR(72): Symbol 'outnl' is not declared.
ERROR(74): Symbol 'output' is not declared.
ERROR(75): Symbol 'output' is not declared.
ERROR(76): Symbol 'outnl' is not declared.
ERROR(78): Symbol 'output' is not declared.
ERROR(79): Symbol 'output' is not declared.
ERROR(80): Symbol 'outnl' is not declared.
ERROR(83): Symbol 'output' is not declared.
ERROR(84): Symbol 'output' is not declared.
ERROR(85): Symbol 'output' is not declared.
ERROR(86): Symbol 'output' is not declared.
ERROR(87): Symbol 'output' is not declared.
ERROR(88): Symbol 'outnl' is not declared.
ERROR(90): Symbol 'output' is not declared.
ERROR(91): Symbol 'output' is not declared.
ERROR(92): Symbol 'output' is not declared.
ERROR(93): Symbol 'outnl' is not declared.
ERROR(95): Symbol 'output' is not declared.
ERROR(96): Symbol 'output' is not declared.
ERROR(97): Symbol 'output' is not declared.
ERROR(98): Symbol 'output' is not declared.
ERROR(99): Symbol 'outnl' is not declared.
ERROR(102): Symbol 'output' is not declared.
ERROR(103): Symbol 'output' is not declared.
ERROR(104): Symbol 'output' is not declared.
ERROR(105): Symbol 'output' is not declared.
ERROR(106): Symbol 'output' is not declared.
ERROR(107): Symbol 'output' is not declared.
ERROR(108): Symbol 'outnl' is not declared.
ERROR(110): Symbol 'output' is not declared.
ERROR(111): Symbol 'output' is not declared.
ERROR(113): Symbol 'output' is not declared.
ERROR(114): Symbol 'outnl' is not declared.
ERROR(118): Symbol 'output' is not declared.
ERROR(119): Symbol 'output' is not declared.
ERROR(120): Symbol 'output' is not declared.
ERROR(121): Symbol 'output' is not declared.
ERROR(122): Symbol 'outnl' is not declared.
ERROR(126): Symbol 'output' is not declared.
ERROR(127): Symbol 'output' is not declared.
ERROR(128): Symbol 'output' is not declared.
ERROR(129): Symbol 'output' is not declared.
ERROR(130): Symbol 'outnl' is not declared.
ERROR(134): Symbol 'output' is not declared.
ERROR(135): Symbol 'output' is not declared.
ERROR(136): Symbol 'outnl' is not declared.
ERROR(138): Symbol 'output' is not declared.
ERROR(139): Symbol 'output' is not declared.
ERROR(140): Symbol 'output' is not declared.
ERROR(141): Symbol 'outnl' is not declared.
ERROR(143): Symbol 'outputb' is not declared.
ERROR(144): Symbol 'outputb' is not declared.
ERROR(145): Symbol 'outputb' is not declared.
ERROR(146): Symbol 'outnl' is not declared.
ERROR(148): Symbol 'outputb' is not declared.
ERROR(149): Symbol 'outputb' is not declared.
ERROR(150): Symbol 'outputb' is not declared.
ERROR(151): Symbol 'outputb' is not declared.
ERROR(152): Symbol 'outputb' is not declared.
ERROR(153): Symbol 'outputb' is not declared.
ERROR(154): Symbol 'outputb' is not declared.
ERROR(155): Symbol 'outputb' is not declared.
ERROR(156): Symbol 'outputb' is not declared.
ERROR(157): Symbol 'outputb' is not declared.
ERROR(158): Symbol 'outputb' is not declared.
ERROR(159): Symbol 'outputb' is not declared.
ERROR(160): Symbol 'outputb' is not declared.
ERROR(161): Symbol 'outnl' is not declared.
ERROR(163): Symbol 'outputb' is not declared.
ERROR(164): Symbol 'outputb' is not declared.
ERROR(165): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 110

==============
==============
./c- -P optype.c-
WARNING(7): Variable 'a' may be uninitialized when used here.
ERROR(8): '<' requires operands of the same type but lhs is type int and rhs is type bool.
WARNING(8): Variable 'b' may be uninitialized when used here.
ERROR(9): '<' requires operands of the same type but lhs is type int and rhs is type char.
WARNING(9): Variable 'c' may be uninitialized when used here.
ERROR(10): '<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(13): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(14): '<' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(17): Symbol 'x' is not declared.
ERROR(18): Symbol 'x' is not declared.
ERROR(19): Symbol 'x' is not declared.
Number of warnings: 3
Number of errors: 9

==============
==============
./c- -P overlapArray.c-
ERROR(LINKER): A function named 'main()' must be defined.
WARNING(2): The variable 'p' seems not to be used.
WARNING(4): The variable 'a' seems not to be used.
WARNING(6): The variable 'b' seems not to be used.
WARNING(9): The variable 'c' seems not to be used.
WARNING(13): The variable 'b' seems not to be used.
WARNING(16): The variable 'c' seems not to be used.
Number of warnings: 6
Number of errors: 1

==============
==============
./c- -P overlap.c-
ERROR(LINKER): A function named 'main()' must be defined.
WARNING(4): The variable 'p' seems not to be used.
WARNING(6): The variable 'a' seems not to be used.
WARNING(8): The variable 'b' seems not to be used.
WARNING(11): The variable 'c' seems not to be used.
WARNING(15): The variable 'b' seems not to be used.
WARNING(18): The variable 'c' seems not to be used.
Number of warnings: 6
Number of errors: 1

==============
==============
./c- -P overlapStatic.c-
ERROR(LINKER): A function named 'main()' must be defined.
WARNING(4): The variable 'p' seems not to be used.
WARNING(6): The variable 'a' seems not to be used.
WARNING(8): The variable 'b' seems not to be used.
WARNING(11): The variable 'c' seems not to be used.
WARNING(15): The variable 'b' seems not to be used.
WARNING(18): The variable 'c' seems not to be used.
Number of warnings: 6
Number of errors: 1

==============
==============
./c- -P part2.c-
WARNING(4): Variable 'z' may be uninitialized when used here.
ERROR(5): Cannot return an array.
ERROR(20): Symbol 'x' is already declared at line 18.
ERROR(26): Symbol 'dog' is already declared at line 18.
WARNING(28): The variable 'z' seems not to be used.
ERROR(35): '+' requires operands of type int but lhs is of type char.
WARNING(35): The variable 'd' seems not to be used.
ERROR(42): Symbol 'zebu' is not declared.
ERROR(47): '+' requires operands of type int but lhs is of type char.
ERROR(47): Unary 'chsign' requires an operand of type int but was given type bool.
WARNING(49): Variable 'z' may be uninitialized when used here.
Number of warnings: 4
Number of errors: 7

==============
==============
./c- -P randomRoll.c-
ERROR(11): Symbol 'outputb' is not declared.
ERROR(13): Symbol 'outputb' is not declared.
ERROR(14): Symbol 'outnl' is not declared.
ERROR(16): Symbol 'outputb' is not declared.
ERROR(17): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 5

==============
==============
./c- -P return.c-
ERROR(13): Symbol 'outputc' is not declared.
ERROR(37): Symbol 'outnl' is not declared.
ERROR(39): Symbol 'output' is not declared.
ERROR(40): Symbol 'output' is not declared.
ERROR(41): Symbol 'outnl' is not declared.
ERROR(43): Symbol 'outputc' is not declared.
ERROR(44): Symbol 'outputb' is not declared.
ERROR(45): Symbol 'outnl' is not declared.
ERROR(47): Symbol 'outputb' is not declared.
ERROR(48): Symbol 'outputb' is not declared.
ERROR(49): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 11

==============
==============
./c- -P scope.c-
ERROR(LINKER): A function named 'main()' must be defined.
ERROR(7): Symbol 'bat' is not declared.
ERROR(8): 'or' requires operands of type bool but lhs is of type int.
ERROR(8): 'or' requires operands of type bool but rhs is of type int.
WARNING(8): Variable 'a' may be uninitialized when used here.
ERROR(14): Symbol 'b' is not declared.
WARNING(15): Variable 'c' may be uninitialized when used here.
WARNING(19): The variable 'IWouldNotEatItWithAGoat' seems not to be used.
ERROR(25): Symbol 'b' is not declared.
ERROR(26): Symbol 'c' is not declared.
ERROR(30): Symbol 'b' is not declared.
ERROR(31): Symbol 'c' is not declared.
WARNING(40): The variable 'bat' seems not to be used.
ERROR(41): Symbol 'x' is not declared.
WARNING(44): Variable 'z' may be uninitialized when used here.
ERROR(45): Symbol 'p' is not declared.
ERROR(46): Symbol 'q' is not declared.
ERROR(46): Symbol 'r' is not declared.
ERROR(47): Symbol 's' is not declared.
ERROR(47): Symbol 't' is not declared.
ERROR(48): Symbol 'cow' is not declared.
ERROR(48): Symbol 'u' is not declared.
ERROR(48): Symbol 'v' is not declared.
ERROR(49): Symbol 'abraxsis' is not declared.
ERROR(50): Symbol 'a' is not declared.
ERROR(55): Symbol 'g' is already declared at line 2.
ERROR(57): Symbol 'g' is already declared at line 2.
ERROR(59): Symbol 'x' is not declared.
ERROR(62): Symbol 'g' is already declared at line 2.
ERROR(63): Symbol 'ant' is already declared at line 3.
Number of warnings: 5
Number of errors: 25

==============
==============
./c- -P static.c-
ERROR(6): Symbol 'output' is not declared.
ERROR(8): Symbol 'output' is not declared.
Number of warnings: 0
Number of errors: 2

==============
==============
./c- -P strange.c-
ERROR(LINKER): A function named 'main()' must be defined.
ERROR(2): Symbol 'main' is already declared at line 1.
ERROR(3): Symbol 'main' is already declared at line 1.
ERROR(9): 'main' is a simple variable and cannot be called.
ERROR(18): 'main' is a simple variable and cannot be called.
Number of warnings: 0
Number of errors: 5

==============
==============
./c- -P types3.c-
ERROR(LINKER): A function named 'main()' must be defined.
ERROR(5): Symbol 'lund' is already declared at line 3.
WARNING(5): The variable 'a' seems not to be used.
ERROR(9): Symbol 'a' is already declared at line 9.
ERROR(11): Symbol 'a' is already declared at line 9.
ERROR(12): 'a' is a simple variable and cannot be called.
ERROR(13): Cannot use function 'fred' as a variable.
ERROR(16): Symbol 'fred' is already declared at line 9.
WARNING(18): The variable 'linda' seems not to be used.
ERROR(20): Symbol 'linda' is already declared at line 18.
WARNING(24): The variable 'eowyn' seems not to be used.
ERROR(26): Cannot use function 'arwen' as a variable.
Number of warnings: 3
Number of errors: 9

==============
==============
./c- -P types.c-
ERROR(8): Symbol 'c' is already declared at line 8.
WARNING(8): The variable 'c' seems not to be used.
ERROR(9): Symbol 'i' is already declared at line 4.
WARNING(10): The variable 'pumpkin' seems not to be used.
WARNING(12): Variable 'i' may be uninitialized when used here.
ERROR(13): '+' requires operands of type int but rhs is of type bool.
WARNING(13): Variable 'b' may be uninitialized when used here.
ERROR(14): '+' requires operands of type int but lhs is of type bool.
ERROR(15): '+' requires operands of type int but lhs is of type bool.
ERROR(15): '+' requires operands of type int but rhs is of type bool.
ERROR(17): 'and' requires operands of type bool but lhs is of type int.
ERROR(17): 'and' requires operands of type bool but rhs is of type int.
ERROR(18): 'and' requires operands of type bool but lhs is of type int.
ERROR(19): 'and' requires operands of type bool but rhs is of type int.
ERROR(23): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(24): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(28): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(29): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(33): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(34): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(37): The operation '+' does not work with arrays.
WARNING(37): Variable 'ia' may be uninitialized when used here.
ERROR(38): '+' requires operands of type int but rhs is of type bool.
ERROR(38): The operation '+' does not work with arrays.
WARNING(38): Variable 'ba' may be uninitialized when used here.
ERROR(39): '+' requires operands of type int but lhs is of type bool.
ERROR(39): The operation '+' does not work with arrays.
ERROR(40): '+' requires operands of type int but lhs is of type bool.
ERROR(40): '+' requires operands of type int but rhs is of type bool.
ERROR(40): The operation '+' does not work with arrays.
ERROR(42): 'and' requires operands of type bool but lhs is of type int.
ERROR(42): 'and' requires operands of type bool but rhs is of type int.
ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): 'and' requires operands of type bool but lhs is of type int.
ERROR(43): The operation 'and' does not work with arrays.
ERROR(44): 'and' requires operands of type bool but rhs is of type int.
ERROR(44): The operation 'and' does not work with arrays.
ERROR(45): The operation 'and' does not work with arrays.
ERROR(48): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(49): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(53): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(54): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(57): '+' requires operands of type int but lhs is of type bool.
ERROR(58): '+' requires operands of type int but rhs is of type bool.
ERROR(59): '+' requires operands of type int but rhs is of type bool.
ERROR(61): 'or' requires operands of type bool but lhs is of type int.
ERROR(62): 'or' requires operands of type bool but rhs is of type int.
ERROR(63): 'or' requires operands of type bool but rhs is of type int.
ERROR(66): Unary 'not' requires an operand of type bool but was given type int.
ERROR(67): The operation 'not' does not work with arrays.
ERROR(68): The operation 'not' does not work with arrays.
ERROR(68): Unary 'not' requires an operand of type bool but was given type int.
ERROR(70): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(72): The operation 'chsign' does not work with arrays.
ERROR(72): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(73): The operation 'chsign' does not work with arrays.
ERROR(76): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(77): '>' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(78): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(79): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(79): '>' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(103): 'b' is a simple variable and cannot be called.
ERROR(104): Cannot index nonarray 'b'.
ERROR(105): Cannot index nonarray 'x'.
ERROR(105): Symbol 'x' is not declared.
ERROR(106): Cannot index nonarray 'main'.
ERROR(106): Cannot use function 'main' as a variable.
ERROR(107): Cannot index nonarray 'main'.
ERROR(107): Cannot use function 'main' as a variable.
ERROR(108): Array 'ba' should be indexed by type int but got type bool.
ERROR(108): Array index is the unindexed array 'ba'.
ERROR(109): Array 'ba' should be indexed by type int but got type char.
ERROR(110): Cannot use function 'main' as a variable.
ERROR(111): The operation '+' does not work with arrays.
ERROR(112): Symbol 'a' is not declared.
ERROR(113): The operation 'sizeof' only works with arrays.
ERROR(114): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(116): Cannot return an array.
Number of warnings: 6
Number of errors: 72

==============
==============
./c- -P undeclared.c-
ERROR(LINKER): A function named 'main()' must be defined.
WARNING(1): The variable 'x' seems not to be used.
ERROR(3): Symbol 'i' is not declared.
ERROR(3): Symbol 'z' is not declared.
ERROR(4): Symbol 'i' is not declared.
ERROR(4): Symbol 'z' is not declared.
ERROR(5): Symbol 'i' is not declared.
ERROR(5): Symbol 'i' is not declared.
ERROR(6): Symbol 'j' is not declared.
ERROR(7): Symbol 'l' is not declared.
ERROR(8): Symbol 'm' is not declared.
ERROR(9): Symbol 'k' is not declared.
Number of warnings: 1
Number of errors: 11

==============
==============
./c- -P uninit2.c-
WARNING(6): Variable 'b' may be uninitialized when used here.
WARNING(8): Variable 'aa' may be uninitialized when used here.
WARNING(9): Variable 'bb' may be uninitialized when used here.
WARNING(9): Variable 'cc' may be uninitialized when used here.
WARNING(12): Variable 'dd' may be uninitialized when used here.
Func: main returns type void [line: 1]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: a of type int [line: 3]
.   .   Sibling: 1  Var: b of type int [line: 3]
.   .   Sibling: 2  Var: c of type int [line: 3]
.   .   Sibling: 3  Var: d of type int [line: 3]
.   .   Sibling: 4  Var: aa is array of type int [line: 4]
.   .   Sibling: 5  Var: bb is array of type int [line: 4]
.   .   Sibling: 6  Var: cc is array of type int [line: 4]
.   .   Sibling: 7  Var: dd is array of type int [line: 4]
.   .   Sibling: 8  Var: ee is array of type int [line: 4]
.   .   Child: 1  Assign: <= of type int [line: 6]
.   .   .   Child: 0  Id: a of type int [line: 6]
.   .   .   Child: 1  Id: b of type int [line: 6]
.   .   Sibling: 1  Assign: <= of type int [line: 7]
.   .   .   Child: 0  Id: a of type int [line: 7]
.   .   .   Child: 1  Id: b of type int [line: 7]
.   .   Sibling: 2  Assign: <= of type int [line: 8]
.   .   .   Child: 0  Id: a of type int [line: 8]
.   .   .   Child: 1  Op: [ of type int [line: 8]
.   .   .   .   Child: 0  Id: aa of type int [line: 8]
.   .   .   .   Child: 1  Const 3 of type int [line: 8]
.   .   Sibling: 3  Assign: <= of type int [line: 9]
.   .   .   Child: 0  Id: a of type int [line: 9]
.   .   .   Child: 1  Op: [ of type int [line: 9]
.   .   .   .   Child: 0  Id: bb of type int [line: 9]
.   .   .   .   Child: 1  Op: [ of type int [line: 9]
.   .   .   .   .   Child: 0  Id: cc of type int [line: 9]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 9]
.   .   Sibling: 4  Assign: <= of type int [line: 10]
.   .   .   Child: 0  Op: [ of type int [line: 10]
.   .   .   .   Child: 0  Id: cc of type int [line: 10]
.   .   .   .   Child: 1  Id: c of type int [line: 10]
.   .   .   Child: 1  Id: a of type int [line: 10]
.   .   Sibling: 5  Assign: <= of type int [line: 11]
.   .   .   Child: 0  Op: [ of type int [line: 11]
.   .   .   .   Child: 0  Id: cc of type int [line: 11]
.   .   .   .   Child: 1  Op: + of type int [line: 11]
.   .   .   .   .   Child: 0  Id: c of type int [line: 11]
.   .   .   .   .   Child: 1  Id: d of type int [line: 11]
.   .   .   Child: 1  Id: a of type int [line: 11]
.   .   Sibling: 6  Op: [ of type int [line: 12]
.   .   .   Child: 0  Id: cc of type int [line: 12]
.   .   .   Child: 1  Op: [ of type int [line: 12]
.   .   .   .   Child: 0  Id: dd of type int [line: 12]
.   .   .   .   Child: 1  Const 3 of type int [line: 12]
.   .   Sibling: 7  Assign: <= of type int [line: 13]
.   .   .   Child: 0  Op: [ of type int [line: 13]
.   .   .   .   Child: 0  Id: cc of type int [line: 13]
.   .   .   .   Child: 1  Op: [ of type int [line: 13]
.   .   .   .   .   Child: 0  Id: ee of type int [line: 13]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 13]
.   .   .   Child: 1  Const 284 of type int [line: 13]
Number of warnings: 5
Number of errors: 0

==============
==============
./c- -P uninit.c-
ERROR(LINKER): A function named 'main()' must be defined.
WARNING(1): The variable 'x' seems not to be used.
ERROR(3): Symbol 'z' is already declared at line 3.
ERROR(3): Symbol 'z' is already declared at line 3.
WARNING(5): Variable 'i' may be uninitialized when used here.
WARNING(7): Variable 'g' may be uninitialized when used here.
WARNING(8): Variable 'h' may be uninitialized when used here.
WARNING(9): Variable 'j' may be uninitialized when used here.
WARNING(10): Variable 'k' may be uninitialized when used here.
WARNING(11): Variable 'l' may be uninitialized when used here.
WARNING(12): Variable 'm' may be uninitialized when used here.
ERROR(13): Symbol 'dog' is not declared.
ERROR(14): Cannot use function 'main' as a variable.
Number of warnings: 8
Number of errors: 5

==============
==============
./c- -P varAssign.c-
ERROR(13): Symbol 'output' is not declared.
ERROR(15): Symbol 'output' is not declared.
ERROR(17): Symbol 'output' is not declared.
ERROR(18): Symbol 'outnl' is not declared.
ERROR(22): Symbol 'output' is not declared.
ERROR(24): Symbol 'output' is not declared.
ERROR(26): Symbol 'output' is not declared.
ERROR(27): Symbol 'outnl' is not declared.
ERROR(31): Symbol 'output' is not declared.
ERROR(34): Symbol 'output' is not declared.
ERROR(37): Symbol 'output' is not declared.
ERROR(38): Symbol 'outnl' is not declared.
ERROR(42): Symbol 'output' is not declared.
ERROR(44): Symbol 'output' is not declared.
ERROR(46): Symbol 'output' is not declared.
ERROR(47): Symbol 'outnl' is not declared.
ERROR(58): Symbol 'output' is not declared.
ERROR(59): Symbol 'output' is not declared.
ERROR(60): Symbol 'outnl' is not declared.
ERROR(65): Symbol 'output' is not declared.
ERROR(66): Symbol 'output' is not declared.
ERROR(67): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 22

==============
==============
./c- -P var.c-
ERROR(LINKER): A function named 'main()' must be defined.
WARNING(12): Variable 'x' may be uninitialized when used here.
WARNING(13): Variable 'y' may be uninitialized when used here.
Number of warnings: 2
Number of errors: 1

==============
==============
./c- -P varPair.c-
ERROR(10): Symbol 'output' is not declared.
ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outnl' is not declared.
ERROR(18): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.
ERROR(22): Symbol 'outnl' is not declared.
ERROR(26): Symbol 'output' is not declared.
ERROR(29): Symbol 'output' is not declared.
ERROR(30): Symbol 'outnl' is not declared.
ERROR(34): Symbol 'output' is not declared.
ERROR(37): Symbol 'output' is not declared.
ERROR(38): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 12

==============
==============
./c- -P while.c-
Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]
.   .   Child: 1  Assign: <= of type int [line: 5]
.   .   .   Child: 0  Id: x of type int [line: 5]
.   .   .   Child: 1  Const 0 of type int [line: 5]
.   .   Sibling: 1  While [line: 7]
.   .   .   Child: 0  Op: > of type bool [line: 7]
.   .   .   .   Child: 0  Id: x of type int [line: 7]
.   .   .   .   Child: 1  Const 10 of type int [line: 7]
.   .   .   Child: 1  Assign: ++ of type int [line: 7]
.   .   .   .   Child: 0  Id: x of type int [line: 7]
Number of warnings: 0
Number of errors: 0

==============
==============
./c- -P whileif.c-
ERROR(13): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
Number of warnings: 0
Number of errors: 1

* End of testing
Kill all remaining c- processes
=================================================
Output Comparison
ztest zexpected differ: char 50993, line 1107

Your output differs from the expected output.
digits in the day and time were changed to # for comparison.
This is a two column comparison with YOUR OUTPUT ON THE LEFT
with the EXPECTED OUTPUT ON THE RIGHT.
Run Tests                                                                                                               Run Tests
Limited to 30 seconds total run time and 8000 lines of output                                                           Limited to 30 seconds total run time and 8000 lines of output

* ================================================ *                                                                    * ================================================ *
| Tests for CS445 Assignment 3 |                                                                                        | Tests for CS445 Assignment 3 |
| Comparison with Expected Output |                                                                                     | Comparison with Expected Output |
| Semantic Analysis I |                                                                                                 | Semantic Analysis I |
| Errors and Warnings will be sorted by line num |                                                                      | Errors and Warnings will be sorted by line num |
| |                                                                                                                     | |
* ================================================ *                                                                    * ================================================ *

/home/rs-cs-heckendo/TestWorld                                                                                          /home/rs-cs-heckendo/TestWorld
-rwxrwxrwx jp/jp 1522 2022-05-30 14:11 allbad.c-                                                                        -rwxrwxrwx jp/jp 1522 2022-05-30 14:11 allbad.c-
-rwxrwxrwx jp/jp 1288 2022-05-30 14:11 allgood.c-                                                                       -rwxrwxrwx jp/jp 1288 2022-05-30 14:11 allgood.c-
-rwxrwxrwx jp/jp 175 2022-05-30 14:11 array.c-                                                                          -rwxrwxrwx jp/jp 175 2022-05-30 14:11 array.c-
-rwxrwxrwx jp/jp 860 2022-05-30 14:11 arrayops.c-                                                                       -rwxrwxrwx jp/jp 860 2022-05-30 14:11 arrayops.c-
-rwxrwxrwx jp/jp 273 2022-05-30 14:11 arrayx.c-                                                                         -rwxrwxrwx jp/jp 273 2022-05-30 14:11 arrayx.c-
-rwxrwxrwx jp/jp 175 2022-05-30 14:11 assignb.c-                                                                        -rwxrwxrwx jp/jp 175 2022-05-30 14:11 assignb.c-
-rwxrwxrwx jp/jp 492 2022-05-30 14:11 assignBool.c-                                                                     -rwxrwxrwx jp/jp 492 2022-05-30 14:11 assignBool.c-
-rwxrwxrwx jp/jp 483 2022-05-30 14:11 assignChar.c-                                                                     -rwxrwxrwx jp/jp 483 2022-05-30 14:11 assignChar.c-
-rwxrwxrwx jp/jp 470 2022-05-30 14:11 assignInt.c-                                                                      -rwxrwxrwx jp/jp 470 2022-05-30 14:11 assignInt.c-
-rwxrwxrwx jp/jp 281 2022-05-30 14:11 break2.c-                                                                         -rwxrwxrwx jp/jp 281 2022-05-30 14:11 break2.c-
-rwxrwxrwx jp/jp 110 2022-05-30 14:11 break3.c-                                                                         -rwxrwxrwx jp/jp 110 2022-05-30 14:11 break3.c-
-rwxrwxrwx jp/jp 155 2022-05-30 14:11 break4.c-                                                                         -rwxrwxrwx jp/jp 155 2022-05-30 14:11 break4.c-
-rwxrwxrwx jp/jp 122 2022-05-30 14:11 break.c-                                                                          -rwxrwxrwx jp/jp 122 2022-05-30 14:11 break.c-
-rwxrwxrwx jp/jp 340 2022-05-30 14:11 call2.c-                                                                          -rwxrwxrwx jp/jp 340 2022-05-30 14:11 call2.c-
-rwxrwxrwx jp/jp 415 2022-05-30 14:11 call3.c-                                                                          -rwxrwxrwx jp/jp 415 2022-05-30 14:11 call3.c-
-rwxrwxrwx jp/jp 929 2022-05-30 14:11 call.c-                                                                           -rwxrwxrwx jp/jp 929 2022-05-30 14:11 call.c-
-rwxrwxrwx jp/jp 293 2022-05-30 14:11 callerr.c-                                                                        -rwxrwxrwx jp/jp 293 2022-05-30 14:11 callerr.c-
-rwxrwxrwx jp/jp 117 2022-05-30 14:11 constants.c-                                                                      -rwxrwxrwx jp/jp 117 2022-05-30 14:11 constants.c-
-rwxrwxrwx jp/jp 1150 2022-05-30 14:11 cover.c-                                                                         -rwxrwxrwx jp/jp 1150 2022-05-30 14:11 cover.c-
-rwxrwxrwx jp/jp 62 2022-05-30 14:11 decl.c-                                                                            -rwxrwxrwx jp/jp 62 2022-05-30 14:11 decl.c-
-rwxrwxrwx jp/jp 206 2022-05-30 14:11 emptyline.c-                                                                      -rwxrwxrwx jp/jp 206 2022-05-30 14:11 emptyline.c-
-rwxrwxrwx jp/jp 3292 2022-05-30 14:11 everythingS23.c-                                                                 -rwxrwxrwx jp/jp 3292 2022-05-30 14:11 everythingS23.c-
-rwxrwxrwx jp/jp 1079 2022-05-30 14:11 exp.c-                                                                           -rwxrwxrwx jp/jp 1079 2022-05-30 14:11 exp.c-
-rwxrwxrwx jp/jp 59 2022-05-30 14:11 expL.c-                                                                            -rwxrwxrwx jp/jp 59 2022-05-30 14:11 expL.c-
-rwxrwxrwx jp/jp 59 2022-05-30 14:11 expR.c-                                                                            -rwxrwxrwx jp/jp 59 2022-05-30 14:11 expR.c-
-rwxrwxrwx jp/jp 164 2022-05-30 14:11 for2.c-                                                                           -rwxrwxrwx jp/jp 164 2022-05-30 14:11 for2.c-
-rwxrwxrwx jp/jp 204 2022-05-30 14:11 fora.c-                                                                           -rwxrwxrwx jp/jp 204 2022-05-30 14:11 fora.c-
-rwxrwxrwx jp/jp 139 2022-05-30 14:11 forb.c-                                                                           -rwxrwxrwx jp/jp 139 2022-05-30 14:11 forb.c-
-rwxrwxrwx jp/jp 465 2022-05-30 14:11 for.c-                                                                            -rwxrwxrwx jp/jp 465 2022-05-30 14:11 for.c-
-rwxrwxrwx jp/jp 984 2022-05-30 14:11 forscope.c-                                                                       -rwxrwxrwx jp/jp 984 2022-05-30 14:11 forscope.c-
-rwxrwxrwx jp/jp 763 2022-05-30 14:11 funcscope.c-                                                                      -rwxrwxrwx jp/jp 763 2022-05-30 14:11 funcscope.c-
-rwxrwxrwx jp/jp 112 2022-05-30 14:11 if.c-                                                                             -rwxrwxrwx jp/jp 112 2022-05-30 14:11 if.c-
-rwxrwxrwx jp/jp 299 2022-05-30 14:11 ifNest.c-                                                                         -rwxrwxrwx jp/jp 299 2022-05-30 14:11 ifNest.c-
-rwxrwxrwx jp/jp 272 2022-05-30 14:11 init2.c-                                                                          -rwxrwxrwx jp/jp 272 2022-05-30 14:11 init2.c-
-rwxrwxrwx jp/jp 411 2022-05-30 14:11 init3.c-                                                                          -rwxrwxrwx jp/jp 411 2022-05-30 14:11 init3.c-
-rwxrwxrwx jp/jp 105 2022-05-30 14:11 init4.c-                                                                          -rwxrwxrwx jp/jp 105 2022-05-30 14:11 init4.c-
-rwxrwxrwx jp/jp 146 2022-05-30 14:11 init.c-                                                                           -rwxrwxrwx jp/jp 146 2022-05-30 14:11 init.c-
-rwxrwxrwx jp/jp 298 2022-05-30 14:11 mixedControl2.c-                                                                  -rwxrwxrwx jp/jp 298 2022-05-30 14:11 mixedControl2.c-
-rwxrwxrwx jp/jp 364 2022-05-30 14:11 mixedControl3.c-                                                                  -rwxrwxrwx jp/jp 364 2022-05-30 14:11 mixedControl3.c-
-rwxrwxrwx jp/jp 490 2022-05-30 14:11 mixedControl.c-                                                                   -rwxrwxrwx jp/jp 490 2022-05-30 14:11 mixedControl.c-
-rwxrwxrwx jp/jp 1547 2022-05-30 14:11 nest.c-                                                                          -rwxrwxrwx jp/jp 1547 2022-05-30 14:11 nest.c-
-rwxrwxrwx jp/jp 4230 2022-05-30 14:11 ops.c-                                                                           -rwxrwxrwx jp/jp 4230 2022-05-30 14:11 ops.c-
-rwxrwxrwx jp/jp 226 2022-05-30 14:11 optype.c-                                                                         -rwxrwxrwx jp/jp 226 2022-05-30 14:11 optype.c-
-rwxrwxrwx jp/jp 445 2022-05-30 14:11 overlapArray.c-                                                                   -rwxrwxrwx jp/jp 445 2022-05-30 14:11 overlapArray.c-
-rwxrwxrwx jp/jp 408 2022-05-30 14:11 overlap.c-                                                                        -rwxrwxrwx jp/jp 408 2022-05-30 14:11 overlap.c-
-rwxrwxrwx jp/jp 672 2022-05-30 14:11 overlapStatic.c-                                                                  -rwxrwxrwx jp/jp 672 2022-05-30 14:11 overlapStatic.c-
-rwxrwxrwx jp/jp 539 2022-05-30 14:11 part2.c-                                                                          -rwxrwxrwx jp/jp 539 2022-05-30 14:11 part2.c-
-rwxrwxrwx jp/jp 321 2022-05-30 14:11 randomRoll.c-                                                                     -rwxrwxrwx jp/jp 321 2022-05-30 14:11 randomRoll.c-
-rwxrwxrwx jp/jp 483 2022-05-30 14:11 return.c-                                                                         -rwxrwxrwx jp/jp 483 2022-05-30 14:11 return.c-
-rwxrwxrwx jp/jp 650 2022-05-30 14:11 scope.c-                                                                          -rwxrwxrwx jp/jp 650 2022-05-30 14:11 scope.c-
-rwxrwxrwx jp/jp 93 2022-05-30 14:11 static.c-                                                                          -rwxrwxrwx jp/jp 93 2022-05-30 14:11 static.c-
-rwxrwxrwx jp/jp 464 2022-05-30 14:11 strange.c-                                                                        -rwxrwxrwx jp/jp 464 2022-05-30 14:11 strange.c-
-rwxrwxrwx jp/jp 244 2022-05-30 14:11 types3.c-                                                                         -rwxrwxrwx jp/jp 244 2022-05-30 14:11 types3.c-
-rwxrwxrwx jp/jp 1748 2022-05-30 14:11 types.c-                                                                         -rwxrwxrwx jp/jp 1748 2022-05-30 14:11 types.c-
-rwxrwxrwx jp/jp 101 2022-05-30 14:11 undeclared.c-                                                                     -rwxrwxrwx jp/jp 101 2022-05-30 14:11 undeclared.c-
-rwxrwxrwx jp/jp 217 2022-05-30 14:11 uninit2.c-                                                                        -rwxrwxrwx jp/jp 217 2022-05-30 14:11 uninit2.c-
-rwxrwxrwx jp/jp 201 2022-05-30 14:11 uninit.c-                                                                         -rwxrwxrwx jp/jp 201 2022-05-30 14:11 uninit.c-
-rwxrwxrwx jp/jp 947 2022-05-30 14:11 varAssign.c-                                                                      -rwxrwxrwx jp/jp 947 2022-05-30 14:11 varAssign.c-
-rwxrwxrwx jp/jp 216 2022-05-30 14:11 var.c-                                                                            -rwxrwxrwx jp/jp 216 2022-05-30 14:11 var.c-
-rwxrwxrwx jp/jp 664 2022-05-30 14:11 varPair.c-                                                                        -rwxrwxrwx jp/jp 664 2022-05-30 14:11 varPair.c-
-rwxrwxrwx jp/jp 75 2022-05-30 14:11 while.c-                                                                           -rwxrwxrwx jp/jp 75 2022-05-30 14:11 while.c-
-rwxrwxrwx jp/jp 1792 2022-05-30 14:11 whileif.c-                                                                       -rwxrwxrwx jp/jp 1792 2022-05-30 14:11 whileif.c-

==============                                                                                                          ==============
==============                                                                                                          ==============
Test invalid input                                                                                                      Test invalid input
./c- gcd.c- (should produce no tree)                                                                                    ./c- gcd.c- (should produce no tree)
ERROR(ARGLIST): source file "gcd.c-" could not be opened.                                                               ERROR(ARGLIST): source file "gcd.c-" could not be opened.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 1                                                                                                     Number of errors: 1

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P allbad.c-                                                                                                       ./c- -P allbad.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
ERROR(7): '<=' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(7): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(8): '<=' requires operands of the same type but lhs is type int and rhs is type bool.                             ERROR(8): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(9): '<=' requires operands of the same type but lhs is type int and rhs is type char.                             ERROR(9): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(11): '>' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(11): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(13): '!<' requires operands of the same type but lhs is type bool and rhs is type int.                            ERROR(13): '!<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(13): '!>' requires operands of the same type but lhs is type bool and rhs is type int.                            ERROR(13): '!>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(14): '=' requires operands of the same type but lhs is type int and rhs is type bool.                             ERROR(14): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(15): 'and' requires operands of type bool but lhs is of type int.                                                 ERROR(15): 'and' requires operands of type bool but lhs is of type int.
ERROR(15): Unary 'not' requires an operand of type bool but was given type int.                                         ERROR(15): Unary 'not' requires an operand of type bool but was given type int.
ERROR(16): 'or' requires operands of type bool but lhs is of type int.                                                  ERROR(16): 'or' requires operands of type bool but lhs is of type int.
ERROR(16): Unary 'not' requires an operand of type bool but was given type int.                                         ERROR(16): Unary 'not' requires an operand of type bool but was given type int.
ERROR(17): '<=' requires operands of the same type but lhs is type int and rhs is type bool.                            ERROR(17): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(21): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(21): '+' requires operands of type int but lhs is of type bool.
ERROR(22): '-' requires operands of type int but rhs is of type bool.                                                   ERROR(22): '-' requires operands of type int but rhs is of type bool.
ERROR(23): '*' requires operands of type int but lhs is of type bool.                                                   ERROR(23): '*' requires operands of type int but lhs is of type bool.
ERROR(24): '/' requires operands of type int but rhs is of type bool.                                                   ERROR(24): '/' requires operands of type int but rhs is of type bool.
ERROR(25): '%' requires operands of type int but lhs is of type bool.                                                   ERROR(25): '%' requires operands of type int but lhs is of type bool.
ERROR(27): '+=' requires operands of type int but lhs is of type bool.                                                  ERROR(27): '+=' requires operands of type int but lhs is of type bool.
ERROR(28): '-=' requires operands of type int but lhs is of type bool.                                                  ERROR(28): '-=' requires operands of type int but lhs is of type bool.
ERROR(29): '*=' requires operands of type int but lhs is of type bool.                                                  ERROR(29): '*=' requires operands of type int but lhs is of type bool.
ERROR(30): '/=' requires operands of type int but lhs is of type bool.                                                  ERROR(30): '/=' requires operands of type int but lhs is of type bool.
ERROR(32): Unary 'chsign' requires an operand of type int but was given type bool.                                      ERROR(32): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(33): Unary 'not' requires an operand of type bool but was given type int.                                         ERROR(33): Unary 'not' requires an operand of type bool but was given type int.
ERROR(34): Unary '?' requires an operand of type int but was given type bool.                                           ERROR(34): Unary '?' requires an operand of type int but was given type bool.
WARNING(42): Variable 'aa' may be uninitialized when used here.                                                         WARNING(42): Variable 'aa' may be uninitialized when used here.
ERROR(43): Array 'ba' should be indexed by type int but got type char.                                                  ERROR(43): Array 'ba' should be indexed by type int but got type char.
ERROR(43): '<=' requires operands of the same type but lhs is type char and rhs is type int.                            ERROR(43): '<=' requires operands of the same type but lhs is type char and rhs is type int.
WARNING(43): Variable 'b' may be uninitialized when used here.                                                          WARNING(43): Variable 'b' may be uninitialized when used here.
ERROR(44): Array 'ca' should be indexed by type int but got type bool.                                                  ERROR(44): Array 'ca' should be indexed by type int but got type bool.
ERROR(44): '<=' requires operands of the same type but lhs is type int and rhs is type bool.                            ERROR(44): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
WARNING(44): Variable 'c' may be uninitialized when used here.                                                          WARNING(44): Variable 'c' may be uninitialized when used here.
ERROR(45): Array 'aa' should be indexed by type int but got type bool.                                                  ERROR(45): Array 'aa' should be indexed by type int but got type bool.
ERROR(45): Array index is the unindexed array 'aa'.                                                                     ERROR(45): Array index is the unindexed array 'aa'.
ERROR(46): Cannot index nonarray 'cat'.                                                                                 ERROR(46): Cannot index nonarray 'cat'.
ERROR(46): Cannot use function 'cat' as a variable.                                                                     ERROR(46): Cannot use function 'cat' as a variable.
ERROR(47): Cannot use function 'cat' as a variable.                                                                     ERROR(47): Cannot use function 'cat' as a variable.
ERROR(54): '<=' requires operands of the same type but lhs is type char and rhs is type int.                            ERROR(54): '<=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(65): '<=' requires operands of the same type but lhs is type int and rhs is type char.                            ERROR(65): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(67): Cannot return an array.                                                                                      ERROR(67): Cannot return an array.
WARNING(73): Variable 'i' may be uninitialized when used here.                                                          WARNING(73): Variable 'i' may be uninitialized when used here.
ERROR(79): Symbol 'a' is already declared at line 79.                                                                   ERROR(79): Symbol 'a' is already declared at line 79.
ERROR(81): Symbol 'a' is already declared at line 79.                                                                   ERROR(81): Symbol 'a' is already declared at line 79.
ERROR(82): Symbol 'b' is not declared.                                                                                  ERROR(82): Symbol 'b' is not declared.
WARNING(84): The variable 'a' seems not to be used.                                                                     WARNING(84): The variable 'a' seems not to be used.
ERROR(85): Symbol 'c' is not declared.                                                                                  ERROR(85): Symbol 'c' is not declared.
ERROR(85): Symbol 'c' is not declared.                                                                                  ERROR(85): Symbol 'c' is not declared.
ERROR(86): Symbol 'c' is not declared.                                                                                  ERROR(86): Symbol 'c' is not declared.
WARNING(86): Variable 'b' may be uninitialized when used here.                                                          WARNING(86): Variable 'b' may be uninitialized when used here.
ERROR(96): The operation '?' does not work with arrays.                                                                 ERROR(96): The operation '?' does not work with arrays.
ERROR(96): Unary '?' requires an operand of type int but was given type char.                                           ERROR(96): Unary '?' requires an operand of type int but was given type char.
ERROR(97): '/' requires operands of type int but lhs is of type char.                                                   ERROR(97): '/' requires operands of type int but lhs is of type char.
ERROR(97): '/' requires operands of type int but rhs is of type char.                                                   ERROR(97): '/' requires operands of type int but rhs is of type char.
ERROR(97): The operation '/' does not work with arrays.                                                                 ERROR(97): The operation '/' does not work with arrays.
ERROR(98): The operation 'sizeof' only works with arrays.                                                               ERROR(98): The operation 'sizeof' only works with arrays.
ERROR(99): 'bbb' is a simple variable and cannot be called.                                                             ERROR(99): 'bbb' is a simple variable and cannot be called.
ERROR(102): '<=' requires operands of the same type but lhs is type char and rhs is type bool.                          ERROR(102): '<=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(105): '+' requires operands of type int but lhs is of type void.                                                  ERROR(105): '+' requires operands of type int but lhs is of type void.
ERROR(105): '+' requires operands of type int but rhs is of type bool.                                                  ERROR(105): '+' requires operands of type int but rhs is of type bool.
ERROR(107): '+' requires operands of type int but lhs is of type char.                                                  ERROR(107): '+' requires operands of type int but lhs is of type char.
ERROR(110): Symbol 'mane' is already declared at line 91.                                                               ERROR(110): Symbol 'mane' is already declared at line 91.
Number of warnings: 6                                                                                                   Number of warnings: 6
Number of errors: 56                                                                                                    Number of errors: 56

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P allgood.c-                                                                                                      ./c- -P allgood.c-
WARNING(40): Variable 'aa' may be uninitialized when used here.                                                         WARNING(40): Variable 'aa' may be uninitialized when used here.
WARNING(41): Variable 'b' may be uninitialized when used here.                                                          WARNING(41): Variable 'b' may be uninitialized when used here.
WARNING(42): Variable 'c' may be uninitialized when used here.                                                          WARNING(42): Variable 'c' may be uninitialized when used here.
WARNING(48): The variable 'z' seems not to be used.                                                                     WARNING(48): The variable 'z' seems not to be used.
WARNING(70): Variable 'i' may be uninitialized when used here.                                                          WARNING(70): Variable 'i' may be uninitialized when used here.
Func: ant returns type int [line: 1]                                                                                    Func: ant returns type int [line: 1]
. Child: 1 Compound [line: 1]                                                                                           . Child: 1 Compound [line: 1]
. . Child: 1 Return [line: 1]                                                                                           . . Child: 1 Return [line: 1]
. . . Child: 0 Const 111 of type int [line: 1]                                                                          . . . Child: 0 Const 111 of type int [line: 1]
Sibling: 1 Func: bat returns type void [line: 2]                                                                        Sibling: 1 Func: bat returns type void [line: 2]
. Child: 0 Parm: a of type int [line: 2]                                                                                . Child: 0 Parm: a of type int [line: 2]
. Sibling: 1 Parm: c of type char [line: 2]                                                                             . Sibling: 1 Parm: c of type char [line: 2]
. Child: 1 Compound [line: 2]                                                                                           . Child: 1 Compound [line: 2]
. . Child: 0 Var: b of type bool [line: 3]                                                                              . . Child: 0 Var: b of type bool [line: 3]
. . . Child: 0 Const false of type bool [line: 3]                                                                       . . . Child: 0 Const false of type bool [line: 3]
. . Child: 1 Assign: <= of type int [line: 5]                                                                           . . Child: 1 Assign: <= of type int [line: 5]
. . . Child: 0 Id: a of type int [line: 5]                                                                              . . . Child: 0 Id: a of type int [line: 5]
. . . Child: 1 Const 222 of type int [line: 5]                                                                          . . . Child: 1 Const 222 of type int [line: 5]
. . Sibling: 1 Assign: <= of type bool [line: 6]                                                                        . . Sibling: 1 Assign: <= of type bool [line: 6]
. . . Child: 0 Id: b of type bool [line: 6]                                                                             . . . Child: 0 Id: b of type bool [line: 6]
. . . Child: 1 Const true of type bool [line: 6]                                                                        . . . Child: 1 Const true of type bool [line: 6]
. . Sibling: 2 Assign: <= of type char [line: 7]                                                                        . . Sibling: 2 Assign: <= of type char [line: 7]
. . . Child: 0 Id: c of type char [line: 7]                                                                             . . . Child: 0 Id: c of type char [line: 7]
. . . Child: 1 Const 'z' of type char [line: 7]                                                                         . . . Child: 1 Const 'z' of type char [line: 7]
. . Sibling: 3 If [line: 9]                                                                                             . . Sibling: 3 If [line: 9]
. . . Child: 0 Op: > of type bool [line: 9]                                                                             . . . Child: 0 Op: > of type bool [line: 9]
. . . . Child: 0 Id: a of type int [line: 9]                                                                            . . . . Child: 0 Id: a of type int [line: 9]
. . . . Child: 1 Const 222 of type int [line: 9]                                                                        . . . . Child: 1 Const 222 of type int [line: 9]
. . . Child: 1 Const 333 of type int [line: 9]                                                                          . . . Child: 1 Const 333 of type int [line: 9]
. . Sibling: 4 If [line: 10]                                                                                            . . Sibling: 4 If [line: 10]
. . . Child: 0 Op: < of type bool [line: 10]                                                                            . . . Child: 0 Op: < of type bool [line: 10]
. . . . Child: 0 Id: a of type int [line: 10]                                                                           . . . . Child: 0 Id: a of type int [line: 10]
. . . . Child: 1 Const 333 of type int [line: 10]                                                                       . . . . Child: 1 Const 333 of type int [line: 10]
. . . Child: 1 Const 444 of type int [line: 10]                                                                         . . . Child: 1 Const 444 of type int [line: 10]
. . . Child: 2 Const 555 of type int [line: 10]                                                                         . . . Child: 2 Const 555 of type int [line: 10]
. . Sibling: 5 If [line: 11]                                                                                            . . Sibling: 5 If [line: 11]
. . . Child: 0 Op: !> of type bool [line: 11]                                                                           . . . Child: 0 Op: !> of type bool [line: 11]
. . . . Child: 0 Id: a of type int [line: 11]                                                                           . . . . Child: 0 Id: a of type int [line: 11]
. . . . Child: 1 Const 666 of type int [line: 11]                                                                       . . . . Child: 1 Const 666 of type int [line: 11]
. . . Child: 1 If [line: 11]                                                                                            . . . Child: 1 If [line: 11]
. . . . Child: 0 Op: !< of type bool [line: 11]                                                                         . . . . Child: 0 Op: !< of type bool [line: 11]
. . . . . Child: 0 Id: a of type int [line: 11]                                                                         . . . . . Child: 0 Id: a of type int [line: 11]
. . . . . Child: 1 Const 777 of type int [line: 11]                                                                     . . . . . Child: 1 Const 777 of type int [line: 11]
. . . . Child: 1 Const 888 of type int [line: 11]                                                                       . . . . Child: 1 Const 888 of type int [line: 11]
. . . . Child: 2 Const 555 of type int [line: 11]                                                                       . . . . Child: 2 Const 555 of type int [line: 11]
. . Sibling: 6 While [line: 12]                                                                                         . . Sibling: 6 While [line: 12]
. . . Child: 0 Op: = of type bool [line: 12]                                                                            . . . Child: 0 Op: = of type bool [line: 12]
. . . . Child: 0 Const 999 of type int [line: 12]                                                                       . . . . Child: 0 Const 999 of type int [line: 12]
. . . . Child: 1 Id: a of type int [line: 12]                                                                           . . . . Child: 1 Id: a of type int [line: 12]
. . . Child: 1 Const 1010 of type int [line: 12]                                                                        . . . Child: 1 Const 1010 of type int [line: 12]
. . Sibling: 7 If [line: 13]                                                                                            . . Sibling: 7 If [line: 13]
. . . Child: 0 Id: b of type bool [line: 13]                                                                            . . . Child: 0 Id: b of type bool [line: 13]
. . . Child: 1 If [line: 13]                                                                                            . . . Child: 1 If [line: 13]
. . . . Child: 0 Op: not of type bool [line: 13]                                                                        . . . . Child: 0 Op: not of type bool [line: 13]
. . . . . Child: 0 Id: b of type bool [line: 13]                                                                        . . . . . Child: 0 Id: b of type bool [line: 13]
. . . . Child: 1 While [line: 13]                                                                                       . . . . Child: 1 While [line: 13]
. . . . . Child: 0 Op: and of type bool [line: 13]                                                                      . . . . . Child: 0 Op: and of type bool [line: 13]
. . . . . . Child: 0 Id: b of type bool [line: 13]                                                                      . . . . . . Child: 0 Id: b of type bool [line: 13]
. . . . . . Child: 1 Const true of type bool [line: 13]                                                                 . . . . . . Child: 1 Const true of type bool [line: 13]
. . . . . Child: 1 Const 1111 of type int [line: 13]                                                                    . . . . . Child: 1 Const 1111 of type int [line: 13]
. . . . Child: 2 Const 1212 of type int [line: 13]                                                                      . . . . Child: 2 Const 1212 of type int [line: 13]
. . Sibling: 8 If [line: 14]                                                                                            . . Sibling: 8 If [line: 14]
. . . Child: 0 Id: b of type bool [line: 14]                                                                            . . . Child: 0 Id: b of type bool [line: 14]
. . . Child: 1 If [line: 14]                                                                                            . . . Child: 1 If [line: 14]
. . . . Child: 0 Op: not of type bool [line: 14]                                                                        . . . . Child: 0 Op: not of type bool [line: 14]
. . . . . Child: 0 Id: b of type bool [line: 14]                                                                        . . . . . Child: 0 Id: b of type bool [line: 14]
. . . . Child: 1 While [line: 14]                                                                                       . . . . Child: 1 While [line: 14]
. . . . . Child: 0 Op: or of type bool [line: 14]                                                                       . . . . . Child: 0 Op: or of type bool [line: 14]
. . . . . . Child: 0 Id: b of type bool [line: 14]                                                                      . . . . . . Child: 0 Id: b of type bool [line: 14]
. . . . . . Child: 1 Const true of type bool [line: 14]                                                                 . . . . . . Child: 1 Const true of type bool [line: 14]
. . . . . Child: 1 Const 1313 of type int [line: 14]                                                                    . . . . . Child: 1 Const 1313 of type int [line: 14]
. . . . Child: 2 Const 1414 of type int [line: 14]                                                                      . . . . Child: 2 Const 1414 of type int [line: 14]
. . . Child: 2 Const 1515 of type int [line: 14]                                                                        . . . Child: 2 Const 1515 of type int [line: 14]
. . Sibling: 9 If [line: 15]                                                                                            . . Sibling: 9 If [line: 15]
. . . Child: 0 Assign: <= of type bool [line: 15]                                                                       . . . Child: 0 Assign: <= of type bool [line: 15]
. . . . Child: 0 Id: b of type bool [line: 15]                                                                          . . . . Child: 0 Id: b of type bool [line: 15]
. . . . Child: 1 Const true of type bool [line: 15]                                                                     . . . . Child: 1 Const true of type bool [line: 15]
. . . Child: 1 Const 1616 of type int [line: 15]                                                                        . . . Child: 1 Const 1616 of type int [line: 15]
. . Sibling: 10 While [line: 17]                                                                                        . . Sibling: 10 While [line: 17]
. . . Child: 0 Const false of type bool [line: 17]                                                                      . . . Child: 0 Const false of type bool [line: 17]
. . . Child: 1 Break [line: 17]                                                                                         . . . Child: 1 Break [line: 17]
. . Sibling: 11 Op: + of type int [line: 19]                                                                            . . Sibling: 11 Op: + of type int [line: 19]
. . . Child: 0 Id: a of type int [line: 19]                                                                             . . . Child: 0 Id: a of type int [line: 19]
. . . Child: 1 Const 1717 of type int [line: 19]                                                                        . . . Child: 1 Const 1717 of type int [line: 19]
. . Sibling: 12 Op: - of type int [line: 20]                                                                            . . Sibling: 12 Op: - of type int [line: 20]
. . . Child: 0 Const 1818 of type int [line: 20]                                                                        . . . Child: 0 Const 1818 of type int [line: 20]
. . . Child: 1 Id: a of type int [line: 20]                                                                             . . . Child: 1 Id: a of type int [line: 20]
. . Sibling: 13 Op: * of type int [line: 21]                                                                            . . Sibling: 13 Op: * of type int [line: 21]
. . . Child: 0 Id: a of type int [line: 21]                                                                             . . . Child: 0 Id: a of type int [line: 21]
. . . Child: 1 Const 1919 of type int [line: 21]                                                                        . . . Child: 1 Const 1919 of type int [line: 21]
. . Sibling: 14 Op: / of type int [line: 22]                                                                            . . Sibling: 14 Op: / of type int [line: 22]
. . . Child: 0 Const 2020 of type int [line: 22]                                                                        . . . Child: 0 Const 2020 of type int [line: 22]
. . . Child: 1 Id: a of type int [line: 22]                                                                             . . . Child: 1 Id: a of type int [line: 22]
. . Sibling: 15 Op: % of type int [line: 23]                                                                            . . Sibling: 15 Op: % of type int [line: 23]
. . . Child: 0 Id: a of type int [line: 23]                                                                             . . . Child: 0 Id: a of type int [line: 23]
. . . Child: 1 Const 2121 of type int [line: 23]                                                                        . . . Child: 1 Const 2121 of type int [line: 23]
. . Sibling: 16 Assign: += of type int [line: 25]                                                                       . . Sibling: 16 Assign: += of type int [line: 25]
. . . Child: 0 Id: a of type int [line: 25]                                                                             . . . Child: 0 Id: a of type int [line: 25]
. . . Child: 1 Const 1 of type int [line: 25]                                                                           . . . Child: 1 Const 1 of type int [line: 25]
. . Sibling: 17 Assign: -= of type int [line: 26]                                                                       . . Sibling: 17 Assign: -= of type int [line: 26]
. . . Child: 0 Id: a of type int [line: 26]                                                                             . . . Child: 0 Id: a of type int [line: 26]
. . . Child: 1 Const 2 of type int [line: 26]                                                                           . . . Child: 1 Const 2 of type int [line: 26]
. . Sibling: 18 Assign: *= of type int [line: 27]                                                                       . . Sibling: 18 Assign: *= of type int [line: 27]
. . . Child: 0 Id: a of type int [line: 27]                                                                             . . . Child: 0 Id: a of type int [line: 27]
. . . Child: 1 Const 3 of type int [line: 27]                                                                           . . . Child: 1 Const 3 of type int [line: 27]
. . Sibling: 19 Assign: /= of type int [line: 28]                                                                       . . Sibling: 19 Assign: /= of type int [line: 28]
. . . Child: 0 Id: a of type int [line: 28]                                                                             . . . Child: 0 Id: a of type int [line: 28]
. . . Child: 1 Const 4 of type int [line: 28]                                                                           . . . Child: 1 Const 4 of type int [line: 28]
. . Sibling: 20 Op: chsign of type int [line: 30]                                                                       . . Sibling: 20 Op: chsign of type int [line: 30]
. . . Child: 0 Id: a of type int [line: 30]                                                                             . . . Child: 0 Id: a of type int [line: 30]
. . Sibling: 21 Op: not of type bool [line: 31]                                                                         . . Sibling: 21 Op: not of type bool [line: 31]
. . . Child: 0 Id: b of type bool [line: 31]                                                                            . . . Child: 0 Id: b of type bool [line: 31]
. . Sibling: 22 Op: ? of type int [line: 32]                                                                            . . Sibling: 22 Op: ? of type int [line: 32]
. . . Child: 0 Id: a of type int [line: 32]                                                                             . . . Child: 0 Id: a of type int [line: 32]
Sibling: 2 Func: cat returns type char [line: 35]                                                                       Sibling: 2 Func: cat returns type char [line: 35]
. Child: 1 Compound [line: 36]                                                                                          . Child: 1 Compound [line: 36]
. . Child: 0 Var: a of type int [line: 37]                                                                              . . Child: 0 Var: a of type int [line: 37]
. . Sibling: 1 Var: b of type bool [line: 37]                                                                           . . Sibling: 1 Var: b of type bool [line: 37]
. . Sibling: 2 Var: c of type char [line: 37]                                                                           . . Sibling: 2 Var: c of type char [line: 37]
. . Sibling: 3 Var: aa is array of type int [line: 38]                                                                  . . Sibling: 3 Var: aa is array of type int [line: 38]
. . Sibling: 4 Var: ba is array of type bool [line: 38]                                                                 . . Sibling: 4 Var: ba is array of type bool [line: 38]
. . Sibling: 5 Var: ca is array of type char [line: 38]                                                                 . . Sibling: 5 Var: ca is array of type char [line: 38]
. . Child: 1 Op: [ of type int [line: 40]                                                                               . . Child: 1 Op: [ of type int [line: 40]
. . . Child: 0 Id: aa of type int [line: 40]                                                                            . . . Child: 0 Id: aa of type int [line: 40]
. . . Child: 1 Const 2 of type int [line: 40]                                                                           . . . Child: 1 Const 2 of type int [line: 40]
. . Sibling: 1 Assign: <= of type bool [line: 41]                                                                       . . Sibling: 1 Assign: <= of type bool [line: 41]
. . . Child: 0 Op: [ of type bool [line: 41]                                                                            . . . Child: 0 Op: [ of type bool [line: 41]
. . . . Child: 0 Id: ba of type bool [line: 41]                                                                         . . . . Child: 0 Id: ba of type bool [line: 41]
. . . . Child: 1 Id: a of type int [line: 41]                                                                           . . . . Child: 1 Id: a of type int [line: 41]
. . . Child: 1 Id: b of type bool [line: 41]                                                                            . . . Child: 1 Id: b of type bool [line: 41]
. . Sibling: 2 Assign: <= of type char [line: 42]                                                                       . . Sibling: 2 Assign: <= of type char [line: 42]
. . . Child: 0 Op: [ of type char [line: 42]                                                                            . . . Child: 0 Op: [ of type char [line: 42]
. . . . Child: 0 Id: ca of type char [line: 42]                                                                         . . . . Child: 0 Id: ca of type char [line: 42]
. . . . Child: 1 Op: [ of type int [line: 42]                                                                           . . . . Child: 1 Op: [ of type int [line: 42]
. . . . . Child: 0 Id: aa of type int [line: 42]                                                                        . . . . . Child: 0 Id: aa of type int [line: 42]
. . . . . Child: 1 Const 1 of type int [line: 42]                                                                       . . . . . Child: 1 Const 1 of type int [line: 42]
. . . Child: 1 Id: c of type char [line: 42]                                                                            . . . Child: 1 Id: c of type char [line: 42]
. . Sibling: 3 Op: sizeof of type int [line: 44]                                                                        . . Sibling: 3 Op: sizeof of type int [line: 44]
. . . Child: 0 Id: ba of type bool [line: 44]                                                                           . . . Child: 0 Id: ba of type bool [line: 44]
. . Sibling: 4 Op: ? of type int [line: 45]                                                                             . . Sibling: 4 Op: ? of type int [line: 45]
. . . Child: 0 Const 11 of type int [line: 45]                                                                          . . . Child: 0 Const 11 of type int [line: 45]
. . Sibling: 5 For [line: 47]                                                                                           . . Sibling: 5 For [line: 47]
. . . Child: 0 Var: z of type int [line: 47]                                                                            . . . Child: 0 Var: z of type int [line: 47]
. . . Child: 1 Range [line: 47]                                                                                         . . . Child: 1 Range [line: 47]
. . . . Child: 0 Id: aa of undefined type [line: 47]                                                                    . . . . Child: 0 Id: aa of undefined type [line: 47]
. . . . Child: 1 Id: aa of undefined type [line: 47]                                                                    . . . . Child: 1 Id: aa of undefined type [line: 47]
. . . Child: 2 Op: + of type int [line: 47]                                                                             . . . Child: 2 Op: + of type int [line: 47]
. . . . Child: 0 Id: z of type int [line: 47]                                                                           . . . . Child: 0 Id: z of type int [line: 47]
. . . . Child: 1 Id: z of type int [line: 47]                                                                           . . . . Child: 1 Id: z of type int [line: 47]
. . Sibling: 6 For [line: 48]                                                                                           . . Sibling: 6 For [line: 48]
. . . Child: 0 Var: z of type int [line: 48]                                                                            . . . Child: 0 Var: z of type int [line: 48]
. . . Child: 1 Range [line: 48]                                                                                         . . . Child: 1 Range [line: 48]
. . . . Child: 0 Id: ba of undefined type [line: 48]                                                                    . . . . Child: 0 Id: ba of undefined type [line: 48]
. . . . Child: 1 Id: aa of undefined type [line: 48]                                                                    . . . . Child: 1 Id: aa of undefined type [line: 48]
. . . . Child: 2 Id: aa of undefined type [line: 48]                                                                    . . . . Child: 2 Id: aa of undefined type [line: 48]
. . . Child: 2 Op: and of type bool [line: 48]                                                                          . . . Child: 2 Op: and of type bool [line: 48]
. . . . Child: 0 Id: b of type bool [line: 48]                                                                          . . . . Child: 0 Id: b of type bool [line: 48]
. . . . Child: 1 Id: b of type bool [line: 48]                                                                          . . . . Child: 1 Id: b of type bool [line: 48]
. . Sibling: 7 For [line: 49]                                                                                           . . Sibling: 7 For [line: 49]
. . . Child: 0 Var: z of type int [line: 49]                                                                            . . . Child: 0 Var: z of type int [line: 49]
. . . Child: 1 Range [line: 49]                                                                                         . . . Child: 1 Range [line: 49]
. . . . Child: 0 Op: + of undefined type [line: 49]                                                                     . . . . Child: 0 Op: + of undefined type [line: 49]
. . . . . Child: 0 Const 3 of type int [line: 49]                                                                       . . . . . Child: 0 Const 3 of type int [line: 49]
. . . . . Child: 1 Const 4 of type int [line: 49]                                                                       . . . . . Child: 1 Const 4 of type int [line: 49]
. . . . Child: 1 Op: * of undefined type [line: 49]                                                                     . . . . Child: 1 Op: * of undefined type [line: 49]
. . . . . Child: 0 Const 7 of type int [line: 49]                                                                       . . . . . Child: 0 Const 7 of type int [line: 49]
. . . . . Child: 1 Const 8 of type int [line: 49]                                                                       . . . . . Child: 1 Const 8 of type int [line: 49]
. . . . Child: 2 Op: % of undefined type [line: 49]                                                                     . . . . Child: 2 Op: % of undefined type [line: 49]
. . . . . Child: 0 Const 15 of type int [line: 49]                                                                      . . . . . Child: 0 Const 15 of type int [line: 49]
. . . . . Child: 1 Const 3 of type int [line: 49]                                                                       . . . . . Child: 1 Const 3 of type int [line: 49]
. . . Child: 2 Compound [line: 49]                                                                                      . . . Child: 2 Compound [line: 49]
. . . . Child: 1 Assign: <= of type int [line: 50]                                                                      . . . . Child: 1 Assign: <= of type int [line: 50]
. . . . . Child: 0 Id: a of type int [line: 50]                                                                         . . . . . Child: 0 Id: a of type int [line: 50]
. . . . . Child: 1 Id: z of type int [line: 50]                                                                         . . . . . Child: 1 Id: z of type int [line: 50]
. . . . Sibling: 1 Assign: <= of type int [line: 51]                                                                    . . . . Sibling: 1 Assign: <= of type int [line: 51]
. . . . . Child: 0 Id: z of type int [line: 51]                                                                         . . . . . Child: 0 Id: z of type int [line: 51]
. . . . . Child: 1 Id: a of type int [line: 51]                                                                         . . . . . Child: 1 Id: a of type int [line: 51]
. . Sibling: 8 Assign: <= of type int [line: 54]                                                                        . . Sibling: 8 Assign: <= of type int [line: 54]
. . . Child: 0 Id: aa of type int [line: 54]                                                                            . . . Child: 0 Id: aa of type int [line: 54]
. . . Child: 1 Id: aa of type int [line: 54]                                                                            . . . Child: 1 Id: aa of type int [line: 54]
. . Sibling: 9 Op: = of type bool [line: 55]                                                                            . . Sibling: 9 Op: = of type bool [line: 55]
. . . Child: 0 Id: ba of type bool [line: 55]                                                                           . . . Child: 0 Id: ba of type bool [line: 55]
. . . Child: 1 Id: ba of type bool [line: 55]                                                                           . . . Child: 1 Id: ba of type bool [line: 55]
. . Sibling: 10 Op: != of type bool [line: 56]                                                                          . . Sibling: 10 Op: != of type bool [line: 56]
. . . Child: 0 Id: ca of type char [line: 56]                                                                           . . . Child: 0 Id: ca of type char [line: 56]
. . . Child: 1 Id: ca of type char [line: 56]                                                                           . . . Child: 1 Id: ca of type char [line: 56]
. . Sibling: 11 Op: > of type bool [line: 57]                                                                           . . Sibling: 11 Op: > of type bool [line: 57]
. . . Child: 0 Id: aa of type int [line: 57]                                                                            . . . Child: 0 Id: aa of type int [line: 57]
. . . Child: 1 Id: aa of type int [line: 57]                                                                            . . . Child: 1 Id: aa of type int [line: 57]
. . Sibling: 12 Op: !< of type bool [line: 58]                                                                          . . Sibling: 12 Op: !< of type bool [line: 58]
. . . Child: 0 Id: ba of type bool [line: 58]                                                                           . . . Child: 0 Id: ba of type bool [line: 58]
. . . Child: 1 Id: ba of type bool [line: 58]                                                                           . . . Child: 1 Id: ba of type bool [line: 58]
. . Sibling: 13 Op: < of type bool [line: 59]                                                                           . . Sibling: 13 Op: < of type bool [line: 59]
. . . Child: 0 Id: ca of type char [line: 59]                                                                           . . . Child: 0 Id: ca of type char [line: 59]
. . . Child: 1 Id: ca of type char [line: 59]                                                                           . . . Child: 1 Id: ca of type char [line: 59]
. . Sibling: 14 Op: !> of type bool [line: 60]                                                                          . . Sibling: 14 Op: !> of type bool [line: 60]
. . . Child: 0 Id: aa of type int [line: 60]                                                                            . . . Child: 0 Id: aa of type int [line: 60]
. . . Child: 1 Id: aa of type int [line: 60]                                                                            . . . Child: 1 Id: aa of type int [line: 60]
. . Sibling: 15 Assign: <= of type char [line: 62]                                                                      . . Sibling: 15 Assign: <= of type char [line: 62]
. . . Child: 0 Id: ca of type char [line: 62]                                                                           . . . Child: 0 Id: ca of type char [line: 62]
. . . Child: 1 Const is array "dogs are great" of type char [line: 62]                                                  . . . Child: 1 Const is array "dogs are great" of type char [line: 62]
. . Sibling: 16 Return [line: 64]                                                                                       . . Sibling: 16 Return [line: 64]
. . . Child: 0 Const 'm' of type char [line: 64]                                                                        . . . Child: 0 Const 'm' of type char [line: 64]
Sibling: 3 Func: dog returns type void [line: 67]                                                                       Sibling: 3 Func: dog returns type void [line: 67]
. Child: 0 Parm: i of type int [line: 67]                                                                               . Child: 0 Parm: i of type int [line: 67]
. Child: 1 Compound [line: 67]                                                                                          . Child: 1 Compound [line: 67]
. . Child: 1 If [line: 68]                                                                                              . . Child: 1 If [line: 68]
. . . Child: 0 Op: = of type bool [line: 68]                                                                            . . . Child: 0 Op: = of type bool [line: 68]
. . . . Child: 0 Id: i of type int [line: 68]                                                                           . . . . Child: 0 Id: i of type int [line: 68]
. . . . Child: 1 Const 3 of type int [line: 68]                                                                         . . . . Child: 1 Const 3 of type int [line: 68]
. . . Child: 1 Compound [line: 68]                                                                                      . . . Child: 1 Compound [line: 68]
. . . . Child: 0 Var: i of type int [line: 69]                                                                          . . . . Child: 0 Var: i of type int [line: 69]
. . . . Child: 1 Assign: <= of type int [line: 70]                                                                      . . . . Child: 1 Assign: <= of type int [line: 70]
. . . . . Child: 0 Id: i of type int [line: 70]                                                                         . . . . . Child: 0 Id: i of type int [line: 70]
. . . . . Child: 1 Id: i of type int [line: 70]                                                                         . . . . . Child: 1 Id: i of type int [line: 70]
Sibling: 4 Func: main returns type int [line: 74]                                                                       Sibling: 4 Func: main returns type int [line: 74]
. Child: 1 Compound [line: 75]                                                                                          . Child: 1 Compound [line: 75]
. . Child: 0 Var: bbb of type bool [line: 76]                                                                           . . Child: 0 Var: bbb of type bool [line: 76]
. . Sibling: 1 Var: ccc is array of type char [line: 77]                                                                . . Sibling: 1 Var: ccc is array of type char [line: 77]
. . . Child: 0 Const is array "cows" of type char [line: 77]                                                            . . . Child: 0 Const is array "cows" of type char [line: 77]
. . Child: 1 Call: ant of type int [line: 79]                                                                           . . Child: 1 Call: ant of type int [line: 79]
. . Sibling: 1 Call: bat of type void [line: 80]                                                                        . . Sibling: 1 Call: bat of type void [line: 80]
. . . Child: 0 Const 676 of type int [line: 80]                                                                         . . . Child: 0 Const 676 of type int [line: 80]
. . . Sibling: 1 Const 'g' of type char [line: 80]                                                                      . . . Sibling: 1 Const 'g' of type char [line: 80]
. . Sibling: 2 Call: cat of type char [line: 81]                                                                        . . Sibling: 2 Call: cat of type char [line: 81]
. . Sibling: 3 Call: bat of type void [line: 82]                                                                        . . Sibling: 3 Call: bat of type void [line: 82]
. . . Child: 0 Call: ant of type int [line: 82]                                                                         . . . Child: 0 Call: ant of type int [line: 82]
. . . Sibling: 1 Call: cat of type char [line: 82]                                                                      . . . Sibling: 1 Call: cat of type char [line: 82]
. . Sibling: 4 Assign: <= of type bool [line: 83]                                                                       . . Sibling: 4 Assign: <= of type bool [line: 83]
. . . Child: 0 Id: bbb of type bool [line: 83]                                                                          . . . Child: 0 Id: bbb of type bool [line: 83]
. . . Child: 1 Op: != of type bool [line: 83]                                                                           . . . Child: 1 Op: != of type bool [line: 83]
. . . . Child: 0 Op: [ of type char [line: 83]                                                                          . . . . Child: 0 Op: [ of type char [line: 83]
. . . . . Child: 0 Id: ccc of type char [line: 83]                                                                      . . . . . Child: 0 Id: ccc of type char [line: 83]
. . . . . Child: 1 Const 2 of type int [line: 83]                                                                       . . . . . Child: 1 Const 2 of type int [line: 83]
. . . . Child: 1 Const 'r' of type char [line: 83]                                                                      . . . . Child: 1 Const 'r' of type char [line: 83]
. . Sibling: 5 Return [line: 85]                                                                                        . . Sibling: 5 Return [line: 85]
. . . Child: 0 Op: + of type int [line: 85]                                                                             . . . Child: 0 Op: + of type int [line: 85]
. . . . Child: 0 Call: ant of type int [line: 85]                                                                       . . . . Child: 0 Call: ant of type int [line: 85]
. . . . Child: 1 Const 807 of type int [line: 85]                                                                       . . . . Child: 1 Const 807 of type int [line: 85]
Number of warnings: 5                                                                                                   Number of warnings: 5
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P array.c-                                                                                                        ./c- -P array.c-
ERROR(11): Symbol 'output' is not declared.                                                                             ERROR(11): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
WARNING(12): Variable 'b' may be uninitialized when used here.                                                          WARNING(12): Variable 'b' may be uninitialized when used here.
ERROR(13): Symbol 'output' is not declared.                                                                             ERROR(13): Symbol 'output' is not declared.
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 3                                                                                                     Number of errors: 3

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P arrayops.c-                                                                                                     ./c- -P arrayops.c-
ERROR(13): '<=' requires both operands be arrays or not but lhs is not an array and rhs is an array.                    ERROR(13): '<=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(14): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(14): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(18): The operation 'chsign' does not work with arrays.                                                            ERROR(18): The operation 'chsign' does not work with arrays.
ERROR(19): The operation 'chsign' does not work with arrays.                                                            ERROR(19): The operation 'chsign' does not work with arrays.
ERROR(21): Cannot index nonarray 'a'.                                                                                   ERROR(21): Cannot index nonarray 'a'.
ERROR(22): Array index is the unindexed array 'aa'.                                                                     ERROR(22): Array index is the unindexed array 'aa'.
ERROR(22): Cannot index nonarray 'a'.                                                                                   ERROR(22): Cannot index nonarray 'a'.
ERROR(24): Array index is the unindexed array 'aa'.                                                                     ERROR(24): Array index is the unindexed array 'aa'.
ERROR(26): The operation 'sizeof' only works with arrays.                                                               ERROR(26): The operation 'sizeof' only works with arrays.
ERROR(29): The operation '?' does not work with arrays.                                                                 ERROR(29): The operation '?' does not work with arrays.
ERROR(31): The operation 'not' does not work with arrays.                                                               ERROR(31): The operation 'not' does not work with arrays.
ERROR(33): The operation '++' does not work with arrays.                                                                ERROR(33): The operation '++' does not work with arrays.
ERROR(36): The operation '+' does not work with arrays.                                                                 ERROR(36): The operation '+' does not work with arrays.
ERROR(37): The operation '+' does not work with arrays.                                                                 ERROR(37): The operation '+' does not work with arrays.
ERROR(38): The operation '+' does not work with arrays.                                                                 ERROR(38): The operation '+' does not work with arrays.
ERROR(41): The operation 'and' does not work with arrays.                                                               ERROR(41): The operation 'and' does not work with arrays.
ERROR(42): The operation 'and' does not work with arrays.                                                               ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): The operation 'and' does not work with arrays.                                                               ERROR(43): The operation 'and' does not work with arrays.
ERROR(45): Cannot index nonarray 'c'.                                                                                   ERROR(45): Cannot index nonarray 'c'.
WARNING(45): Variable 'c' may be uninitialized when used here.                                                          WARNING(45): Variable 'c' may be uninitialized when used here.
WARNING(46): Variable 'cc' may be uninitialized when used here.                                                         WARNING(46): Variable 'cc' may be uninitialized when used here.
ERROR(47): Cannot index nonarray 'c'.                                                                                   ERROR(47): Cannot index nonarray 'c'.
ERROR(47): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(47): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(48): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(48): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(51): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(51): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(56): '=' requires operands of the same type but lhs is type int and rhs is type char.                             ERROR(56): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(57): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.                     ERROR(57): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(58): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                     ERROR(58): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(63): '!<' requires operands of the same type but lhs is type int and rhs is type char.                            ERROR(63): '!<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(64): '!<' requires both operands be arrays or not but lhs is not an array and rhs is an array.                    ERROR(64): '!<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(65): '!<' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(65): '!<' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(70): '<' requires operands of the same type but lhs is type int and rhs is type char.                             ERROR(70): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(71): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.                     ERROR(71): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(72): '<' requires both operands be arrays or not but lhs is an array and rhs is not an array.                     ERROR(72): '<' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(75): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.                     ERROR(75): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(75): '<' requires operands of the same type but lhs is type char and rhs is type int.                             ERROR(75): '<' requires operands of the same type but lhs is type char and rhs is type int.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 34                                                                                                    Number of errors: 34

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P arrayx.c-                                                                                                       ./c- -P arrayx.c-
WARNING(2): The variable 'e' seems not to be used.                                                                      WARNING(2): The variable 'e' seems not to be used.
ERROR(10): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(10): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(11): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(11): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(12): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.                    ERROR(12): '<=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
WARNING(19): Variable 'd' may be uninitialized when used here.                                                          WARNING(19): Variable 'd' may be uninitialized when used here.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 3                                                                                                     Number of errors: 3

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P assignb.c-                                                                                                      ./c- -P assignb.c-
WARNING(5): The variable 'c' seems not to be used.                                                                      WARNING(5): The variable 'c' seems not to be used.
ERROR(7): Symbol 'x' is not declared.                                                                                   ERROR(7): Symbol 'x' is not declared.
ERROR(7): Symbol 'x' is not declared.                                                                                   ERROR(7): Symbol 'x' is not declared.
ERROR(8): Symbol 'x' is not declared.                                                                                   ERROR(8): Symbol 'x' is not declared.
WARNING(9): Variable 'aa' may be uninitialized when used here.                                                          WARNING(9): Variable 'aa' may be uninitialized when used here.
WARNING(10): Variable 'b' may be uninitialized when used here.                                                          WARNING(10): Variable 'b' may be uninitialized when used here.
WARNING(12): Variable 'cc' may be uninitialized when used here.                                                         WARNING(12): Variable 'cc' may be uninitialized when used here.
Number of warnings: 4                                                                                                   Number of warnings: 4
Number of errors: 3                                                                                                     Number of errors: 3

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P assignBool.c-                                                                                                   ./c- -P assignBool.c-
ERROR(10): Symbol 'outputb' is not declared.                                                                            ERROR(10): Symbol 'outputb' is not declared.
ERROR(12): Symbol 'outputb' is not declared.                                                                            ERROR(12): Symbol 'outputb' is not declared.
ERROR(14): Symbol 'outputb' is not declared.                                                                            ERROR(14): Symbol 'outputb' is not declared.
ERROR(16): Symbol 'outputb' is not declared.                                                                            ERROR(16): Symbol 'outputb' is not declared.
ERROR(17): Symbol 'outnl' is not declared.                                                                              ERROR(17): Symbol 'outnl' is not declared.
ERROR(20): Symbol 'outputb' is not declared.                                                                            ERROR(20): Symbol 'outputb' is not declared.
ERROR(22): Symbol 'outputb' is not declared.                                                                            ERROR(22): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outputb' is not declared.                                                                            ERROR(24): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.                                                                            ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outnl' is not declared.                                                                              ERROR(27): Symbol 'outnl' is not declared.
WARNING(34): Variable 'zx' may be uninitialized when used here.                                                         WARNING(34): Variable 'zx' may be uninitialized when used here.
WARNING(34): Variable 'zy' may be uninitialized when used here.                                                         WARNING(34): Variable 'zy' may be uninitialized when used here.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 10                                                                                                    Number of errors: 10

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P assignChar.c-                                                                                                   ./c- -P assignChar.c-
ERROR(10): Symbol 'outputc' is not declared.                                                                            ERROR(10): Symbol 'outputc' is not declared.
ERROR(12): Symbol 'outputc' is not declared.                                                                            ERROR(12): Symbol 'outputc' is not declared.
ERROR(14): Symbol 'outputc' is not declared.                                                                            ERROR(14): Symbol 'outputc' is not declared.
ERROR(16): Symbol 'outputc' is not declared.                                                                            ERROR(16): Symbol 'outputc' is not declared.
ERROR(17): Symbol 'outnl' is not declared.                                                                              ERROR(17): Symbol 'outnl' is not declared.
ERROR(19): Symbol 'outputc' is not declared.                                                                            ERROR(19): Symbol 'outputc' is not declared.
ERROR(21): Symbol 'outputc' is not declared.                                                                            ERROR(21): Symbol 'outputc' is not declared.
ERROR(23): Symbol 'outputc' is not declared.                                                                            ERROR(23): Symbol 'outputc' is not declared.
ERROR(25): Symbol 'outputc' is not declared.                                                                            ERROR(25): Symbol 'outputc' is not declared.
ERROR(26): Symbol 'outnl' is not declared.                                                                              ERROR(26): Symbol 'outnl' is not declared.
WARNING(33): Variable 'zx' may be uninitialized when used here.                                                         WARNING(33): Variable 'zx' may be uninitialized when used here.
WARNING(33): Variable 'zy' may be uninitialized when used here.                                                         WARNING(33): Variable 'zy' may be uninitialized when used here.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 10                                                                                                    Number of errors: 10

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P assignInt.c-                                                                                                    ./c- -P assignInt.c-
ERROR(10): Symbol 'output' is not declared.                                                                             ERROR(10): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
ERROR(14): Symbol 'output' is not declared.                                                                             ERROR(14): Symbol 'output' is not declared.
ERROR(16): Symbol 'output' is not declared.                                                                             ERROR(16): Symbol 'output' is not declared.
ERROR(17): Symbol 'outnl' is not declared.                                                                              ERROR(17): Symbol 'outnl' is not declared.
ERROR(19): Symbol 'output' is not declared.                                                                             ERROR(19): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.                                                                             ERROR(21): Symbol 'output' is not declared.
ERROR(23): Symbol 'output' is not declared.                                                                             ERROR(23): Symbol 'output' is not declared.
ERROR(25): Symbol 'output' is not declared.                                                                             ERROR(25): Symbol 'output' is not declared.
ERROR(26): Symbol 'outnl' is not declared.                                                                              ERROR(26): Symbol 'outnl' is not declared.
WARNING(33): Variable 'zx' may be uninitialized when used here.                                                         WARNING(33): Variable 'zx' may be uninitialized when used here.
WARNING(33): Variable 'zy' may be uninitialized when used here.                                                         WARNING(33): Variable 'zy' may be uninitialized when used here.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 10                                                                                                    Number of errors: 10

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P break2.c-                                                                                                       ./c- -P break2.c-
ERROR(10): Symbol 'output' is not declared.                                                                             ERROR(10): Symbol 'output' is not declared.
ERROR(12): Symbol 'outnl' is not declared.                                                                              ERROR(12): Symbol 'outnl' is not declared.
ERROR(16): Symbol 'output' is not declared.                                                                             ERROR(16): Symbol 'output' is not declared.
ERROR(17): Symbol 'outnl' is not declared.                                                                              ERROR(17): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 4                                                                                                     Number of errors: 4

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P break3.c-                                                                                                       ./c- -P break3.c-
WARNING(4): The variable 'x' seems not to be used.                                                                      WARNING(4): The variable 'x' seems not to be used.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Child: 1 While [line: 5]                                                                                            . . Child: 1 While [line: 5]
. . . Child: 0 Const true of type bool [line: 5]                                                                        . . . Child: 0 Const true of type bool [line: 5]
. . . Child: 1 For [line: 5]                                                                                            . . . Child: 1 For [line: 5]
. . . . Child: 0 Var: x of type int [line: 5]                                                                           . . . . Child: 0 Var: x of type int [line: 5]
. . . . Child: 1 Range [line: 5]                                                                                        . . . . Child: 1 Range [line: 5]
. . . . . Child: 0 Const 1 of type int [line: 5]                                                                        . . . . . Child: 0 Const 1 of type int [line: 5]
. . . . . Child: 1 Id: x of undefined type [line: 5]                                                                    . . . . . Child: 1 Id: x of undefined type [line: 5]
. . . . Child: 2 If [line: 5]                                                                                           . . . . Child: 2 If [line: 5]
. . . . . Child: 0 Op: > of type bool [line: 5]                                                                         . . . . . Child: 0 Op: > of type bool [line: 5]
. . . . . . Child: 0 Id: x of type int [line: 5]                                                                        . . . . . . Child: 0 Id: x of type int [line: 5]
. . . . . . Child: 1 Const 1 of type int [line: 5]                                                                      . . . . . . Child: 1 Const 1 of type int [line: 5]
. . . . . Child: 1 Break [line: 5]                                                                                      . . . . . Child: 1 Break [line: 5]
. . . . . Child: 2 Break [line: 5]                                                                                      . . . . . Child: 2 Break [line: 5]
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P break4.c-                                                                                                       ./c- -P break4.c-
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 1 While [line: 4]                                                                                            . . Child: 1 While [line: 4]
. . . Child: 0 Const true of type bool [line: 4]                                                                        . . . Child: 0 Const true of type bool [line: 4]
. . . Child: 1 Compound [line: 4]                                                                                       . . . Child: 1 Compound [line: 4]
. . . . Child: 1 While [line: 5]                                                                                        . . . . Child: 1 While [line: 5]
. . . . . Child: 0 Const true of type bool [line: 5]                                                                    . . . . . Child: 0 Const true of type bool [line: 5]
. . . . . Child: 1 Compound [line: 5]                                                                                   . . . . . Child: 1 Compound [line: 5]
. . . . . . Child: 1 Break [line: 6]                                                                                    . . . . . . Child: 1 Break [line: 6]
. . . . Sibling: 1 Break [line: 8]                                                                                      . . . . Sibling: 1 Break [line: 8]
. . Sibling: 1 Break [line: 10]                                                                                         . . Sibling: 1 Break [line: 10]
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P break.c-                                                                                                        ./c- -P break.c-
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 1 While [line: 4]                                                                                            . . Child: 1 While [line: 4]
. . . Child: 0 Const true of type bool [line: 4]                                                                        . . . Child: 0 Const true of type bool [line: 4]
. . . Child: 1 Compound [line: 4]                                                                                       . . . Child: 1 Compound [line: 4]
. . . . Child: 1 Const 666 of type int [line: 5]                                                                        . . . . Child: 1 Const 666 of type int [line: 5]
. . . . Sibling: 1 Break [line: 6]                                                                                      . . . . Sibling: 1 Break [line: 6]
. . . . Sibling: 2 Const 777 of type int [line: 7]                                                                      . . . . Sibling: 2 Const 777 of type int [line: 7]
. . . . Sibling: 3 Break [line: 8]                                                                                      . . . . Sibling: 3 Break [line: 8]
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P call2.c-                                                                                                        ./c- -P call2.c-
ERROR(3): Symbol 'output' is not declared.                                                                              ERROR(3): Symbol 'output' is not declared.
ERROR(5): Symbol 'outnl' is not declared.                                                                               ERROR(5): Symbol 'outnl' is not declared.
ERROR(10): Symbol 'output' is not declared.                                                                             ERROR(10): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
ERROR(17): Symbol 'output' is not declared.                                                                             ERROR(17): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.                                                                             ERROR(19): Symbol 'output' is not declared.
ERROR(29): Symbol 'output' is not declared.                                                                             ERROR(29): Symbol 'output' is not declared.
ERROR(30): Symbol 'outnl' is not declared.                                                                              ERROR(30): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 8                                                                                                     Number of errors: 8

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P call3.c-                                                                                                        ./c- -P call3.c-
ERROR(3): Symbol 'output' is not declared.                                                                              ERROR(3): Symbol 'output' is not declared.
ERROR(5): Symbol 'outnl' is not declared.                                                                               ERROR(5): Symbol 'outnl' is not declared.
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
ERROR(14): Symbol 'output' is not declared.                                                                             ERROR(14): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.                                                                             ERROR(21): Symbol 'output' is not declared.
ERROR(23): Symbol 'output' is not declared.                                                                             ERROR(23): Symbol 'output' is not declared.
ERROR(34): Symbol 'output' is not declared.                                                                             ERROR(34): Symbol 'output' is not declared.
ERROR(35): Symbol 'output' is not declared.                                                                             ERROR(35): Symbol 'output' is not declared.
ERROR(36): Symbol 'outnl' is not declared.                                                                              ERROR(36): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 9                                                                                                     Number of errors: 9

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P call.c-                                                                                                         ./c- -P call.c-
ERROR(4): Symbol 'output' is not declared.                                                                              ERROR(4): Symbol 'output' is not declared.
ERROR(5): Symbol 'outputb' is not declared.                                                                             ERROR(5): Symbol 'outputb' is not declared.
ERROR(6): Symbol 'outputc' is not declared.                                                                             ERROR(6): Symbol 'outputc' is not declared.
ERROR(7): Symbol 'outnl' is not declared.                                                                               ERROR(7): Symbol 'outnl' is not declared.
ERROR(13): Symbol 'output' is not declared.                                                                             ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outputb' is not declared.                                                                            ERROR(14): Symbol 'outputb' is not declared.
ERROR(15): Symbol 'outputc' is not declared.                                                                            ERROR(15): Symbol 'outputc' is not declared.
ERROR(16): Symbol 'outnl' is not declared.                                                                              ERROR(16): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 8                                                                                                     Number of errors: 8

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P callerr.c-                                                                                                      ./c- -P callerr.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
ERROR(16): Symbol 'lyra' is not declared.                                                                               ERROR(16): Symbol 'lyra' is not declared.
ERROR(22): Symbol 'lyra' is not declared.                                                                               ERROR(22): Symbol 'lyra' is not declared.
ERROR(23): Symbol 'lyra' is not declared.                                                                               ERROR(23): Symbol 'lyra' is not declared.
ERROR(27): '<=' requires operands of the same type but lhs is type int and rhs is type void.                            ERROR(27): '<=' requires operands of the same type but lhs is type int and rhs is type void.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P constants.c-                                                                                                    ./c- -P constants.c-
ERROR(4): Symbol 'output' is not declared.                                                                              ERROR(4): Symbol 'output' is not declared.
ERROR(5): Symbol 'outputb' is not declared.                                                                             ERROR(5): Symbol 'outputb' is not declared.
ERROR(6): Symbol 'outputb' is not declared.                                                                             ERROR(6): Symbol 'outputb' is not declared.
ERROR(7): Symbol 'outputc' is not declared.                                                                             ERROR(7): Symbol 'outputc' is not declared.
ERROR(8): Symbol 'outnl' is not declared.                                                                               ERROR(8): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P cover.c-                                                                                                        ./c- -P cover.c-
ERROR(19): Unary '--' requires an operand of type int but was given type char.                                          ERROR(19): Unary '--' requires an operand of type int but was given type char.
ERROR(20): Unary '?' requires an operand of type int but was given type char.                                           ERROR(20): Unary '?' requires an operand of type int but was given type char.
ERROR(22): Cannot index nonarray 'e'.                                                                                   ERROR(22): Cannot index nonarray 'e'.
ERROR(22): Cannot index nonarray 'e'.                                                                                   ERROR(22): Cannot index nonarray 'e'.
ERROR(22): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(22): '+' requires operands of type int but lhs is of type bool.
ERROR(22): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(22): '+' requires operands of type int but rhs is of type bool.
ERROR(23): Array 'e' should be indexed by type int but got type bool.                                                   ERROR(23): Array 'e' should be indexed by type int but got type bool.
ERROR(23): Cannot index nonarray 'e'.                                                                                   ERROR(23): Cannot index nonarray 'e'.
ERROR(23): Cannot index nonarray 'e'.                                                                                   ERROR(23): Cannot index nonarray 'e'.
ERROR(26): 'and' requires operands of type bool but lhs is of type int.                                                 ERROR(26): 'and' requires operands of type bool but lhs is of type int.
ERROR(26): 'and' requires operands of type bool but rhs is of type int.                                                 ERROR(26): 'and' requires operands of type bool but rhs is of type int.
WARNING(31): The variable 'i' seems not to be used.                                                                     WARNING(31): The variable 'i' seems not to be used.
WARNING(31): The variable 'x' seems not to be used.                                                                     WARNING(31): The variable 'x' seems not to be used.
WARNING(35): The variable 'a' seems not to be used.                                                                     WARNING(35): The variable 'a' seems not to be used.
WARNING(36): The variable 'c' seems not to be used.                                                                     WARNING(36): The variable 'c' seems not to be used.
WARNING(38): The variable 'g' seems not to be used.                                                                     WARNING(38): The variable 'g' seems not to be used.
WARNING(39): Variable 'b' may be uninitialized when used here.                                                          WARNING(39): Variable 'b' may be uninitialized when used here.
WARNING(39): Variable 'd' may be uninitialized when used here.                                                          WARNING(39): Variable 'd' may be uninitialized when used here.
WARNING(39): Variable 'e' may be uninitialized when used here.                                                          WARNING(39): Variable 'e' may be uninitialized when used here.
WARNING(39): Variable 'f' may be uninitialized when used here.                                                          WARNING(39): Variable 'f' may be uninitialized when used here.
Number of warnings: 9                                                                                                   Number of warnings: 9
Number of errors: 11                                                                                                    Number of errors: 11

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P decl.c-                                                                                                         ./c- -P decl.c-
WARNING(4): The variable 'a' seems not to be used.                                                                      WARNING(4): The variable 'a' seems not to be used.
WARNING(5): The variable 'b' seems not to be used.                                                                      WARNING(5): The variable 'b' seems not to be used.
WARNING(6): The variable 'c' seems not to be used.                                                                      WARNING(6): The variable 'c' seems not to be used.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: a of type int [line: 4]                                                                               . . Child: 0 Var: a of type int [line: 4]
. . Sibling: 1 Var: b of type bool [line: 5]                                                                            . . Sibling: 1 Var: b of type bool [line: 5]
. . Sibling: 2 Var: c of type char [line: 6]                                                                            . . Sibling: 2 Var: c of type char [line: 6]
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P emptyline.c-                                                                                                    ./c- -P emptyline.c-
WARNING(6): The variable 'x' seems not to be used.                                                                      WARNING(6): The variable 'x' seems not to be used.
WARNING(12): The variable 'x' seems not to be used.                                                                     WARNING(12): The variable 'x' seems not to be used.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 2]                                                                                           . Child: 1 Compound [line: 2]
Sibling: 1 Func: dogs returns type void [line: 4]                                                                       Sibling: 1 Func: dogs returns type void [line: 4]
. Child: 1 Compound [line: 5]                                                                                           . Child: 1 Compound [line: 5]
. . Child: 0 Var: x of type int [line: 6]                                                                               . . Child: 0 Var: x of type int [line: 6]
. . Child: 1 If [line: 9]                                                                                               . . Child: 1 If [line: 9]
. . . Child: 0 Const true of type bool [line: 9]                                                                        . . . Child: 0 Const true of type bool [line: 9]
. . Sibling: 1 While [line: 11]                                                                                         . . Sibling: 1 While [line: 11]
. . . Child: 0 Const true of type bool [line: 11]                                                                       . . . Child: 0 Const true of type bool [line: 11]
. . Sibling: 2 For [line: 12]                                                                                           . . Sibling: 2 For [line: 12]
. . . Child: 0 Var: x of type int [line: 12]                                                                            . . . Child: 0 Var: x of type int [line: 12]
. . . Child: 1 Range [line: 12]                                                                                         . . . Child: 1 Range [line: 12]
. . . . Child: 0 Const 1 of type int [line: 12]                                                                         . . . . Child: 0 Const 1 of type int [line: 12]
. . . . Child: 1 Const 10 of type int [line: 12]                                                                        . . . . Child: 1 Const 10 of type int [line: 12]
. . Sibling: 3 Compound [line: 13]                                                                                      . . Sibling: 3 Compound [line: 13]
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P everythingS23.c-                                                                                                ./c- -P everythingS23.c-
WARNING(46): Variable 'trousers' may be uninitialized when used here.                                                   WARNING(46): Variable 'trousers' may be uninitialized when used here.
WARNING(54): The variable 'cheese' seems not to be used.                                                                WARNING(54): The variable 'cheese' seems not to be used.
WARNING(54): The variable 'launch' seems not to be used.                                                                WARNING(54): The variable 'launch' seems not to be used.
WARNING(58): The variable 'c' seems not to be used.                                                                     WARNING(58): The variable 'c' seems not to be used.
WARNING(59): The variable 'i' seems not to be used.                                                                     WARNING(59): The variable 'i' seems not to be used.
WARNING(62): Variable 'Wensleydale' may be uninitialized when used here.                                                WARNING(62): Variable 'Wensleydale' may be uninitialized when used here.
WARNING(70): The variable 'skein' seems not to be used.                                                                 WARNING(70): The variable 'skein' seems not to be used.
WARNING(82): Variable 'chicken' may be uninitialized when used here.                                                    WARNING(82): Variable 'chicken' may be uninitialized when used here.
WARNING(82): Variable 'run' may be uninitialized when used here.                                                        WARNING(82): Variable 'run' may be uninitialized when used here.
WARNING(85): Variable 'gromit' may be uninitialized when used here.                                                     WARNING(85): Variable 'gromit' may be uninitialized when used here.
WARNING(85): Variable 'wallace' may be uninitialized when used here.                                                    WARNING(85): Variable 'wallace' may be uninitialized when used here.
WARNING(90): The variable 'y' seems not to be used.                                                                     WARNING(90): The variable 'y' seems not to be used.
WARNING(98): The variable 'pastry' seems not to be used.                                                                WARNING(98): The variable 'pastry' seems not to be used.
WARNING(116): The variable 'wool' seems not to be used.                                                                 WARNING(116): The variable 'wool' seems not to be used.
WARNING(125): Variable 'yarn' may be uninitialized when used here.                                                      WARNING(125): Variable 'yarn' may be uninitialized when used here.
WARNING(127): Variable 'preston' may be uninitialized when used here.                                                   WARNING(127): Variable 'preston' may be uninitialized when used here.
WARNING(127): Variable 'shaun' may be uninitialized when used here.                                                     WARNING(127): Variable 'shaun' may be uninitialized when used here.
Var: gromit of type int [line: 6]                                                                                       Var: gromit of type int [line: 6]
Sibling: 1 Var: mysteriousPenguin of type int [line: 6]                                                                 Sibling: 1 Var: mysteriousPenguin of type int [line: 6]
Sibling: 2 Func: wallace returns type void [line: 9]                                                                    Sibling: 2 Func: wallace returns type void [line: 9]
. Child: 0 Parm: wrong of type int [line: 9]                                                                            . Child: 0 Parm: wrong of type int [line: 9]
. Sibling: 1 Parm: trousers of type int [line: 9]                                                                       . Sibling: 1 Parm: trousers of type int [line: 9]
. Child: 1 Compound [line: 10]                                                                                          . Child: 1 Compound [line: 10]
. . Child: 0 Var: close of type bool [line: 11]                                                                         . . Child: 0 Var: close of type bool [line: 11]
. . . Child: 0 Const true of type bool [line: 11]                                                                       . . . Child: 0 Const true of type bool [line: 11]
. . Sibling: 1 Var: shave of type bool [line: 11]                                                                       . . Sibling: 1 Var: shave of type bool [line: 11]
. . . Child: 0 Const false of type bool [line: 11]                                                                      . . . Child: 0 Const false of type bool [line: 11]
. . Sibling: 2 Var: cheese of type int [line: 12]                                                                       . . Sibling: 2 Var: cheese of type int [line: 12]
. . . Child: 0 Const 17 of type int [line: 12]                                                                          . . . Child: 0 Const 17 of type int [line: 12]
. . Child: 1 Const 1729 of type int [line: 14]                                                                          . . Child: 1 Const 1729 of type int [line: 14]
. . Sibling: 1 Id: close of type bool [line: 15]                                                                        . . Sibling: 1 Id: close of type bool [line: 15]
. . Sibling: 2 Op: + of type int [line: 16]                                                                             . . Sibling: 2 Op: + of type int [line: 16]
. . . Child: 0 Op: * of type int [line: 16]                                                                             . . . Child: 0 Op: * of type int [line: 16]
. . . . Child: 0 Const 11 of type int [line: 16]                                                                        . . . . Child: 0 Const 11 of type int [line: 16]
. . . . Child: 1 Const 22 of type int [line: 16]                                                                        . . . . Child: 1 Const 22 of type int [line: 16]
. . . Child: 1 Op: * of type int [line: 16]                                                                             . . . Child: 1 Op: * of type int [line: 16]
. . . . Child: 0 Const 33 of type int [line: 16]                                                                        . . . . Child: 0 Const 33 of type int [line: 16]
. . . . Child: 1 Const 44 of type int [line: 16]                                                                        . . . . Child: 1 Const 44 of type int [line: 16]
. . Sibling: 3 Assign: <= of type bool [line: 17]                                                                       . . Sibling: 3 Assign: <= of type bool [line: 17]
. . . Child: 0 Id: close of type bool [line: 17]                                                                        . . . Child: 0 Id: close of type bool [line: 17]
. . . Child: 1 Id: shave of type bool [line: 17]                                                                        . . . Child: 1 Id: shave of type bool [line: 17]
. . Sibling: 4 Assign: <= of type int [line: 18]                                                                        . . Sibling: 4 Assign: <= of type int [line: 18]
. . . Child: 0 Id: wrong of type int [line: 18]                                                                         . . . Child: 0 Id: wrong of type int [line: 18]
. . . Child: 1 Op: % of type int [line: 18]                                                                             . . . Child: 1 Op: % of type int [line: 18]
. . . . Child: 0 Id: trousers of type int [line: 18]                                                                    . . . . Child: 0 Id: trousers of type int [line: 18]
. . . . Child: 1 Op: / of type int [line: 18]                                                                           . . . . Child: 1 Op: / of type int [line: 18]
. . . . . Child: 0 Const 666 of type int [line: 18]                                                                     . . . . . Child: 0 Const 666 of type int [line: 18]
. . . . . Child: 1 Id: wrong of type int [line: 18]                                                                     . . . . . Child: 1 Id: wrong of type int [line: 18]
. . Sibling: 5 Assign: <= of type int [line: 19]                                                                        . . Sibling: 5 Assign: <= of type int [line: 19]
. . . Child: 0 Id: gromit of type int [line: 19]                                                                        . . . Child: 0 Id: gromit of type int [line: 19]
. . . Child: 1 Op: + of type int [line: 19]                                                                             . . . Child: 1 Op: + of type int [line: 19]
. . . . Child: 0 Op: - of type int [line: 19]                                                                           . . . . Child: 0 Op: - of type int [line: 19]
. . . . . Child: 0 Op: * of type int [line: 19]                                                                         . . . . . Child: 0 Op: * of type int [line: 19]
. . . . . . Child: 0 Id: wrong of type int [line: 19]                                                                   . . . . . . Child: 0 Id: wrong of type int [line: 19]
. . . . . . Child: 1 Id: trousers of type int [line: 19]                                                                . . . . . . Child: 1 Id: trousers of type int [line: 19]
. . . . . Child: 1 Id: gromit of type int [line: 19]                                                                    . . . . . Child: 1 Id: gromit of type int [line: 19]
. . . . Child: 1 Op: chsign of type int [line: 19]                                                                      . . . . Child: 1 Op: chsign of type int [line: 19]
. . . . . Child: 0 Const 42 of type int [line: 19]                                                                      . . . . . Child: 0 Const 42 of type int [line: 19]
. . Sibling: 6 Assign: += of type int [line: 20]                                                                        . . Sibling: 6 Assign: += of type int [line: 20]
. . . Child: 0 Id: gromit of type int [line: 20]                                                                        . . . Child: 0 Id: gromit of type int [line: 20]
. . . Child: 1 Const 27182818 of type int [line: 20]                                                                    . . . Child: 1 Const 27182818 of type int [line: 20]
. . Sibling: 7 Assign: -= of type int [line: 21]                                                                        . . Sibling: 7 Assign: -= of type int [line: 21]
. . . Child: 0 Id: gromit of type int [line: 21]                                                                        . . . Child: 0 Id: gromit of type int [line: 21]
. . . Child: 1 Op: chsign of type int [line: 21]                                                                        . . . Child: 1 Op: chsign of type int [line: 21]
. . . . Child: 0 Const 31415927 of type int [line: 21]                                                                  . . . . Child: 0 Const 31415927 of type int [line: 21]
. . Sibling: 8 Assign: /= of type int [line: 22]                                                                        . . Sibling: 8 Assign: /= of type int [line: 22]
. . . Child: 0 Id: gromit of type int [line: 22]                                                                        . . . Child: 0 Id: gromit of type int [line: 22]
. . . Child: 1 Assign: *= of type int [line: 22]                                                                        . . . Child: 1 Assign: *= of type int [line: 22]
. . . . Child: 0 Id: wrong of type int [line: 22]                                                                       . . . . Child: 0 Id: wrong of type int [line: 22]
. . . . Child: 1 Const 42 of type int [line: 22]                                                                        . . . . Child: 1 Const 42 of type int [line: 22]
. . Sibling: 9 Assign: <= of type bool [line: 23]                                                                       . . Sibling: 9 Assign: <= of type bool [line: 23]
. . . Child: 0 Id: close of type bool [line: 23]                                                                        . . . Child: 0 Id: close of type bool [line: 23]
. . . Child: 1 Op: and of type bool [line: 23]                                                                          . . . Child: 1 Op: and of type bool [line: 23]
. . . . Child: 0 Op: < of type bool [line: 23]                                                                          . . . . Child: 0 Op: < of type bool [line: 23]
. . . . . Child: 0 Id: wrong of type int [line: 23]                                                                     . . . . . Child: 0 Id: wrong of type int [line: 23]
. . . . . Child: 1 Id: trousers of type int [line: 23]                                                                  . . . . . Child: 1 Id: trousers of type int [line: 23]
. . . . Child: 1 Op: !> of type bool [line: 23]                                                                         . . . . Child: 1 Op: !> of type bool [line: 23]
. . . . . Child: 0 Id: trousers of type int [line: 23]                                                                  . . . . . Child: 0 Id: trousers of type int [line: 23]
. . . . . Child: 1 Id: gromit of type int [line: 23]                                                                    . . . . . Child: 1 Id: gromit of type int [line: 23]
. . Sibling: 10 Assign: <= of type bool [line: 24]                                                                      . . Sibling: 10 Assign: <= of type bool [line: 24]
. . . Child: 0 Id: shave of type bool [line: 24]                                                                        . . . Child: 0 Id: shave of type bool [line: 24]
. . . Child: 1 Op: and of type bool [line: 24]                                                                          . . . Child: 1 Op: and of type bool [line: 24]
. . . . Child: 0 Op: > of type bool [line: 24]                                                                          . . . . Child: 0 Op: > of type bool [line: 24]
. . . . . Child: 0 Id: wrong of type int [line: 24]                                                                     . . . . . Child: 0 Id: wrong of type int [line: 24]
. . . . . Child: 1 Id: trousers of type int [line: 24]                                                                  . . . . . Child: 1 Id: trousers of type int [line: 24]
. . . . Child: 1 Op: !< of type bool [line: 24]                                                                         . . . . Child: 1 Op: !< of type bool [line: 24]
. . . . . Child: 0 Id: trousers of type int [line: 24]                                                                  . . . . . Child: 0 Id: trousers of type int [line: 24]
. . . . . Child: 1 Id: gromit of type int [line: 24]                                                                    . . . . . Child: 1 Id: gromit of type int [line: 24]
. . Sibling: 11 Compound [line: 25]                                                                                     . . Sibling: 11 Compound [line: 25]
. . . Child: 0 Var: a of type int [line: 26]                                                                            . . . Child: 0 Var: a of type int [line: 26]
. . . Sibling: 1 Var: grand of type int [line: 26]                                                                      . . . Sibling: 1 Var: grand of type int [line: 26]
. . . . Child: 0 Op: / of type int [line: 26]                                                                           . . . . Child: 0 Op: / of type int [line: 26]
. . . . . Child: 0 Const 1 of type int [line: 26]                                                                       . . . . . Child: 0 Const 1 of type int [line: 26]
. . . . . Child: 1 Const 2 of type int [line: 26]                                                                       . . . . . Child: 1 Const 2 of type int [line: 26]
. . . Sibling: 2 Var: day of type int [line: 26]                                                                        . . . Sibling: 2 Var: day of type int [line: 26]
. . . . Child: 0 Op: * of type int [line: 26]                                                                           . . . . Child: 0 Op: * of type int [line: 26]
. . . . . Child: 0 Const 3 of type int [line: 26]                                                                       . . . . . Child: 0 Const 3 of type int [line: 26]
. . . . . Child: 1 Const 4 of type int [line: 26]                                                                       . . . . . Child: 1 Const 4 of type int [line: 26]
. . . Sibling: 3 Var: out of type int [line: 26]                                                                        . . . Sibling: 3 Var: out of type int [line: 26]
. . . . Child: 0 Op: chsign of type int [line: 26]                                                                      . . . . Child: 0 Op: chsign of type int [line: 26]
. . . . . Child: 0 Const 9 of type int [line: 26]                                                                       . . . . . Child: 0 Const 9 of type int [line: 26]
. . . Child: 1 Assign: <= of type int [line: 27]                                                                        . . . Child: 1 Assign: <= of type int [line: 27]
. . . . Child: 0 Id: a of type int [line: 27]                                                                           . . . . Child: 0 Id: a of type int [line: 27]
. . . . Child: 1 Assign: += of type int [line: 27]                                                                      . . . . Child: 1 Assign: += of type int [line: 27]
. . . . . Child: 0 Id: grand of type int [line: 27]                                                                     . . . . . Child: 0 Id: grand of type int [line: 27]
. . . . . Child: 1 Assign: -= of type int [line: 27]                                                                    . . . . . Child: 1 Assign: -= of type int [line: 27]
. . . . . . Child: 0 Id: day of type int [line: 27]                                                                     . . . . . . Child: 0 Id: day of type int [line: 27]
. . . . . . Child: 1 Id: out of type int [line: 27]                                                                     . . . . . . Child: 1 Id: out of type int [line: 27]
. . Sibling: 12 Assign: <= of type bool [line: 29]                                                                      . . Sibling: 12 Assign: <= of type bool [line: 29]
. . . Child: 0 Id: close of type bool [line: 29]                                                                        . . . Child: 0 Id: close of type bool [line: 29]
. . . Child: 1 Op: and of type bool [line: 29]                                                                          . . . Child: 1 Op: and of type bool [line: 29]
. . . . Child: 0 Op: < of type bool [line: 29]                                                                          . . . . Child: 0 Op: < of type bool [line: 29]
. . . . . Child: 0 Op: + of type int [line: 29]                                                                         . . . . . Child: 0 Op: + of type int [line: 29]
. . . . . . Child: 0 Op: * of type int [line: 29]                                                                       . . . . . . Child: 0 Op: * of type int [line: 29]
. . . . . . . Child: 0 Op: chsign of type int [line: 29]                                                                . . . . . . . Child: 0 Op: chsign of type int [line: 29]
. . . . . . . . Child: 0 Const 1 of type int [line: 29]                                                                 . . . . . . . . Child: 0 Const 1 of type int [line: 29]
. . . . . . . Child: 1 Const 2 of type int [line: 29]                                                                   . . . . . . . Child: 1 Const 2 of type int [line: 29]
. . . . . . Child: 1 Const 3 of type int [line: 29]                                                                     . . . . . . Child: 1 Const 3 of type int [line: 29]
. . . . . Child: 1 Op: * of type int [line: 29]                                                                         . . . . . Child: 1 Op: * of type int [line: 29]
. . . . . . Child: 0 Const 4 of type int [line: 29]                                                                     . . . . . . Child: 0 Const 4 of type int [line: 29]
. . . . . . Child: 1 Const 5 of type int [line: 29]                                                                     . . . . . . Child: 1 Const 5 of type int [line: 29]
. . . . Child: 1 Op: > of type bool [line: 29]                                                                          . . . . Child: 1 Op: > of type bool [line: 29]
. . . . . Child: 0 Op: + of type int [line: 29]                                                                         . . . . . Child: 0 Op: + of type int [line: 29]
. . . . . . Child: 0 Const 6 of type int [line: 29]                                                                     . . . . . . Child: 0 Const 6 of type int [line: 29]
. . . . . . Child: 1 Const 7 of type int [line: 29]                                                                     . . . . . . Child: 1 Const 7 of type int [line: 29]
. . . . . Child: 1 Op: chsign of type int [line: 29]                                                                    . . . . . Child: 1 Op: chsign of type int [line: 29]
. . . . . . Child: 0 Const 3 of type int [line: 29]                                                                     . . . . . . Child: 0 Const 3 of type int [line: 29]
. . Sibling: 13 Assign: <= of type bool [line: 30]                                                                      . . Sibling: 13 Assign: <= of type bool [line: 30]
. . . Child: 0 Id: shave of type bool [line: 30]                                                                        . . . Child: 0 Id: shave of type bool [line: 30]
. . . Child: 1 Op: or of type bool [line: 30]                                                                           . . . Child: 1 Op: or of type bool [line: 30]
. . . . Child: 0 Const true of type bool [line: 30]                                                                     . . . . Child: 0 Const true of type bool [line: 30]
. . . . Child: 1 Op: and of type bool [line: 30]                                                                        . . . . Child: 1 Op: and of type bool [line: 30]
. . . . . Child: 0 Op: < of type bool [line: 30]                                                                        . . . . . Child: 0 Op: < of type bool [line: 30]
. . . . . . Child: 0 Op: chsign of type int [line: 30]                                                                  . . . . . . Child: 0 Op: chsign of type int [line: 30]
. . . . . . . Child: 0 Op: * of type int [line: 30]                                                                     . . . . . . . Child: 0 Op: * of type int [line: 30]
. . . . . . . . Child: 0 Const 1 of type int [line: 30]                                                                 . . . . . . . . Child: 0 Const 1 of type int [line: 30]
. . . . . . . . Child: 1 Op: + of type int [line: 30]                                                                   . . . . . . . . Child: 1 Op: + of type int [line: 30]
. . . . . . . . . Child: 0 Const 2 of type int [line: 30]                                                               . . . . . . . . . Child: 0 Const 2 of type int [line: 30]
. . . . . . . . . Child: 1 Const 3 of type int [line: 30]                                                               . . . . . . . . . Child: 1 Const 3 of type int [line: 30]
. . . . . . Child: 1 Op: * of type int [line: 30]                                                                       . . . . . . Child: 1 Op: * of type int [line: 30]
. . . . . . . Child: 0 Const 4 of type int [line: 30]                                                                   . . . . . . . Child: 0 Const 4 of type int [line: 30]
. . . . . . . Child: 1 Const 5 of type int [line: 30]                                                                   . . . . . . . Child: 1 Const 5 of type int [line: 30]
. . . . . Child: 1 Op: > of type bool [line: 30]                                                                        . . . . . Child: 1 Op: > of type bool [line: 30]
. . . . . . Child: 0 Op: + of type int [line: 30]                                                                       . . . . . . Child: 0 Op: + of type int [line: 30]
. . . . . . . Child: 0 Const 6 of type int [line: 30]                                                                   . . . . . . . Child: 0 Const 6 of type int [line: 30]
. . . . . . . Child: 1 Const 7 of type int [line: 30]                                                                   . . . . . . . Child: 1 Const 7 of type int [line: 30]
. . . . . . Child: 1 Op: chsign of type int [line: 30]                                                                  . . . . . . Child: 1 Op: chsign of type int [line: 30]
. . . . . . . Child: 0 Const 3 of type int [line: 30]                                                                   . . . . . . . Child: 0 Const 3 of type int [line: 30]
. . Sibling: 14 If [line: 31]                                                                                           . . Sibling: 14 If [line: 31]
. . . Child: 0 Op: != of type bool [line: 31]                                                                           . . . Child: 0 Op: != of type bool [line: 31]
. . . . Child: 0 Id: shave of type bool [line: 31]                                                                      . . . . Child: 0 Id: shave of type bool [line: 31]
. . . . Child: 1 Id: close of type bool [line: 31]                                                                      . . . . Child: 1 Id: close of type bool [line: 31]
. . . Child: 1 Assign: <= of type bool [line: 31]                                                                       . . . Child: 1 Assign: <= of type bool [line: 31]
. . . . Child: 0 Id: shave of type bool [line: 31]                                                                      . . . . Child: 0 Id: shave of type bool [line: 31]
. . . . Child: 1 Op: not of type bool [line: 31]                                                                        . . . . Child: 1 Op: not of type bool [line: 31]
. . . . . Child: 0 Id: close of type bool [line: 31]                                                                    . . . . . Child: 0 Id: close of type bool [line: 31]
. . Sibling: 15 If [line: 32]                                                                                           . . Sibling: 15 If [line: 32]
. . . Child: 0 Op: not of type bool [line: 32]                                                                          . . . Child: 0 Op: not of type bool [line: 32]
. . . . Child: 0 Op: or of type bool [line: 32]                                                                         . . . . Child: 0 Op: or of type bool [line: 32]
. . . . . Child: 0 Op: = of type bool [line: 32]                                                                        . . . . . Child: 0 Op: = of type bool [line: 32]
. . . . . . Child: 0 Id: shave of type bool [line: 32]                                                                  . . . . . . Child: 0 Id: shave of type bool [line: 32]
. . . . . . Child: 1 Id: close of type bool [line: 32]                                                                  . . . . . . Child: 1 Id: close of type bool [line: 32]
. . . . . Child: 1 Op: not of type bool [line: 32]                                                                      . . . . . Child: 1 Op: not of type bool [line: 32]
. . . . . . Child: 0 Id: close of type bool [line: 32]                                                                  . . . . . . Child: 0 Id: close of type bool [line: 32]
. . . Child: 1 Assign: <= of type bool [line: 32]                                                                       . . . Child: 1 Assign: <= of type bool [line: 32]
. . . . Child: 0 Id: shave of type bool [line: 32]                                                                      . . . . Child: 0 Id: shave of type bool [line: 32]
. . . . Child: 1 Const true of type bool [line: 32]                                                                     . . . . Child: 1 Const true of type bool [line: 32]
. . . Child: 2 Assign: <= of type bool [line: 33]                                                                       . . . Child: 2 Assign: <= of type bool [line: 33]
. . . . Child: 0 Id: close of type bool [line: 33]                                                                      . . . . Child: 0 Id: close of type bool [line: 33]
. . . . Child: 1 Const false of type bool [line: 33]                                                                    . . . . Child: 1 Const false of type bool [line: 33]
. . Sibling: 16 Assign: <= of type int [line: 34]                                                                       . . Sibling: 16 Assign: <= of type int [line: 34]
. . . Child: 0 Id: mysteriousPenguin of type int [line: 34]                                                             . . . Child: 0 Id: mysteriousPenguin of type int [line: 34]
. . . Child: 1 Op: chsign of type int [line: 34]                                                                        . . . Child: 1 Op: chsign of type int [line: 34]
. . . . Child: 0 Op: - of type int [line: 34]                                                                           . . . . Child: 0 Op: - of type int [line: 34]
. . . . . Child: 0 Op: chsign of type int [line: 34]                                                                    . . . . . Child: 0 Op: chsign of type int [line: 34]
. . . . . . Child: 0 Op: chsign of type int [line: 34]                                                                  . . . . . . Child: 0 Op: chsign of type int [line: 34]
. . . . . . . Child: 0 Const 8 of type int [line: 34]                                                                   . . . . . . . Child: 0 Const 8 of type int [line: 34]
. . . . . Child: 1 Op: chsign of type int [line: 34]                                                                    . . . . . Child: 1 Op: chsign of type int [line: 34]
. . . . . . Child: 0 Assign: -- of type int [line: 34]                                                                  . . . . . . Child: 0 Assign: -- of type int [line: 34]
. . . . . . . Child: 0 Id: cheese of type int [line: 34]                                                                . . . . . . . Child: 0 Id: cheese of type int [line: 34]
. . Sibling: 17 While [line: 36]                                                                                        . . Sibling: 17 While [line: 36]
. . . Child: 0 Id: shave of type bool [line: 36]                                                                        . . . Child: 0 Id: shave of type bool [line: 36]
. . . Child: 1 Compound [line: 36]                                                                                      . . . Child: 1 Compound [line: 36]
. . . . Child: 0 Var: were of type int [line: 37]                                                                       . . . . Child: 0 Var: were of type int [line: 37]
. . . . Sibling: 1 Var: rabbit of type int [line: 37]                                                                   . . . . Sibling: 1 Var: rabbit of type int [line: 37]
. . . . Sibling: 2 Var: sheep is array of type int [line: 38]                                                           . . . . Sibling: 2 Var: sheep is array of type int [line: 38]
. . . . Child: 1 Assign: <= of type int [line: 40]                                                                      . . . . Child: 1 Assign: <= of type int [line: 40]
. . . . . Child: 0 Op: [ of type int [line: 40]                                                                         . . . . . Child: 0 Op: [ of type int [line: 40]
. . . . . . Child: 0 Id: sheep of type int [line: 40]                                                                   . . . . . . Child: 0 Id: sheep of type int [line: 40]
. . . . . . Child: 1 Const 2 of type int [line: 40]                                                                     . . . . . . Child: 1 Const 2 of type int [line: 40]
. . . . . Child: 1 Const 1618 of type int [line: 40]                                                                    . . . . . Child: 1 Const 1618 of type int [line: 40]
. . . . Sibling: 1 If [line: 41]                                                                                        . . . . Sibling: 1 If [line: 41]
. . . . . Child: 0 Op: < of type bool [line: 41]                                                                        . . . . . Child: 0 Op: < of type bool [line: 41]
. . . . . . Child: 0 Op: [ of type int [line: 41]                                                                       . . . . . . Child: 0 Op: [ of type int [line: 41]
. . . . . . . Child: 0 Id: sheep of type int [line: 41]                                                                 . . . . . . . Child: 0 Id: sheep of type int [line: 41]
. . . . . . . Child: 1 Const 2 of type int [line: 41]                                                                   . . . . . . . Child: 1 Const 2 of type int [line: 41]
. . . . . . Child: 1 Const 496 of type int [line: 41]                                                                   . . . . . . Child: 1 Const 496 of type int [line: 41]
. . . . . Child: 1 Break [line: 41]                                                                                     . . . . . Child: 1 Break [line: 41]
. . . . Sibling: 2 Call: wallace of type void [line: 42]                                                                . . . . Sibling: 2 Call: wallace of type void [line: 42]
. . . . . Child: 0 Assign: -- of type int [line: 42]                                                                    . . . . . Child: 0 Assign: -- of type int [line: 42]
. . . . . . Child: 0 Id: gromit of type int [line: 42]                                                                  . . . . . . Child: 0 Id: gromit of type int [line: 42]
. . . . . Sibling: 1 Op: - of type int [line: 42]                                                                       . . . . . Sibling: 1 Op: - of type int [line: 42]
. . . . . . Child: 0 Id: were of type int [line: 42]                                                                    . . . . . . Child: 0 Id: were of type int [line: 42]
. . . . . . Child: 1 Id: rabbit of type int [line: 42]                                                                  . . . . . . Child: 1 Id: rabbit of type int [line: 42]
. . . . Sibling: 3 Compound [line: 43]                                                                                  . . . . Sibling: 3 Compound [line: 43]
. . . . . Child: 0 Var: the of type int [line: 44]                                                                      . . . . . Child: 0 Var: the of type int [line: 44]
. . . . . Sibling: 1 Var: wrong of type int [line: 44]                                                                  . . . . . Sibling: 1 Var: wrong of type int [line: 44]
. . . . . Sibling: 2 Var: trousers of type int [line: 44]                                                               . . . . . Sibling: 2 Var: trousers of type int [line: 44]
. . . . . Child: 1 Assign: <= of type int [line: 46]                                                                    . . . . . Child: 1 Assign: <= of type int [line: 46]
. . . . . . Child: 0 Id: the of type int [line: 46]                                                                     . . . . . . Child: 0 Id: the of type int [line: 46]
. . . . . . Child: 1 Assign: += of type int [line: 46]                                                                  . . . . . . Child: 1 Assign: += of type int [line: 46]
. . . . . . . Child: 0 Id: wrong of type int [line: 46]                                                                 . . . . . . . Child: 0 Id: wrong of type int [line: 46]
. . . . . . . Child: 1 Assign: ++ of type int [line: 46]                                                                . . . . . . . Child: 1 Assign: ++ of type int [line: 46]
. . . . . . . . Child: 0 Id: trousers of type int [line: 46]                                                            . . . . . . . . Child: 0 Id: trousers of type int [line: 46]
. . . . . Sibling: 1 If [line: 47]                                                                                      . . . . . Sibling: 1 If [line: 47]
. . . . . . Child: 0 Op: = of type bool [line: 47]                                                                      . . . . . . Child: 0 Op: = of type bool [line: 47]
. . . . . . . Child: 0 Id: were of type int [line: 47]                                                                  . . . . . . . Child: 0 Id: were of type int [line: 47]
. . . . . . . Child: 1 Id: rabbit of type int [line: 47]                                                                . . . . . . . Child: 1 Id: rabbit of type int [line: 47]
. . . . . . Child: 1 Assign: <= of type int [line: 47]                                                                  . . . . . . Child: 1 Assign: <= of type int [line: 47]
. . . . . . . Child: 0 Id: were of type int [line: 47]                                                                  . . . . . . . Child: 0 Id: were of type int [line: 47]
. . . . . . . Child: 1 Assign: -- of type int [line: 47]                                                                . . . . . . . Child: 1 Assign: -- of type int [line: 47]
. . . . . . . . Child: 0 Id: wrong of type int [line: 47]                                                               . . . . . . . . Child: 0 Id: wrong of type int [line: 47]
. . Sibling: 18 Return [line: 50]                                                                                       . . Sibling: 18 Return [line: 50]
Sibling: 3 Func: penguin returns type bool [line: 54]                                                                   Sibling: 3 Func: penguin returns type bool [line: 54]
. Child: 0 Parm: Feathers of type char [line: 54]                                                                       . Child: 0 Parm: Feathers of type char [line: 54]
. Sibling: 1 Parm: McGraw is array of type char [line: 54]                                                              . Sibling: 1 Parm: McGraw is array of type char [line: 54]
. Sibling: 2 Parm: moon of type bool [line: 54]                                                                         . Sibling: 2 Parm: moon of type bool [line: 54]
. Sibling: 3 Parm: cheese of type bool [line: 54]                                                                       . Sibling: 3 Parm: cheese of type bool [line: 54]
. Sibling: 4 Parm: launch of type int [line: 54]                                                                        . Sibling: 4 Parm: launch of type int [line: 54]
. Child: 1 Compound [line: 55]                                                                                          . Child: 1 Compound [line: 55]
. . Child: 0 Var: tottington of type char [line: 56]                                                                    . . Child: 0 Var: tottington of type char [line: 56]
. . . Child: 0 Const 'x' of type char [line: 56]                                                                        . . . Child: 0 Const 'x' of type char [line: 56]
. . Sibling: 1 Var: Wensleydale is array of type char [line: 57]                                                        . . Sibling: 1 Var: Wensleydale is array of type char [line: 57]
. . Sibling: 2 Var: c of type char [line: 58]                                                                           . . Sibling: 2 Var: c of type char [line: 58]
. . Sibling: 3 Var: i of type int [line: 59]                                                                            . . Sibling: 3 Var: i of type int [line: 59]
. . Child: 1 Assign: <= of type char [line: 61]                                                                         . . Child: 1 Assign: <= of type char [line: 61]
. . . Child: 0 Id: tottington of type char [line: 61]                                                                   . . . Child: 0 Id: tottington of type char [line: 61]
. . . Child: 1 Id: Feathers of type char [line: 61]                                                                     . . . Child: 1 Id: Feathers of type char [line: 61]
. . Sibling: 1 Assign: <= of type bool [line: 62]                                                                       . . Sibling: 1 Assign: <= of type bool [line: 62]
. . . Child: 0 Id: moon of type bool [line: 62]                                                                         . . . Child: 0 Id: moon of type bool [line: 62]
. . . Child: 1 Op: and of type bool [line: 62]                                                                          . . . Child: 1 Op: and of type bool [line: 62]
. . . . Child: 0 Op: !> of type bool [line: 62]                                                                         . . . . Child: 0 Op: !> of type bool [line: 62]
. . . . . Child: 0 Id: McGraw of type char [line: 62]                                                                   . . . . . Child: 0 Id: McGraw of type char [line: 62]
. . . . . Child: 1 Id: Wensleydale of type char [line: 62]                                                              . . . . . Child: 1 Id: Wensleydale of type char [line: 62]
. . . . Child: 1 Id: moon of type bool [line: 62]                                                                       . . . . Child: 1 Id: moon of type bool [line: 62]
. . Sibling: 2 Assign: <= of type char [line: 63]                                                                       . . Sibling: 2 Assign: <= of type char [line: 63]
. . . Child: 0 Id: Wensleydale of type char [line: 63]                                                                  . . . Child: 0 Id: Wensleydale of type char [line: 63]
. . . Child: 1 Id: McGraw of type char [line: 63]                                                                       . . . Child: 1 Id: McGraw of type char [line: 63]
. . Sibling: 3 Assign: <= of type char [line: 64]                                                                       . . Sibling: 3 Assign: <= of type char [line: 64]
. . . Child: 0 Op: [ of type char [line: 64]                                                                            . . . Child: 0 Op: [ of type char [line: 64]
. . . . Child: 0 Id: Wensleydale of type char [line: 64]                                                                . . . . Child: 0 Id: Wensleydale of type char [line: 64]
. . . . Child: 1 Op: sizeof of type int [line: 64]                                                                      . . . . Child: 1 Op: sizeof of type int [line: 64]
. . . . . Child: 0 Id: McGraw of type char [line: 64]                                                                   . . . . . Child: 0 Id: McGraw of type char [line: 64]
. . . Child: 1 Const 'Q' of type char [line: 64]                                                                        . . . Child: 1 Const 'Q' of type char [line: 64]
. . Sibling: 4 Assign: <= of type char [line: 65]                                                                       . . Sibling: 4 Assign: <= of type char [line: 65]
. . . Child: 0 Op: [ of type char [line: 65]                                                                            . . . Child: 0 Op: [ of type char [line: 65]
. . . . Child: 0 Id: McGraw of type char [line: 65]                                                                     . . . . Child: 0 Id: McGraw of type char [line: 65]
. . . . Child: 1 Const 3 of type int [line: 65]                                                                         . . . . Child: 1 Const 3 of type int [line: 65]
. . . Child: 1 Const 'A' of type char [line: 65]                                                                        . . . Child: 1 Const 'A' of type char [line: 65]
Sibling: 4 Func: Wendolene returns type int [line: 68]                                                                  Sibling: 4 Func: Wendolene returns type int [line: 68]
. Child: 0 Parm: wool of type int [line: 68]                                                                            . Child: 0 Parm: wool of type int [line: 68]
. Sibling: 1 Parm: shaun of type bool [line: 68]                                                                        . Sibling: 1 Parm: shaun of type bool [line: 68]
. Sibling: 2 Parm: yarn is array of type int [line: 68]                                                                 . Sibling: 2 Parm: yarn is array of type int [line: 68]
. Sibling: 3 Parm: preston is array of type bool [line: 68]                                                             . Sibling: 3 Parm: preston is array of type bool [line: 68]
. Child: 1 Compound [line: 69]                                                                                          . Child: 1 Compound [line: 69]
. . Child: 0 Var: skein of type int [line: 70]                                                                          . . Child: 0 Var: skein of type int [line: 70]
. . Child: 1 Assign: <= of type bool [line: 71]                                                                         . . Child: 1 Assign: <= of type bool [line: 71]
. . . Child: 0 Op: [ of type bool [line: 71]                                                                            . . . Child: 0 Op: [ of type bool [line: 71]
. . . . Child: 0 Id: preston of type bool [line: 71]                                                                    . . . . Child: 0 Id: preston of type bool [line: 71]
. . . . Child: 1 Const 3 of type int [line: 71]                                                                         . . . . Child: 1 Const 3 of type int [line: 71]
. . . Child: 1 Op: or of type bool [line: 71]                                                                           . . . Child: 1 Op: or of type bool [line: 71]
. . . . Child: 0 Op: > of type bool [line: 71]                                                                          . . . . Child: 0 Op: > of type bool [line: 71]
. . . . . Child: 0 Op: [ of type int [line: 71]                                                                         . . . . . Child: 0 Op: [ of type int [line: 71]
. . . . . . Child: 0 Id: yarn of type int [line: 71]                                                                    . . . . . . Child: 0 Id: yarn of type int [line: 71]
. . . . . . Child: 1 Const 1 of type int [line: 71]                                                                     . . . . . . Child: 1 Const 1 of type int [line: 71]
. . . . . Child: 1 Id: wool of type int [line: 71]                                                                      . . . . . Child: 1 Id: wool of type int [line: 71]
. . . . Child: 1 Op: not of type bool [line: 71]                                                                        . . . . Child: 1 Op: not of type bool [line: 71]
. . . . . Child: 0 Id: shaun of type bool [line: 71]                                                                    . . . . . Child: 0 Id: shaun of type bool [line: 71]
. . Sibling: 1 Return [line: 72]                                                                                        . . Sibling: 1 Return [line: 72]
. . . Child: 0 Op: + of type int [line: 72]                                                                             . . . Child: 0 Op: + of type int [line: 72]
. . . . Child: 0 Op: + of type int [line: 72]                                                                           . . . . Child: 0 Op: + of type int [line: 72]
. . . . . Child: 0 Op: + of type int [line: 72]                                                                         . . . . . Child: 0 Op: + of type int [line: 72]
. . . . . . Child: 0 Op: + of type int [line: 72]                                                                       . . . . . . Child: 0 Op: + of type int [line: 72]
. . . . . . . Child: 0 Id: wool of type int [line: 72]                                                                  . . . . . . . Child: 0 Id: wool of type int [line: 72]
. . . . . . . Child: 1 Op: [ of type int [line: 72]                                                                     . . . . . . . Child: 1 Op: [ of type int [line: 72]
. . . . . . . . Child: 0 Id: yarn of type int [line: 72]                                                                . . . . . . . . Child: 0 Id: yarn of type int [line: 72]
. . . . . . . . Child: 1 Const 0 of type int [line: 72]                                                                 . . . . . . . . Child: 1 Const 0 of type int [line: 72]
. . . . . . Child: 1 Op: sizeof of type int [line: 72]                                                                  . . . . . . Child: 1 Op: sizeof of type int [line: 72]
. . . . . . . Child: 0 Id: yarn of type int [line: 72]                                                                  . . . . . . . Child: 0 Id: yarn of type int [line: 72]
. . . . . Child: 1 Op: [ of type int [line: 72]                                                                         . . . . . Child: 1 Op: [ of type int [line: 72]
. . . . . . Child: 0 Id: yarn of type int [line: 72]                                                                    . . . . . . Child: 0 Id: yarn of type int [line: 72]
. . . . . . Child: 1 Op: * of type int [line: 72]                                                                       . . . . . . Child: 1 Op: * of type int [line: 72]
. . . . . . . Child: 0 Const 7 of type int [line: 72]                                                                   . . . . . . . Child: 0 Const 7 of type int [line: 72]
. . . . . . . Child: 1 Id: wool of type int [line: 72]                                                                  . . . . . . . Child: 1 Id: wool of type int [line: 72]
. . . . Child: 1 Op: [ of type int [line: 72]                                                                           . . . . Child: 1 Op: [ of type int [line: 72]
. . . . . Child: 0 Id: yarn of type int [line: 72]                                                                      . . . . . Child: 0 Id: yarn of type int [line: 72]
. . . . . Child: 1 Op: - of type int [line: 72]                                                                         . . . . . Child: 1 Op: - of type int [line: 72]
. . . . . . Child: 0 Op: [ of type int [line: 72]                                                                       . . . . . . Child: 0 Op: [ of type int [line: 72]
. . . . . . . Child: 0 Id: yarn of type int [line: 72]                                                                  . . . . . . . Child: 0 Id: yarn of type int [line: 72]
. . . . . . . Child: 1 Op: + of type int [line: 72]                                                                     . . . . . . . Child: 1 Op: + of type int [line: 72]
. . . . . . . . Child: 0 Const 3 of type int [line: 72]                                                                 . . . . . . . . Child: 0 Const 3 of type int [line: 72]
. . . . . . . . Child: 1 Op: * of type int [line: 72]                                                                   . . . . . . . . Child: 1 Op: * of type int [line: 72]
. . . . . . . . . Child: 0 Id: wool of type int [line: 72]                                                              . . . . . . . . . Child: 0 Id: wool of type int [line: 72]
. . . . . . . . . Child: 1 Const 2 of type int [line: 72]                                                               . . . . . . . . . Child: 1 Const 2 of type int [line: 72]
. . . . . . Child: 1 Const 4 of type int [line: 72]                                                                     . . . . . . Child: 1 Const 4 of type int [line: 72]
Sibling: 5 Func: ramsBottom returns type bool [line: 76]                                                                Sibling: 5 Func: ramsBottom returns type bool [line: 76]
. Child: 1 Compound [line: 77]                                                                                          . Child: 1 Compound [line: 77]
. . Child: 0 Var: chicken is array of type int [line: 78]                                                               . . Child: 0 Var: chicken is array of type int [line: 78]
. . Sibling: 1 Var: run is array of type bool [line: 79]                                                                . . Sibling: 1 Var: run is array of type bool [line: 79]
. . Sibling: 2 Var: wallace is array of type int [line: 80]                                                             . . Sibling: 2 Var: wallace is array of type int [line: 80]
. . Sibling: 3 Var: gromit is array of type int [line: 80]                                                              . . Sibling: 3 Var: gromit is array of type int [line: 80]
. . Child: 1 Op: * of type int [line: 82]                                                                               . . Child: 1 Op: * of type int [line: 82]
. . . Child: 0 Const 42 of type int [line: 82]                                                                          . . . Child: 0 Const 42 of type int [line: 82]
. . . Child: 1 Call: Wendolene of type int [line: 82]                                                                   . . . Child: 1 Call: Wendolene of type int [line: 82]
. . . . Child: 0 Op: + of type int [line: 82]                                                                           . . . . Child: 0 Op: + of type int [line: 82]
. . . . . Child: 0 Op: + of type int [line: 82]                                                                         . . . . . Child: 0 Op: + of type int [line: 82]
. . . . . . Child: 0 Const 1 of type int [line: 82]                                                                     . . . . . . Child: 0 Const 1 of type int [line: 82]
. . . . . . Child: 1 Const 2 of type int [line: 82]                                                                     . . . . . . Child: 1 Const 2 of type int [line: 82]
. . . . . Child: 1 Const 3 of type int [line: 82]                                                                       . . . . . Child: 1 Const 3 of type int [line: 82]
. . . . Sibling: 1 Op: or of type bool [line: 82]                                                                       . . . . Sibling: 1 Op: or of type bool [line: 82]
. . . . . Child: 0 Op: not of type bool [line: 82]                                                                      . . . . . Child: 0 Op: not of type bool [line: 82]
. . . . . . Child: 0 Const true of type bool [line: 82]                                                                 . . . . . . Child: 0 Const true of type bool [line: 82]
. . . . . Child: 1 Op: and of type bool [line: 82]                                                                      . . . . . Child: 1 Op: and of type bool [line: 82]
. . . . . . Child: 0 Const true of type bool [line: 82]                                                                 . . . . . . Child: 0 Const true of type bool [line: 82]
. . . . . . Child: 1 Const false of type bool [line: 82]                                                                . . . . . . Child: 1 Const false of type bool [line: 82]
. . . . Sibling: 2 Id: chicken of type int [line: 82]                                                                   . . . . Sibling: 2 Id: chicken of type int [line: 82]
. . . . Sibling: 3 Id: run of type bool [line: 82]                                                                      . . . . Sibling: 3 Id: run of type bool [line: 82]
. . Sibling: 1 Op: [ of type bool [line: 83]                                                                            . . Sibling: 1 Op: [ of type bool [line: 83]
. . . Child: 0 Id: run of type bool [line: 83]                                                                          . . . Child: 0 Id: run of type bool [line: 83]
. . . Child: 1 Op: - of type int [line: 83]                                                                             . . . Child: 1 Op: - of type int [line: 83]
. . . . Child: 0 Op: sizeof of type int [line: 83]                                                                      . . . . Child: 0 Op: sizeof of type int [line: 83]
. . . . . Child: 0 Id: run of type bool [line: 83]                                                                      . . . . . Child: 0 Id: run of type bool [line: 83]
. . . . Child: 1 Const 1 of type int [line: 83]                                                                         . . . . Child: 1 Const 1 of type int [line: 83]
. . Sibling: 2 Return [line: 85]                                                                                        . . Sibling: 2 Return [line: 85]
. . . Child: 0 Op: not of type bool [line: 85]                                                                          . . . Child: 0 Op: not of type bool [line: 85]
. . . . Child: 0 Op: !< of type bool [line: 85]                                                                         . . . . Child: 0 Op: !< of type bool [line: 85]
. . . . . Child: 0 Op: [ of type int [line: 85]                                                                         . . . . . Child: 0 Op: [ of type int [line: 85]
. . . . . . Child: 0 Id: wallace of type int [line: 85]                                                                 . . . . . . Child: 0 Id: wallace of type int [line: 85]
. . . . . . Child: 1 Const 1 of type int [line: 85]                                                                     . . . . . . Child: 1 Const 1 of type int [line: 85]
. . . . . Child: 1 Op: * of type int [line: 85]                                                                         . . . . . Child: 1 Op: * of type int [line: 85]
. . . . . . Child: 0 Op: chsign of type int [line: 85]                                                                  . . . . . . Child: 0 Op: chsign of type int [line: 85]
. . . . . . . Child: 0 Op: [ of type int [line: 85]                                                                     . . . . . . . Child: 0 Op: [ of type int [line: 85]
. . . . . . . . Child: 0 Id: gromit of type int [line: 85]                                                              . . . . . . . . Child: 0 Id: gromit of type int [line: 85]
. . . . . . . . Child: 1 Const 2 of type int [line: 85]                                                                 . . . . . . . . Child: 1 Const 2 of type int [line: 85]
. . . . . . Child: 1 Const 3 of type int [line: 85]                                                                     . . . . . . Child: 1 Const 3 of type int [line: 85]
Sibling: 6 Func: cheese returns type int [line: 88]                                                                     Sibling: 6 Func: cheese returns type int [line: 88]
. Child: 0 Parm: x of type int [line: 88]                                                                               . Child: 0 Parm: x of type int [line: 88]
. Sibling: 1 Parm: y of type int [line: 88]                                                                             . Sibling: 1 Parm: y of type int [line: 88]
. Child: 1 Compound [line: 88]                                                                                          . Child: 1 Compound [line: 88]
. . Child: 1 While [line: 88]                                                                                           . . Child: 1 While [line: 88]
. . . Child: 0 Op: > of type bool [line: 88]                                                                            . . . Child: 0 Op: > of type bool [line: 88]
. . . . Child: 0 Id: x of type int [line: 88]                                                                           . . . . Child: 0 Id: x of type int [line: 88]
. . . . Child: 1 Const 0 of type int [line: 88]                                                                         . . . . Child: 1 Const 0 of type int [line: 88]
. . . Child: 1 If [line: 88]                                                                                            . . . Child: 1 If [line: 88]
. . . . Child: 0 Op: > of type bool [line: 88]                                                                          . . . . Child: 0 Op: > of type bool [line: 88]
. . . . . Child: 0 Id: y of type int [line: 88]                                                                         . . . . . Child: 0 Id: y of type int [line: 88]
. . . . . Child: 1 Const 3 of type int [line: 88]                                                                       . . . . . Child: 1 Const 3 of type int [line: 88]
. . . . Child: 1 Assign: -- of type int [line: 88]                                                                      . . . . Child: 1 Assign: -- of type int [line: 88]
. . . . . Child: 0 Id: x of type int [line: 88]                                                                         . . . . . Child: 0 Id: x of type int [line: 88]
. . . . Child: 2 Return [line: 88]                                                                                      . . . . Child: 2 Return [line: 88]
. . . . . Child: 0 Op: % of type int [line: 88]                                                                         . . . . . Child: 0 Op: % of type int [line: 88]
. . . . . . Child: 0 Op: * of type int [line: 88]                                                                       . . . . . . Child: 0 Op: * of type int [line: 88]
. . . . . . . Child: 0 Id: x of type int [line: 88]                                                                     . . . . . . . Child: 0 Id: x of type int [line: 88]
. . . . . . . Child: 1 Id: x of type int [line: 88]                                                                     . . . . . . . Child: 1 Id: x of type int [line: 88]
. . . . . . Child: 1 Id: y of type int [line: 88]                                                                       . . . . . . Child: 1 Id: y of type int [line: 88]
Sibling: 7 Func: Wensleydale returns type int [line: 90]                                                                Sibling: 7 Func: Wensleydale returns type int [line: 90]
. Child: 0 Parm: x of type int [line: 90]                                                                               . Child: 0 Parm: x of type int [line: 90]
. Sibling: 1 Parm: y of type int [line: 90]                                                                             . Sibling: 1 Parm: y of type int [line: 90]
. Child: 1 Compound [line: 90]                                                                                          . Child: 1 Compound [line: 90]
. . Child: 1 Return [line: 90]                                                                                          . . Child: 1 Return [line: 90]
. . . Child: 0 Call: cheese of type int [line: 90]                                                                      . . . Child: 0 Call: cheese of type int [line: 90]
. . . . Child: 0 Id: x of type int [line: 90]                                                                           . . . . Child: 0 Id: x of type int [line: 90]
. . . . Sibling: 1 Id: gromit of type int [line: 90]                                                                    . . . . Sibling: 1 Id: gromit of type int [line: 90]
Sibling: 8 Func: LadyCampanula returns type int [line: 92]                                                              Sibling: 8 Func: LadyCampanula returns type int [line: 92]
. Child: 0 Parm: c of type char [line: 92]                                                                              . Child: 0 Parm: c of type char [line: 92]
. Sibling: 1 Parm: s is array of type char [line: 92]                                                                   . Sibling: 1 Parm: s is array of type char [line: 92]
. Child: 1 Compound [line: 92]                                                                                          . Child: 1 Compound [line: 92]
. . Child: 1 While [line: 92]                                                                                           . . Child: 1 While [line: 92]
. . . Child: 0 Const true of type bool [line: 92]                                                                       . . . Child: 0 Const true of type bool [line: 92]
. . . Child: 1 For [line: 92]                                                                                           . . . Child: 1 For [line: 92]
. . . . Child: 0 Var: i of type int [line: 92]                                                                          . . . . Child: 0 Var: i of type int [line: 92]
. . . . Child: 1 Range [line: 92]                                                                                       . . . . Child: 1 Range [line: 92]
. . . . . Child: 0 Op: - of undefined type [line: 92]                                                                   . . . . . Child: 0 Op: - of undefined type [line: 92]
. . . . . . Child: 0 Op: sizeof of undefined type [line: 92]                                                            . . . . . . Child: 0 Op: sizeof of undefined type [line: 92]
. . . . . . . Child: 0 Id: s of type char [line: 92]                                                              |     . . . . . . . Child: 0 Id: s of undefined type [line: 92]
. . . . . . Child: 1 Const 1 of type int [line: 92]                                                                     . . . . . . Child: 1 Const 1 of type int [line: 92]
. . . . . Child: 1 Const 0 of type int [line: 92]                                                                       . . . . . Child: 1 Const 0 of type int [line: 92]
. . . . . Child: 2 Op: chsign of undefined type [line: 92]                                                              . . . . . Child: 2 Op: chsign of undefined type [line: 92]
. . . . . . Child: 0 Const 1 of type int [line: 92]                                                                     . . . . . . Child: 0 Const 1 of type int [line: 92]
. . . . Child: 2 If [line: 92]                                                                                          . . . . Child: 2 If [line: 92]
. . . . . Child: 0 Op: = of type bool [line: 92]                                                                        . . . . . Child: 0 Op: = of type bool [line: 92]
. . . . . . Child: 0 Op: [ of type char [line: 92]                                                                      . . . . . . Child: 0 Op: [ of type char [line: 92]
. . . . . . . Child: 0 Id: s of type char [line: 92]                                                                    . . . . . . . Child: 0 Id: s of type char [line: 92]
. . . . . . . Child: 1 Id: i of type int [line: 92]                                                                     . . . . . . . Child: 1 Id: i of type int [line: 92]
. . . . . . Child: 1 Id: c of type char [line: 92]                                                                      . . . . . . Child: 1 Id: c of type char [line: 92]
. . . . . Child: 1 Return [line: 92]                                                                                    . . . . . Child: 1 Return [line: 92]
. . . . . . Child: 0 Id: i of type int [line: 92]                                                                       . . . . . . Child: 0 Id: i of type int [line: 92]
Sibling: 9 Func: MrsTweedy returns type char [line: 95]                                                                 Sibling: 9 Func: MrsTweedy returns type char [line: 95]
. Child: 0 Parm: c of type char [line: 95]                                                                              . Child: 0 Parm: c of type char [line: 95]
. Sibling: 1 Parm: s is array of type char [line: 95]                                                                   . Sibling: 1 Parm: s is array of type char [line: 95]
. Child: 1 Compound [line: 96]                                                                                          . Child: 1 Compound [line: 96]
. . Child: 1 For [line: 97]                                                                                             . . Child: 1 For [line: 97]
. . . Child: 0 Var: ginger of type int [line: 97]                                                                       . . . Child: 0 Var: ginger of type int [line: 97]
. . . Child: 1 Range [line: 97]                                                                                         . . . Child: 1 Range [line: 97]
. . . . Child: 0 Const 0 of type int [line: 97]                                                                         . . . . Child: 0 Const 0 of type int [line: 97]
. . . . Child: 1 Const 10 of type int [line: 97]                                                                        . . . . Child: 1 Const 10 of type int [line: 97]
. . . Child: 2 Assign: <= of type char [line: 97]                                                                       . . . Child: 2 Assign: <= of type char [line: 97]
. . . . Child: 0 Op: [ of type char [line: 97]                                                                          . . . . Child: 0 Op: [ of type char [line: 97]
. . . . . Child: 0 Id: s of type char [line: 97]                                                                        . . . . . Child: 0 Id: s of type char [line: 97]
. . . . . Child: 1 Id: ginger of type int [line: 97]                                                                    . . . . . Child: 1 Id: ginger of type int [line: 97]
. . . . Child: 1 Id: c of type char [line: 97]                                                                          . . . . Child: 1 Id: c of type char [line: 97]
. . Sibling: 1 For [line: 98]                                                                                           . . Sibling: 1 For [line: 98]
. . . Child: 0 Var: pastry of type int [line: 98]                                                                       . . . Child: 0 Var: pastry of type int [line: 98]
. . . Child: 1 Range [line: 98]                                                                                         . . . Child: 1 Range [line: 98]
. . . . Child: 0 Const 0 of type int [line: 98]                                                                         . . . . Child: 0 Const 0 of type int [line: 98]
. . . . Child: 1 Const 2 of type int [line: 98]                                                                         . . . . Child: 1 Const 2 of type int [line: 98]
. . . . Child: 2 Const 7 of type int [line: 98]                                                                         . . . . Child: 2 Const 7 of type int [line: 98]
. . . Child: 2 If [line: 98]                                                                                            . . . Child: 2 If [line: 98]
. . . . Child: 0 Op: = of type bool [line: 98]                                                                          . . . . Child: 0 Op: = of type bool [line: 98]
. . . . . Child: 0 Op: [ of type char [line: 98]                                                                        . . . . . Child: 0 Op: [ of type char [line: 98]
. . . . . . Child: 0 Id: s of type char [line: 98]                                                                      . . . . . . Child: 0 Id: s of type char [line: 98]
. . . . . . Child: 1 Const 0 of type int [line: 98]                                                                     . . . . . . Child: 1 Const 0 of type int [line: 98]
. . . . . Child: 1 Op: [ of type char [line: 98]                                                                        . . . . . Child: 1 Op: [ of type char [line: 98]
. . . . . . Child: 0 Id: s of type char [line: 98]                                                                      . . . . . . Child: 0 Id: s of type char [line: 98]
. . . . . . Child: 1 Const 1 of type int [line: 98]                                                                     . . . . . . Child: 1 Const 1 of type int [line: 98]
. . . . Child: 1 Break [line: 98]                                                                                       . . . . Child: 1 Break [line: 98]
. . Sibling: 2 While [line: 99]                                                                                         . . Sibling: 2 While [line: 99]
. . . Child: 0 Const true of type bool [line: 99]                                                                       . . . Child: 0 Const true of type bool [line: 99]
. . . Child: 1 Break [line: 99]                                                                                         . . . Child: 1 Break [line: 99]
. . Sibling: 3 Return [line: 101]                                                                                       . . Sibling: 3 Return [line: 101]
. . . Child: 0 Const 'x' of type char [line: 101]                                                                       . . . Child: 0 Const 'x' of type char [line: 101]
Sibling: 10 Func: TheWereRabbit returns type char [line: 104]                                                           Sibling: 10 Func: TheWereRabbit returns type char [line: 104]
. Child: 0 Parm: x of type int [line: 104]                                                                              . Child: 0 Parm: x of type int [line: 104]
. Child: 1 Compound [line: 105]                                                                                         . Child: 1 Compound [line: 105]
. . Child: 1 If [line: 106]                                                                                             . . Child: 1 If [line: 106]
. . . Child: 0 Op: = of type bool [line: 106]                                                                           . . . Child: 0 Op: = of type bool [line: 106]
. . . . Child: 0 Id: x of type int [line: 106]                                                                          . . . . Child: 0 Id: x of type int [line: 106]
. . . . Child: 1 Const 0 of type int [line: 106]                                                                        . . . . Child: 1 Const 0 of type int [line: 106]
. . . Child: 1 Return [line: 106]                                                                                       . . . Child: 1 Return [line: 106]
. . . . Child: 0 Const '@' of type char [line: 106]                                                                     . . . . Child: 0 Const '@' of type char [line: 106]
. . . Child: 2 If [line: 107]                                                                                           . . . Child: 2 If [line: 107]
. . . . Child: 0 Op: = of type bool [line: 107]                                                                         . . . . Child: 0 Op: = of type bool [line: 107]
. . . . . Child: 0 Id: x of type int [line: 107]                                                                        . . . . . Child: 0 Id: x of type int [line: 107]
. . . . . Child: 1 Const 1 of type int [line: 107]                                                                      . . . . . Child: 1 Const 1 of type int [line: 107]
. . . . Child: 1 Return [line: 107]                                                                                     . . . . Child: 1 Return [line: 107]
. . . . . Child: 0 Const 'a' of type char [line: 107]                                                                   . . . . . Child: 0 Const 'a' of type char [line: 107]
. . . . Child: 2 If [line: 108]                                                                                         . . . . Child: 2 If [line: 108]
. . . . . Child: 0 Op: = of type bool [line: 108]                                                                       . . . . . Child: 0 Op: = of type bool [line: 108]
. . . . . . Child: 0 Id: x of type int [line: 108]                                                                      . . . . . . Child: 0 Id: x of type int [line: 108]
. . . . . . Child: 1 Const 2 of type int [line: 108]                                                                    . . . . . . Child: 1 Const 2 of type int [line: 108]
. . . . . Child: 1 Return [line: 108]                                                                                   . . . . . Child: 1 Return [line: 108]
. . . . . . Child: 0 Const 'b' of type char [line: 108]                                                                 . . . . . . Child: 0 Const 'b' of type char [line: 108]
. . . . . Child: 2 If [line: 109]                                                                                       . . . . . Child: 2 If [line: 109]
. . . . . . Child: 0 Op: = of type bool [line: 109]                                                                     . . . . . . Child: 0 Op: = of type bool [line: 109]
. . . . . . . Child: 0 Id: x of type int [line: 109]                                                                    . . . . . . . Child: 0 Id: x of type int [line: 109]
. . . . . . . Child: 1 Const 3 of type int [line: 109]                                                                  . . . . . . . Child: 1 Const 3 of type int [line: 109]
. . . . . . Child: 1 Return [line: 109]                                                                                 . . . . . . Child: 1 Return [line: 109]
. . . . . . . Child: 0 Const 'c' of type char [line: 109]                                                               . . . . . . . Child: 0 Const 'c' of type char [line: 109]
. . . . . . Child: 2 If [line: 110]                                                                                     . . . . . . Child: 2 If [line: 110]
. . . . . . . Child: 0 Op: = of type bool [line: 110]                                                                   . . . . . . . Child: 0 Op: = of type bool [line: 110]
. . . . . . . . Child: 0 Id: x of type int [line: 110]                                                                  . . . . . . . . Child: 0 Id: x of type int [line: 110]
. . . . . . . . Child: 1 Const 4 of type int [line: 110]                                                                . . . . . . . . Child: 1 Const 4 of type int [line: 110]
. . . . . . . Child: 1 Return [line: 110]                                                                               . . . . . . . Child: 1 Return [line: 110]
. . . . . . . . Child: 0 Const 'd' of type char [line: 110]                                                             . . . . . . . . Child: 0 Const 'd' of type char [line: 110]
. . . . . . . Child: 2 Return [line: 111]                                                                               . . . . . . . Child: 2 Return [line: 111]
. . . . . . . . Child: 0 Const ' ' of type char [line: 111]                                                              . . . . . . . . Child: 0 Const ' ' of type char [line: 111]
Sibling: 11 Func: main returns type int [line: 114]                                                                     Sibling: 11 Func: main returns type int [line: 114]
. Child: 1 Compound [line: 115]                                                                                         . Child: 1 Compound [line: 115]
. . Child: 0 Var: wool of type int [line: 116]                                                                          . . Child: 0 Var: wool of type int [line: 116]
. . Sibling: 1 Var: yarn is array of type int [line: 116]                                                               . . Sibling: 1 Var: yarn is array of type int [line: 116]
. . Sibling: 2 Var: shaun of type bool [line: 117]                                                                      . . Sibling: 2 Var: shaun of type bool [line: 117]
. . Sibling: 3 Var: preston is array of type bool [line: 117]                                                           . . Sibling: 3 Var: preston is array of type bool [line: 117]
. . Sibling: 4 Var: rocky is array of type char [line: 118]                                                             . . Sibling: 4 Var: rocky is array of type char [line: 118]
. . Child: 1 Call: wallace of type void [line: 120]                                                                     . . Child: 1 Call: wallace of type void [line: 120]
. . . Child: 0 Call: cheese of type int [line: 120]                                                                     . . . Child: 0 Call: cheese of type int [line: 120]
. . . . Child: 0 Const 62 of type int [line: 120]                                                                       . . . . Child: 0 Const 62 of type int [line: 120]
. . . . Sibling: 1 Op: chsign of type int [line: 120]                                                                   . . . . Sibling: 1 Op: chsign of type int [line: 120]
. . . . . Child: 0 Const 311 of type int [line: 120]                                                                    . . . . . Child: 0 Const 311 of type int [line: 120]
. . . Sibling: 1 Id: gromit of type int [line: 120]                                                                     . . . Sibling: 1 Id: gromit of type int [line: 120]
. . Sibling: 1 Assign: <= of type char [line: 121]                                                                      . . Sibling: 1 Assign: <= of type char [line: 121]
. . . Child: 0 Id: rocky of type char [line: 121]                                                                       . . . Child: 0 Id: rocky of type char [line: 121]
. . . Child: 1 Const is array "molybdenum" of type char [line: 121]                                                     . . . Child: 1 Const is array "molybdenum" of type char [line: 121]
. . Sibling: 2 Call: MrsTweedy of type char [line: 123]                                                                 . . Sibling: 2 Call: MrsTweedy of type char [line: 123]
. . . Child: 0 Const 'Z' of type char [line: 123]                                                                       . . . Child: 0 Const 'Z' of type char [line: 123]
. . . Sibling: 1 Id: rocky of type char [line: 123]                                                                     . . . Sibling: 1 Id: rocky of type char [line: 123]
. . Sibling: 3 Op: + of type int [line: 125]                                                                            . . Sibling: 3 Op: + of type int [line: 125]
. . . Child: 0 Op: [ of type int [line: 125]                                                                            . . . Child: 0 Op: [ of type int [line: 125]
. . . . Child: 0 Id: yarn of type int [line: 125]                                                                       . . . . Child: 0 Id: yarn of type int [line: 125]
. . . . Child: 1 Op: ? of type int [line: 125]                                                                          . . . . Child: 1 Op: ? of type int [line: 125]
. . . . . Child: 0 Const 100 of type int [line: 125]                                                                    . . . . . Child: 0 Const 100 of type int [line: 125]
. . . Child: 1 Op: [ of type int [line: 125]                                                                            . . . Child: 1 Op: [ of type int [line: 125]
. . . . Child: 0 Id: yarn of type int [line: 125]                                                                       . . . . Child: 0 Id: yarn of type int [line: 125]
. . . . Child: 1 Op: ? of type int [line: 125]                                                                          . . . . Child: 1 Op: ? of type int [line: 125]
. . . . . Child: 0 Op: sizeof of type int [line: 125]                                                                   . . . . . Child: 0 Op: sizeof of type int [line: 125]
. . . . . . Child: 0 Id: yarn of type int [line: 125]                                                                   . . . . . . Child: 0 Id: yarn of type int [line: 125]
. . Sibling: 4 Return [line: 127]                                                                                       . . Sibling: 4 Return [line: 127]
. . . Child: 0 Call: Wendolene of type int [line: 127]                                                                  . . . Child: 0 Call: Wendolene of type int [line: 127]
. . . . Child: 0 Op: * of type int [line: 127]                                                                          . . . . Child: 0 Op: * of type int [line: 127]
. . . . . Child: 0 Op: sizeof of type int [line: 127]                                                                   . . . . . Child: 0 Op: sizeof of type int [line: 127]
. . . . . . Child: 0 Id: preston of type bool [line: 127]                                                               . . . . . . Child: 0 Id: preston of type bool [line: 127]
. . . . . Child: 1 Op: sizeof of type int [line: 127]                                                                   . . . . . Child: 1 Op: sizeof of type int [line: 127]
. . . . . . Child: 0 Id: yarn of type int [line: 127]                                                                   . . . . . . Child: 0 Id: yarn of type int [line: 127]
. . . . Sibling: 1 Id: shaun of type bool [line: 127]                                                                   . . . . Sibling: 1 Id: shaun of type bool [line: 127]
. . . . Sibling: 2 Id: yarn of type int [line: 127]                                                                     . . . . Sibling: 2 Id: yarn of type int [line: 127]
. . . . Sibling: 3 Id: preston of type bool [line: 127]                                                                 . . . . Sibling: 3 Id: preston of type bool [line: 127]
Sibling: 12 Var: aBigLongVariableName6andthx1138 of type bool [line: 130]                                               Sibling: 12 Var: aBigLongVariableName6andthx1138 of type bool [line: 130]
Sibling: 13 Var: odd of type int [line: 131]                                                                            Sibling: 13 Var: odd of type int [line: 131]
Sibling: 14 Var: separation of type int [line: 131]                                                                     Sibling: 14 Var: separation of type int [line: 131]
Sibling: 15 Var: of of type int [line: 131]                                                                             Sibling: 15 Var: of of type int [line: 131]
Sibling: 16 Var: stuff of type int [line: 132]                                                                          Sibling: 16 Var: stuff of type int [line: 132]
Sibling: 17 Var: ant is array of type char [line: 134]                                                                  Sibling: 17 Var: ant is array of type char [line: 134]
. Child: 0 Const is array "unwrinkled" of type char [line: 134]                                                         . Child: 0 Const is array "unwrinkled" of type char [line: 134]
Sibling: 18 Var: bat of type char [line: 135]                                                                           Sibling: 18 Var: bat of type char [line: 135]
. Child: 0 Const ''' of type char [line: 135]                                                                           . Child: 0 Const ''' of type char [line: 135]
Sibling: 19 Var: cat of type char [line: 136]                                                                           Sibling: 19 Var: cat of type char [line: 136]
. Child: 0 Const 't' of type char [line: 136]                                                                           . Child: 0 Const 't' of type char [line: 136]
Sibling: 20 Var: dog of type char [line: 137]                                                                           Sibling: 20 Var: dog of type char [line: 137]
. Child: 0 Const '                                                                                                      . Child: 0 Const '
' of type char [line: 137]                                                                                              ' of type char [line: 137]
Sibling: 21 Var: hog of type char [line: 138]                                                                           Sibling: 21 Var: hog of type char [line: 138]
. Child: 0 Const ' ' of type char [line: 138]                                                                            . Child: 0 Const ' ' of type char [line: 138]
Number of warnings: 17                                                                                                  Number of warnings: 17
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P exp.c-                                                                                                          ./c- -P exp.c-
ERROR(8): Symbol 'output' is not declared.                                                                              ERROR(8): Symbol 'output' is not declared.
ERROR(9): Symbol 'output' is not declared.                                                                              ERROR(9): Symbol 'output' is not declared.
ERROR(10): Symbol 'output' is not declared.                                                                             ERROR(10): Symbol 'output' is not declared.
ERROR(11): Symbol 'outnl' is not declared.                                                                              ERROR(11): Symbol 'outnl' is not declared.
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
ERROR(13): Symbol 'output' is not declared.                                                                             ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outnl' is not declared.                                                                              ERROR(14): Symbol 'outnl' is not declared.
ERROR(15): Symbol 'output' is not declared.                                                                             ERROR(15): Symbol 'output' is not declared.
ERROR(16): Symbol 'output' is not declared.                                                                             ERROR(16): Symbol 'output' is not declared.
ERROR(17): Symbol 'outnl' is not declared.                                                                              ERROR(17): Symbol 'outnl' is not declared.
ERROR(18): Symbol 'output' is not declared.                                                                             ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.                                                                             ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'output' is not declared.                                                                             ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'outnl' is not declared.                                                                              ERROR(21): Symbol 'outnl' is not declared.
ERROR(22): Symbol 'outputb' is not declared.                                                                            ERROR(22): Symbol 'outputb' is not declared.
ERROR(23): Symbol 'outputb' is not declared.                                                                            ERROR(23): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outnl' is not declared.                                                                              ERROR(24): Symbol 'outnl' is not declared.
ERROR(25): Symbol 'outputb' is not declared.                                                                            ERROR(25): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.                                                                            ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outnl' is not declared.                                                                              ERROR(27): Symbol 'outnl' is not declared.
ERROR(28): Symbol 'outputb' is not declared.                                                                            ERROR(28): Symbol 'outputb' is not declared.
ERROR(29): Symbol 'outputb' is not declared.                                                                            ERROR(29): Symbol 'outputb' is not declared.
ERROR(30): Symbol 'outnl' is not declared.                                                                              ERROR(30): Symbol 'outnl' is not declared.
ERROR(31): Symbol 'outputb' is not declared.                                                                            ERROR(31): Symbol 'outputb' is not declared.
ERROR(32): Symbol 'outnl' is not declared.                                                                              ERROR(32): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 25                                                                                                    Number of errors: 25

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P expL.c-                                                                                                         ./c- -P expL.c-
WARNING(6): Variable 'x' may be uninitialized when used here.                                                           WARNING(6): Variable 'x' may be uninitialized when used here.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Child: 1 Op: > of type bool [line: 6]                                                                               . . Child: 1 Op: > of type bool [line: 6]
. . . Child: 0 Op: + of type int [line: 6]                                                                              . . . Child: 0 Op: + of type int [line: 6]
. . . . Child: 0 Op: * of type int [line: 6]                                                                            . . . . Child: 0 Op: * of type int [line: 6]
. . . . . Child: 0 Const 555 of type int [line: 6]                                                                      . . . . . Child: 0 Const 555 of type int [line: 6]
. . . . . Child: 1 Const 666 of type int [line: 6]                                                                      . . . . . Child: 1 Const 666 of type int [line: 6]
. . . . Child: 1 Id: x of type int [line: 6]                                                                            . . . . Child: 1 Id: x of type int [line: 6]
. . . Child: 1 Const 777 of type int [line: 6]                                                                          . . . Child: 1 Const 777 of type int [line: 6]
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P expR.c-                                                                                                         ./c- -P expR.c-
WARNING(6): Variable 'x' may be uninitialized when used here.                                                           WARNING(6): Variable 'x' may be uninitialized when used here.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Child: 1 Op: > of type bool [line: 6]                                                                               . . Child: 1 Op: > of type bool [line: 6]
. . . Child: 0 Const 555 of type int [line: 6]                                                                          . . . Child: 0 Const 555 of type int [line: 6]
. . . Child: 1 Op: + of type int [line: 6]                                                                              . . . Child: 1 Op: + of type int [line: 6]
. . . . Child: 0 Const 666 of type int [line: 6]                                                                        . . . . Child: 0 Const 666 of type int [line: 6]
. . . . Child: 1 Op: * of type int [line: 6]                                                                            . . . . Child: 1 Op: * of type int [line: 6]
. . . . . Child: 0 Id: x of type int [line: 6]                                                                          . . . . . Child: 0 Id: x of type int [line: 6]
. . . . . Child: 1 Const 777 of type int [line: 6]                                                                      . . . . . Child: 1 Const 777 of type int [line: 6]
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P for2.c-                                                                                                         ./c- -P for2.c-
WARNING(3): The variable 'a' seems not to be used.                                                                      WARNING(3): The variable 'a' seems not to be used.
WARNING(5): The variable 'i' seems not to be used.                                                                      WARNING(5): The variable 'i' seems not to be used.
ERROR(8): Symbol 'j' is already declared at line 6.                                                                     ERROR(8): Symbol 'j' is already declared at line 6.
WARNING(9): Variable 'i' may be uninitialized when used here.                                                           WARNING(9): Variable 'i' may be uninitialized when used here.
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 1                                                                                                     Number of errors: 1

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P fora.c-                                                                                                         ./c- -P fora.c-
WARNING(7): The variable 'i' seems not to be used.                                                                      WARNING(7): The variable 'i' seems not to be used.
Func: main returns type void [line: 1]                                                                                  Func: main returns type void [line: 1]
. Child: 1 Compound [line: 2]                                                                                           . Child: 1 Compound [line: 2]
. . Child: 1 For [line: 3]                                                                                              . . Child: 1 For [line: 3]
. . . Child: 0 Var: i of type int [line: 3]                                                                             . . . Child: 0 Var: i of type int [line: 3]
. . . Child: 1 Range [line: 3]                                                                                          . . . Child: 1 Range [line: 3]
. . . . Child: 0 Const 1 of type int [line: 3]                                                                          . . . . Child: 0 Const 1 of type int [line: 3]
. . . . Child: 1 Const 11 of type int [line: 3]                                                                         . . . . Child: 1 Const 11 of type int [line: 3]
. . . Child: 2 Assign: <= of type int [line: 3]                                                                         . . . Child: 2 Assign: <= of type int [line: 3]
. . . . Child: 0 Id: i of type int [line: 3]                                                                            . . . . Child: 0 Id: i of type int [line: 3]
. . . . Child: 1 Const 3 of type int [line: 3]                                                                          . . . . Child: 1 Const 3 of type int [line: 3]
. . Sibling: 1 For [line: 5]                                                                                            . . Sibling: 1 For [line: 5]
. . . Child: 0 Var: j of type int [line: 5]                                                                             . . . Child: 0 Var: j of type int [line: 5]
. . . Child: 1 Range [line: 5]                                                                                          . . . Child: 1 Range [line: 5]
. . . . Child: 0 Const 2 of type int [line: 5]                                                                          . . . . Child: 0 Const 2 of type int [line: 5]
. . . . Child: 1 Const 22 of type int [line: 5]                                                                         . . . . Child: 1 Const 22 of type int [line: 5]
. . . . Child: 2 Const 3 of type int [line: 5]                                                                          . . . . Child: 2 Const 3 of type int [line: 5]
. . . Child: 2 Assign: <= of type int [line: 5]                                                                         . . . Child: 2 Assign: <= of type int [line: 5]
. . . . Child: 0 Id: j of type int [line: 5]                                                                            . . . . Child: 0 Id: j of type int [line: 5]
. . . . Child: 1 Const 7 of type int [line: 5]                                                                          . . . . Child: 1 Const 7 of type int [line: 5]
. . Sibling: 2 For [line: 7]                                                                                            . . Sibling: 2 For [line: 7]
. . . Child: 0 Var: i of type int [line: 7]                                                                             . . . Child: 0 Var: i of type int [line: 7]
. . . Child: 1 Range [line: 7]                                                                                          . . . Child: 1 Range [line: 7]
. . . . Child: 0 Id: i of undefined type [line: 7]                                                                      . . . . Child: 0 Id: i of undefined type [line: 7]
. . . . Child: 1 Id: i of undefined type [line: 7]                                                                      . . . . Child: 1 Id: i of undefined type [line: 7]
. . . . Child: 2 Id: i of undefined type [line: 7]                                                                      . . . . Child: 2 Id: i of undefined type [line: 7]
. . . Child: 2 Const 666 of type int [line: 7]                                                                          . . . Child: 2 Const 666 of type int [line: 7]
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P forb.c-                                                                                                         ./c- -P forb.c-
WARNING(3): The variable 'y' seems not to be used.                                                                      WARNING(3): The variable 'y' seems not to be used.
WARNING(3): The variable 'z' seems not to be used.                                                                      WARNING(3): The variable 'z' seems not to be used.
Func: main returns type void [line: 1]                                                                                  Func: main returns type void [line: 1]
. Child: 1 Compound [line: 2]                                                                                           . Child: 1 Compound [line: 2]
. . Child: 0 Var: y of type int [line: 3]                                                                               . . Child: 0 Var: y of type int [line: 3]
. . Sibling: 1 Var: z is array of type int [line: 3]                                                                    . . Sibling: 1 Var: z is array of type int [line: 3]
. . Child: 1 For [line: 4]                                                                                              . . Child: 1 For [line: 4]
. . . Child: 0 Var: x of type int [line: 4]                                                                             . . . Child: 0 Var: x of type int [line: 4]
. . . Child: 1 Range [line: 5]                                                                                          . . . Child: 1 Range [line: 5]
. . . . Child: 0 Id: x of undefined type [line: 5]                                                                      . . . . Child: 0 Id: x of undefined type [line: 5]
. . . . Child: 1 Id: x of undefined type [line: 5]                                                                      . . . . Child: 1 Id: x of undefined type [line: 5]
. . . . Child: 2 Id: x of undefined type [line: 5]                                                                      . . . . Child: 2 Id: x of undefined type [line: 5]
. . . Child: 2 Id: x of type int [line: 6]                                                                              . . . Child: 2 Id: x of type int [line: 6]
. . Sibling: 1 For [line: 7]                                                                                            . . Sibling: 1 For [line: 7]
. . . Child: 0 Var: x of type int [line: 7]                                                                             . . . Child: 0 Var: x of type int [line: 7]
. . . Child: 1 Range [line: 7]                                                                                          . . . Child: 1 Range [line: 7]
. . . . Child: 0 Id: y of undefined type [line: 7]                                                                      . . . . Child: 0 Id: y of undefined type [line: 7]
. . . . Child: 1 Id: x of undefined type [line: 7]                                                                      . . . . Child: 1 Id: x of undefined type [line: 7]
. . . Child: 2 Id: x of type int [line: 7]                                                                              . . . Child: 2 Id: x of type int [line: 7]
. . Sibling: 2 For [line: 8]                                                                                            . . Sibling: 2 For [line: 8]
. . . Child: 0 Var: x of type int [line: 8]                                                                             . . . Child: 0 Var: x of type int [line: 8]
. . . Child: 1 Range [line: 8]                                                                                          . . . Child: 1 Range [line: 8]
. . . . Child: 0 Id: z of undefined type [line: 8]                                                                      . . . . Child: 0 Id: z of undefined type [line: 8]
. . . . Child: 1 Id: x of undefined type [line: 8]                                                                      . . . . Child: 1 Id: x of undefined type [line: 8]
. . . Child: 2 Id: x of type int [line: 8]                                                                              . . . Child: 2 Id: x of type int [line: 8]
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P for.c-                                                                                                          ./c- -P for.c-
WARNING(5): The variable 'ba' seems not to be used.                                                                     WARNING(5): The variable 'ba' seems not to be used.
ERROR(12): Cannot index nonarray 'bb'.                                                                                  ERROR(12): Cannot index nonarray 'bb'.
ERROR(12): Symbol 'bb' is not declared.                                                                                 ERROR(12): Symbol 'bb' is not declared.
ERROR(13): Cannot index nonarray 'bb'.                                                                                  ERROR(13): Cannot index nonarray 'bb'.
ERROR(13): Symbol 'bb' is not declared.                                                                                 ERROR(13): Symbol 'bb' is not declared.
ERROR(14): Cannot index nonarray 'bb'.                                                                                  ERROR(14): Cannot index nonarray 'bb'.
ERROR(14): Symbol 'bb' is not declared.                                                                                 ERROR(14): Symbol 'bb' is not declared.
ERROR(16): Cannot index nonarray 'cc'.                                                                                  ERROR(16): Cannot index nonarray 'cc'.
ERROR(16): Symbol 'cc' is not declared.                                                                                 ERROR(16): Symbol 'cc' is not declared.
ERROR(17): Cannot index nonarray 'cc'.                                                                                  ERROR(17): Cannot index nonarray 'cc'.
ERROR(17): Symbol 'cc' is not declared.                                                                                 ERROR(17): Symbol 'cc' is not declared.
ERROR(20): Cannot index nonarray 'a'.                                                                                   ERROR(20): Cannot index nonarray 'a'.
ERROR(20): Symbol 'a' is not declared.                                                                                  ERROR(20): Symbol 'a' is not declared.
ERROR(20): Symbol 'output' is not declared.                                                                             ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'outnl' is not declared.                                                                              ERROR(21): Symbol 'outnl' is not declared.
ERROR(23): Cannot index nonarray 'b'.                                                                                   ERROR(23): Cannot index nonarray 'b'.
ERROR(23): Symbol 'b' is not declared.                                                                                  ERROR(23): Symbol 'b' is not declared.
ERROR(23): Symbol 'outputb' is not declared.                                                                            ERROR(23): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outnl' is not declared.                                                                              ERROR(24): Symbol 'outnl' is not declared.
ERROR(26): Cannot index nonarray 'c'.                                                                                   ERROR(26): Cannot index nonarray 'c'.
ERROR(26): Symbol 'c' is not declared.                                                                                  ERROR(26): Symbol 'c' is not declared.
ERROR(26): Symbol 'outputc' is not declared.                                                                            ERROR(26): Symbol 'outputc' is not declared.
ERROR(27): Symbol 'outnl' is not declared.                                                                              ERROR(27): Symbol 'outnl' is not declared.
ERROR(29): Symbol 'output' is not declared.                                                                             ERROR(29): Symbol 'output' is not declared.
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 23                                                                                                    Number of errors: 23

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P forscope.c-                                                                                                     ./c- -P forscope.c-
ERROR(6): Symbol 'x' is already declared at line 5.                                                                     ERROR(6): Symbol 'x' is already declared at line 5.
WARNING(10): The variable 'x' seems not to be used.                                                                     WARNING(10): The variable 'x' seems not to be used.
WARNING(15): The variable 'x' seems not to be used.                                                                     WARNING(15): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.                                                                   ERROR(16): Symbol 'x' is already declared at line 15.
ERROR(29): Symbol 'x' is already declared at line 28.                                                                   ERROR(29): Symbol 'x' is already declared at line 28.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 3                                                                                                     Number of errors: 3

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P funcscope.c-                                                                                                    ./c- -P funcscope.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
ERROR(5): Symbol 'x' is already declared at line 5.                                                                     ERROR(5): Symbol 'x' is already declared at line 5.
ERROR(6): Symbol 'x' is already declared at line 5.                                                                     ERROR(6): Symbol 'x' is already declared at line 5.
WARNING(10): The variable 'x' seems not to be used.                                                                     WARNING(10): The variable 'x' seems not to be used.
WARNING(15): The variable 'x' seems not to be used.                                                                     WARNING(15): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.                                                                   ERROR(16): Symbol 'x' is already declared at line 15.
ERROR(29): Symbol 'x' is already declared at line 28.                                                                   ERROR(29): Symbol 'x' is already declared at line 28.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P if.c-                                                                                                           ./c- -P if.c-
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Child: 1 Assign: <= of type int [line: 6]                                                                           . . Child: 1 Assign: <= of type int [line: 6]
. . . Child: 0 Id: x of type int [line: 6]                                                                              . . . Child: 0 Id: x of type int [line: 6]
. . . Child: 1 Const 0 of type int [line: 6]                                                                            . . . Child: 1 Const 0 of type int [line: 6]
. . Sibling: 1 If [line: 8]                                                                                             . . Sibling: 1 If [line: 8]
. . . Child: 0 Const false of type bool [line: 8]                                                                       . . . Child: 0 Const false of type bool [line: 8]
. . . Child: 1 Assign: ++ of type int [line: 8]                                                                         . . . Child: 1 Assign: ++ of type int [line: 8]
. . . . Child: 0 Id: x of type int [line: 8]                                                                            . . . . Child: 0 Id: x of type int [line: 8]
. . Sibling: 2 If [line: 10]                                                                                            . . Sibling: 2 If [line: 10]
. . . Child: 0 Op: < of type bool [line: 10]                                                                            . . . Child: 0 Op: < of type bool [line: 10]
. . . . Child: 0 Id: x of type int [line: 10]                                                                           . . . . Child: 0 Id: x of type int [line: 10]
. . . . Child: 1 Const 10 of type int [line: 10]                                                                        . . . . Child: 1 Const 10 of type int [line: 10]
. . . Child: 1 Assign: ++ of type int [line: 10]                                                                        . . . Child: 1 Assign: ++ of type int [line: 10]
. . . . Child: 0 Id: x of type int [line: 10]                                                                           . . . . Child: 0 Id: x of type int [line: 10]
. . . Child: 2 Assign: -- of type int [line: 11]                                                                        . . . Child: 2 Assign: -- of type int [line: 11]
. . . . Child: 0 Id: x of type int [line: 11]                                                                           . . . . Child: 0 Id: x of type int [line: 11]
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P ifNest.c-                                                                                                       ./c- -P ifNest.c-
WARNING(6): Variable 'x' may be uninitialized when used here.                                                           WARNING(6): Variable 'x' may be uninitialized when used here.
WARNING(8): Variable 'y' may be uninitialized when used here.                                                           WARNING(8): Variable 'y' may be uninitialized when used here.
WARNING(11): Variable 'z' may be uninitialized when used here.                                                          WARNING(11): Variable 'z' may be uninitialized when used here.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Sibling: 1 Var: y of type int [line: 4]                                                                             . . Sibling: 1 Var: y of type int [line: 4]
. . Sibling: 2 Var: z of type int [line: 4]                                                                             . . Sibling: 2 Var: z of type int [line: 4]
. . Child: 1 If [line: 6]                                                                                               . . Child: 1 If [line: 6]
. . . Child: 0 Op: !< of type bool [line: 6]                                                                            . . . Child: 0 Op: !< of type bool [line: 6]
. . . . Child: 0 Id: x of type int [line: 6]                                                                            . . . . Child: 0 Id: x of type int [line: 6]
. . . . Child: 1 Const 0 of type int [line: 6]                                                                          . . . . Child: 1 Const 0 of type int [line: 6]
. . . Child: 1 If [line: 7]                                                                                             . . . Child: 1 If [line: 7]
. . . . Child: 0 Const true of type bool [line: 7]                                                                      . . . . Child: 0 Const true of type bool [line: 7]
. . . . Child: 1 Id: x of type int [line: 7]                                                                            . . . . Child: 1 Id: x of type int [line: 7]
. . . . Child: 2 Id: y of type int [line: 8]                                                                            . . . . Child: 2 Id: y of type int [line: 8]
. . Sibling: 1 Const 111 of type int [line: 9]                                                                          . . Sibling: 1 Const 111 of type int [line: 9]
. . Sibling: 2 If [line: 10]                                                                                            . . Sibling: 2 If [line: 10]
. . . Child: 0 Op: !< of type bool [line: 10]                                                                           . . . Child: 0 Op: !< of type bool [line: 10]
. . . . Child: 0 Id: y of type int [line: 10]                                                                           . . . . Child: 0 Id: y of type int [line: 10]
. . . . Child: 1 Const 0 of type int [line: 10]                                                                         . . . . Child: 1 Const 0 of type int [line: 10]
. . . Child: 1 Id: y of type int [line: 10]                                                                             . . . Child: 1 Id: y of type int [line: 10]
. . . Child: 2 If [line: 11]                                                                                            . . . Child: 2 If [line: 11]
. . . . Child: 0 Const true of type bool [line: 11]                                                                     . . . . Child: 0 Const true of type bool [line: 11]
. . . . Child: 1 Id: z of type int [line: 11]                                                                           . . . . Child: 1 Id: z of type int [line: 11]
. . Sibling: 3 Const 222 of type int [line: 12]                                                                         . . Sibling: 3 Const 222 of type int [line: 12]
. . Sibling: 4 If [line: 13]                                                                                            . . Sibling: 4 If [line: 13]
. . . Child: 0 Op: !< of type bool [line: 13]                                                                           . . . Child: 0 Op: !< of type bool [line: 13]
. . . . Child: 0 Id: y of type int [line: 13]                                                                           . . . . Child: 0 Id: y of type int [line: 13]
. . . . Child: 1 Const 0 of type int [line: 13]                                                                         . . . . Child: 1 Const 0 of type int [line: 13]
. . . Child: 1 Id: y of type int [line: 13]                                                                             . . . Child: 1 Id: y of type int [line: 13]
. . . Child: 2 If [line: 14]                                                                                            . . . Child: 2 If [line: 14]
. . . . Child: 0 Const true of type bool [line: 14]                                                                     . . . . Child: 0 Const true of type bool [line: 14]
. . . . Child: 1 Id: z of type int [line: 14]                                                                           . . . . Child: 1 Id: z of type int [line: 14]
. . . . Child: 2 Id: x of type int [line: 15]                                                                           . . . . Child: 2 Id: x of type int [line: 15]
. . Sibling: 5 Const 333 of type int [line: 16]                                                                         . . Sibling: 5 Const 333 of type int [line: 16]
. . Sibling: 6 If [line: 17]                                                                                            . . Sibling: 6 If [line: 17]
. . . Child: 0 Op: !< of type bool [line: 17]                                                                           . . . Child: 0 Op: !< of type bool [line: 17]
. . . . Child: 0 Id: x of type int [line: 17]                                                                           . . . . Child: 0 Id: x of type int [line: 17]
. . . . Child: 1 Const 0 of type int [line: 17]                                                                         . . . . Child: 1 Const 0 of type int [line: 17]
. . . Child: 1 If [line: 17]                                                                                            . . . Child: 1 If [line: 17]
. . . . Child: 0 Const true of type bool [line: 17]                                                                     . . . . Child: 0 Const true of type bool [line: 17]
. . . . Child: 1 Id: x of type int [line: 17]                                                                           . . . . Child: 1 Id: x of type int [line: 17]
. . . . Child: 2 Id: y of type int [line: 18]                                                                           . . . . Child: 2 Id: y of type int [line: 18]
. . . Child: 2 Id: z of type int [line: 19]                                                                             . . . Child: 2 Id: z of type int [line: 19]
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P init2.c-                                                                                                        ./c- -P init2.c-
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
ERROR(13): Symbol 'output' is not declared.                                                                             ERROR(13): Symbol 'output' is not declared.
WARNING(13): Variable 'b' may be uninitialized when used here.                                                          WARNING(13): Variable 'b' may be uninitialized when used here.
ERROR(14): Symbol 'output' is not declared.                                                                             ERROR(14): Symbol 'output' is not declared.
ERROR(15): Symbol 'outnl' is not declared.                                                                              ERROR(15): Symbol 'outnl' is not declared.
ERROR(17): Symbol 'output' is not declared.                                                                             ERROR(17): Symbol 'output' is not declared.
ERROR(18): Symbol 'output' is not declared.                                                                             ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.                                                                             ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'outnl' is not declared.                                                                              ERROR(20): Symbol 'outnl' is not declared.
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 8                                                                                                     Number of errors: 8

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P init3.c-                                                                                                        ./c- -P init3.c-
ERROR(10): Symbol 'output' is not declared.                                                                             ERROR(10): Symbol 'output' is not declared.
ERROR(11): Symbol 'output' is not declared.                                                                             ERROR(11): Symbol 'output' is not declared.
ERROR(12): Symbol 'output' is not declared.                                                                             ERROR(12): Symbol 'output' is not declared.
ERROR(13): Symbol 'outputb' is not declared.                                                                            ERROR(13): Symbol 'outputb' is not declared.
ERROR(14): Symbol 'outputc' is not declared.                                                                            ERROR(14): Symbol 'outputc' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P init4.c-                                                                                                        ./c- -P init4.c-
WARNING(4): The variable 'y' seems not to be used.                                                                      WARNING(4): The variable 'y' seems not to be used.
WARNING(5): The variable 'roll' seems not to be used.                                                                   WARNING(5): The variable 'roll' seems not to be used.
Func: main returns type int [line: 1]                                                                                   Func: main returns type int [line: 1]
. Child: 1 Compound [line: 2]                                                                                           . Child: 1 Compound [line: 2]
. . Child: 0 Var: x of type int [line: 3]                                                                               . . Child: 0 Var: x of type int [line: 3]
. . . Child: 0 Op: * of type int [line: 3]                                                                              . . . Child: 0 Op: * of type int [line: 3]
. . . . Child: 0 Const 23 of type int [line: 3]                                                                         . . . . Child: 0 Const 23 of type int [line: 3]
. . . . Child: 1 Const 3 of type int [line: 3]                                                                          . . . . Child: 1 Const 3 of type int [line: 3]
. . Sibling: 1 Var: y of type int [line: 4]                                                                             . . Sibling: 1 Var: y of type int [line: 4]
. . . Child: 0 Id: x of type int [line: 4]                                                                              . . . Child: 0 Id: x of type int [line: 4]
. . Sibling: 2 Var: roll of type int [line: 5]                                                                          . . Sibling: 2 Var: roll of type int [line: 5]
. . . Child: 0 Op: ? of type int [line: 5]                                                                              . . . Child: 0 Op: ? of type int [line: 5]
. . . . Child: 0 Const 6 of type int [line: 5]                                                                          . . . . Child: 0 Const 6 of type int [line: 5]
. . Child: 1 Const 333 of type int [line: 6]                                                                            . . Child: 1 Const 333 of type int [line: 6]
. . Sibling: 1 Const 'z' of type char [line: 7]                                                                         . . Sibling: 1 Const 'z' of type char [line: 7]
. . Sibling: 2 Const true of type bool [line: 8]                                                                        . . Sibling: 2 Const true of type bool [line: 8]
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P init.c-                                                                                                         ./c- -P init.c-
WARNING(8): The variable 'b' seems not to be used.                                                                      WARNING(8): The variable 'b' seems not to be used.
WARNING(9): The variable 'y' seems not to be used.                                                                      WARNING(9): The variable 'y' seems not to be used.
WARNING(10): The variable 'c' seems not to be used.                                                                     WARNING(10): The variable 'c' seems not to be used.
Var: a is array of type int [line: 3]                                                                                   Var: a is array of type int [line: 3]
Sibling: 1 Var: x of type int [line: 4]                                                                                 Sibling: 1 Var: x of type int [line: 4]
. Child: 0 Const 666 of type int [line: 4]                                                                              . Child: 0 Const 666 of type int [line: 4]
Sibling: 2 Func: main returns type void [line: 6]                                                                       Sibling: 2 Func: main returns type void [line: 6]
. Child: 1 Compound [line: 7]                                                                                           . Child: 1 Compound [line: 7]
. . Child: 0 Var: b is array of type int [line: 8]                                                                      . . Child: 0 Var: b is array of type int [line: 8]
. . Sibling: 1 Var: y of type int [line: 9]                                                                             . . Sibling: 1 Var: y of type int [line: 9]
. . . Child: 0 Const 777 of type int [line: 9]                                                                          . . . Child: 0 Const 777 of type int [line: 9]
. . Sibling: 2 Var: c is array of type int [line: 10]                                                                   . . Sibling: 2 Var: c is array of type int [line: 10]
. . Sibling: 3 Var: z of type int [line: 11]                                                                            . . Sibling: 3 Var: z of type int [line: 11]
. . . Child: 0 Const 888 of type int [line: 11]                                                                         . . . Child: 0 Const 888 of type int [line: 11]
. . Child: 1 Assign: <= of type int [line: 13]                                                                          . . Child: 1 Assign: <= of type int [line: 13]
. . . Child: 0 Id: z of type int [line: 13]                                                                             . . . Child: 0 Id: z of type int [line: 13]
. . . Child: 1 Const 999 of type int [line: 13]                                                                         . . . Child: 1 Const 999 of type int [line: 13]
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P mixedControl2.c-                                                                                                ./c- -P mixedControl2.c-
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 1 If [line: 4]                                                                                               . . Child: 1 If [line: 4]
. . . Child: 0 Const 111 of type int [line: 4]                                                                          . . . Child: 0 Const 111 of type int [line: 4]
. . . Child: 1 While [line: 5]                                                                                          . . . Child: 1 While [line: 5]
. . . . Child: 0 Const 222 of type int [line: 5]                                                                        . . . . Child: 0 Const 222 of type int [line: 5]
. . . . Child: 1 If [line: 6]                                                                                           . . . . Child: 1 If [line: 6]
. . . . . Child: 0 Const 333 of type int [line: 6]                                                                      . . . . . Child: 0 Const 333 of type int [line: 6]
. . . . . Child: 1 While [line: 7]                                                                                      . . . . . Child: 1 While [line: 7]
. . . . . . Child: 0 Const 444 of type int [line: 7]                                                                    . . . . . . Child: 0 Const 444 of type int [line: 7]
. . . . . . Child: 1 Const 555 of type int [line: 7]                                                                    . . . . . . Child: 1 Const 555 of type int [line: 7]
. . . . . Child: 2 Const 666 of type int [line: 8]                                                                      . . . . . Child: 2 Const 666 of type int [line: 8]
. . . Child: 2 Const 777 of type int [line: 9]                                                                          . . . Child: 2 Const 777 of type int [line: 9]
. . Sibling: 1 If [line: 11]                                                                                            . . Sibling: 1 If [line: 11]
. . . Child: 0 Const 111 of type int [line: 11]                                                                         . . . Child: 0 Const 111 of type int [line: 11]
. . . Child: 1 While [line: 12]                                                                                         . . . Child: 1 While [line: 12]
. . . . Child: 0 Const 222 of type int [line: 12]                                                                       . . . . Child: 0 Const 222 of type int [line: 12]
. . . . Child: 1 Const 333 of type int [line: 12]                                                                       . . . . Child: 1 Const 333 of type int [line: 12]
. . . Child: 2 While [line: 14]                                                                                         . . . Child: 2 While [line: 14]
. . . . Child: 0 Const 444 of type int [line: 14]                                                                       . . . . Child: 0 Const 444 of type int [line: 14]
. . . . Child: 1 Const 555 of type int [line: 14]                                                                       . . . . Child: 1 Const 555 of type int [line: 14]
. . Sibling: 2 If [line: 16]                                                                                            . . Sibling: 2 If [line: 16]
. . . Child: 0 Const 111 of type int [line: 16]                                                                         . . . Child: 0 Const 111 of type int [line: 16]
. . . Child: 1 While [line: 17]                                                                                         . . . Child: 1 While [line: 17]
. . . . Child: 0 Const 222 of type int [line: 17]                                                                       . . . . Child: 0 Const 222 of type int [line: 17]
. . . . Child: 1 While [line: 18]                                                                                       . . . . Child: 1 While [line: 18]
. . . . . Child: 0 Const 444 of type int [line: 18]                                                                     . . . . . Child: 0 Const 444 of type int [line: 18]
. . . . . Child: 1 Const 555 of type int [line: 18]                                                                     . . . . . Child: 1 Const 555 of type int [line: 18]
. . . Child: 2 Const 666 of type int [line: 19]                                                                         . . . Child: 2 Const 666 of type int [line: 19]
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P mixedControl3.c-                                                                                                ./c- -P mixedControl3.c-
WARNING(4): The variable 'x' seems not to be used.                                                                      WARNING(4): The variable 'x' seems not to be used.
WARNING(7): The variable 'x' seems not to be used.                                                                      WARNING(7): The variable 'x' seems not to be used.
WARNING(9): The variable 'x' seems not to be used.                                                                      WARNING(9): The variable 'x' seems not to be used.
                                                                                                                  >     WARNING(14): The variable 'x' seems not to be used.
WARNING(16): The variable 'x' seems not to be used.                                                                     WARNING(16): The variable 'x' seems not to be used.
WARNING(19): The variable 'x' seems not to be used.                                                                     WARNING(19): The variable 'x' seems not to be used.
WARNING(20): The variable 'x' seems not to be used.                                                                     WARNING(20): The variable 'x' seems not to be used.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Child: 1 If [line: 6]                                                                                               . . Child: 1 If [line: 6]
. . . Child: 0 Const 111 of type int [line: 6]                                                                          . . . Child: 0 Const 111 of type int [line: 6]
. . . Child: 1 For [line: 7]                                                                                            . . . Child: 1 For [line: 7]
. . . . Child: 0 Var: x of type int [line: 7]                                                                           . . . . Child: 0 Var: x of type int [line: 7]
. . . . Child: 1 Range [line: 7]                                                                                        . . . . Child: 1 Range [line: 7]
. . . . . Child: 0 Id: x of undefined type [line: 7]                                                                    . . . . . Child: 0 Id: x of undefined type [line: 7]
. . . . . Child: 1 Id: x of undefined type [line: 7]                                                                    . . . . . Child: 1 Id: x of undefined type [line: 7]
. . . . . Child: 2 Id: x of undefined type [line: 7]                                                                    . . . . . Child: 2 Id: x of undefined type [line: 7]
. . . . Child: 2 If [line: 8]                                                                                           . . . . Child: 2 If [line: 8]
. . . . . Child: 0 Const 333 of type int [line: 8]                                                                      . . . . . Child: 0 Const 333 of type int [line: 8]
. . . . . Child: 1 For [line: 9]                                                                                        . . . . . Child: 1 For [line: 9]
. . . . . . Child: 0 Var: x of type int [line: 9]                                                                       . . . . . . Child: 0 Var: x of type int [line: 9]
. . . . . . Child: 1 Range [line: 9]                                                                                    . . . . . . Child: 1 Range [line: 9]
. . . . . . . Child: 0 Const 1 of type int [line: 9]                                                                    . . . . . . . Child: 0 Const 1 of type int [line: 9]
. . . . . . . Child: 1 Id: x of undefined type [line: 9]                                                                . . . . . . . Child: 1 Id: x of undefined type [line: 9]
. . . . . . Child: 2 Const 555 of type int [line: 9]                                                                    . . . . . . Child: 2 Const 555 of type int [line: 9]
. . . . . Child: 2 Const 666 of type int [line: 10]                                                                     . . . . . Child: 2 Const 666 of type int [line: 10]
. . . Child: 2 Const 777 of type int [line: 11]                                                                         . . . Child: 2 Const 777 of type int [line: 11]
. . Sibling: 1 If [line: 13]                                                                                            . . Sibling: 1 If [line: 13]
. . . Child: 0 Const 111 of type int [line: 13]                                                                         . . . Child: 0 Const 111 of type int [line: 13]
. . . Child: 1 For [line: 14]                                                                                           . . . Child: 1 For [line: 14]
. . . . Child: 0 Var: x of type int [line: 14]                                                                          . . . . Child: 0 Var: x of type int [line: 14]
. . . . Child: 1 Range [line: 14]                                                                                       . . . . Child: 1 Range [line: 14]
. . . . . Child: 0 Const 1 of type int [line: 14]                                                                       . . . . . Child: 0 Const 1 of type int [line: 14]
. . . . . Child: 1 Const 2 of type int [line: 14]                                                                       . . . . . Child: 1 Const 2 of type int [line: 14]
. . . . . Child: 2 Op: * of undefined type [line: 14]                                                                   . . . . . Child: 2 Op: * of undefined type [line: 14]
. . . . . . Child: 0 Id: x of undefined type [line: 14]                                                                 . . . . . . Child: 0 Id: x of undefined type [line: 14]
. . . . . . Child: 1 Id: x of undefined type [line: 14]                                                                 . . . . . . Child: 1 Id: x of undefined type [line: 14]
. . . . Child: 2 Const 333 of type int [line: 14]                                                                       . . . . Child: 2 Const 333 of type int [line: 14]
. . . Child: 2 For [line: 16]                                                                                           . . . Child: 2 For [line: 16]
. . . . Child: 0 Var: x of type int [line: 16]                                                                          . . . . Child: 0 Var: x of type int [line: 16]
. . . . Child: 1 Range [line: 16]                                                                                       . . . . Child: 1 Range [line: 16]
. . . . . Child: 0 Const 1 of type int [line: 16]                                                                       . . . . . Child: 0 Const 1 of type int [line: 16]
. . . . . Child: 1 Id: x of undefined type [line: 16]                                                                   . . . . . Child: 1 Id: x of undefined type [line: 16]
. . . . Child: 2 Const 555 of type int [line: 16]                                                                       . . . . Child: 2 Const 555 of type int [line: 16]
. . Sibling: 2 If [line: 18]                                                                                            . . Sibling: 2 If [line: 18]
. . . Child: 0 Const 111 of type int [line: 18]                                                                         . . . Child: 0 Const 111 of type int [line: 18]
. . . Child: 1 For [line: 19]                                                                                           . . . Child: 1 For [line: 19]
. . . . Child: 0 Var: x of type int [line: 19]                                                                          . . . . Child: 0 Var: x of type int [line: 19]
. . . . Child: 1 Range [line: 19]                                                                                       . . . . Child: 1 Range [line: 19]
. . . . . Child: 0 Const 1 of type int [line: 19]                                                                       . . . . . Child: 0 Const 1 of type int [line: 19]
. . . . . Child: 1 Const 10 of type int [line: 19]                                                                      . . . . . Child: 1 Const 10 of type int [line: 19]
. . . . Child: 2 For [line: 20]                                                                                         . . . . Child: 2 For [line: 20]
. . . . . Child: 0 Var: x of type int [line: 20]                                                                        . . . . . Child: 0 Var: x of type int [line: 20]
. . . . . Child: 1 Range [line: 20]                                                                                     . . . . . Child: 1 Range [line: 20]
. . . . . . Child: 0 Id: x of undefined type [line: 20]                                                                 . . . . . . Child: 0 Id: x of undefined type [line: 20]
. . . . . . Child: 1 Const 10 of type int [line: 20]                                                                    . . . . . . Child: 1 Const 10 of type int [line: 20]
. . . . . Child: 2 Const 555 of type int [line: 20]                                                                     . . . . . Child: 2 Const 555 of type int [line: 20]
. . . Child: 2 Const 666 of type int [line: 21]                                                                         . . . Child: 2 Const 666 of type int [line: 21]
Number of warnings: 6                                                                                             |     Number of warnings: 7
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P mixedControl.c-                                                                                                 ./c- -P mixedControl.c-
WARNING(6): Variable 'x' may be uninitialized when used here.                                                           WARNING(6): Variable 'x' may be uninitialized when used here.
WARNING(8): Variable 'y' may be uninitialized when used here.                                                           WARNING(8): Variable 'y' may be uninitialized when used here.
WARNING(11): Variable 'z' may be uninitialized when used here.                                                          WARNING(11): Variable 'z' may be uninitialized when used here.
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Sibling: 1 Var: y of type int [line: 4]                                                                             . . Sibling: 1 Var: y of type int [line: 4]
. . Sibling: 2 Var: z of type int [line: 4]                                                                             . . Sibling: 2 Var: z of type int [line: 4]
. . Child: 1 If [line: 6]                                                                                               . . Child: 1 If [line: 6]
. . . Child: 0 Op: !< of type bool [line: 6]                                                                            . . . Child: 0 Op: !< of type bool [line: 6]
. . . . Child: 0 Id: x of type int [line: 6]                                                                            . . . . Child: 0 Id: x of type int [line: 6]
. . . . Child: 1 Const 0 of type int [line: 6]                                                                          . . . . Child: 1 Const 0 of type int [line: 6]
. . . Child: 1 While [line: 7]                                                                                          . . . Child: 1 While [line: 7]
. . . . Child: 0 Const true of type bool [line: 7]                                                                      . . . . Child: 0 Const true of type bool [line: 7]
. . . . Child: 1 Id: x of type int [line: 7]                                                                            . . . . Child: 1 Id: x of type int [line: 7]
. . . Child: 2 Id: y of type int [line: 8]                                                                              . . . Child: 2 Id: y of type int [line: 8]
. . Sibling: 1 Const 111 of type int [line: 9]                                                                          . . Sibling: 1 Const 111 of type int [line: 9]
. . Sibling: 2 If [line: 10]                                                                                            . . Sibling: 2 If [line: 10]
. . . Child: 0 Op: !< of type bool [line: 10]                                                                           . . . Child: 0 Op: !< of type bool [line: 10]
. . . . Child: 0 Id: y of type int [line: 10]                                                                           . . . . Child: 0 Id: y of type int [line: 10]
. . . . Child: 1 Const 0 of type int [line: 10]                                                                         . . . . Child: 1 Const 0 of type int [line: 10]
. . . Child: 1 Id: y of type int [line: 10]                                                                             . . . Child: 1 Id: y of type int [line: 10]
. . . Child: 2 While [line: 11]                                                                                         . . . Child: 2 While [line: 11]
. . . . Child: 0 Const true of type bool [line: 11]                                                                     . . . . Child: 0 Const true of type bool [line: 11]
. . . . Child: 1 Id: z of type int [line: 11]                                                                           . . . . Child: 1 Id: z of type int [line: 11]
. . Sibling: 3 Const 222 of type int [line: 12]                                                                         . . Sibling: 3 Const 222 of type int [line: 12]
. . Sibling: 4 If [line: 13]                                                                                            . . Sibling: 4 If [line: 13]
. . . Child: 0 Op: !< of type bool [line: 13]                                                                           . . . Child: 0 Op: !< of type bool [line: 13]
. . . . Child: 0 Id: y of type int [line: 13]                                                                           . . . . Child: 0 Id: y of type int [line: 13]
. . . . Child: 1 Const 0 of type int [line: 13]                                                                         . . . . Child: 1 Const 0 of type int [line: 13]
. . . Child: 1 Id: y of type int [line: 13]                                                                             . . . Child: 1 Id: y of type int [line: 13]
. . Sibling: 5 While [line: 14]                                                                                         . . Sibling: 5 While [line: 14]
. . . Child: 0 Const true of type bool [line: 14]                                                                       . . . Child: 0 Const true of type bool [line: 14]
. . . Child: 1 If [line: 15]                                                                                            . . . Child: 1 If [line: 15]
. . . . Child: 0 Const true of type bool [line: 15]                                                                     . . . . Child: 0 Const true of type bool [line: 15]
. . . . Child: 1 Id: z of type int [line: 15]                                                                           . . . . Child: 1 Id: z of type int [line: 15]
. . . . Child: 2 Id: x of type int [line: 16]                                                                           . . . . Child: 2 Id: x of type int [line: 16]
. . Sibling: 6 Const 333 of type int [line: 17]                                                                         . . Sibling: 6 Const 333 of type int [line: 17]
. . Sibling: 7 If [line: 18]                                                                                            . . Sibling: 7 If [line: 18]
. . . Child: 0 Op: !< of type bool [line: 18]                                                                           . . . Child: 0 Op: !< of type bool [line: 18]
. . . . Child: 0 Id: x of type int [line: 18]                                                                           . . . . Child: 0 Id: x of type int [line: 18]
. . . . Child: 1 Const 0 of type int [line: 18]                                                                         . . . . Child: 1 Const 0 of type int [line: 18]
. . . Child: 1 While [line: 19]                                                                                         . . . Child: 1 While [line: 19]
. . . . Child: 0 Const true of type bool [line: 19]                                                                     . . . . Child: 0 Const true of type bool [line: 19]
. . . . Child: 1 If [line: 20]                                                                                          . . . . Child: 1 If [line: 20]
. . . . . Child: 0 Const true of type bool [line: 20]                                                                   . . . . . Child: 0 Const true of type bool [line: 20]
. . . . . Child: 1 Id: x of type int [line: 20]                                                                         . . . . . Child: 1 Id: x of type int [line: 20]
. . . . . Child: 2 Id: y of type int [line: 21]                                                                         . . . . . Child: 2 Id: y of type int [line: 21]
. . . Child: 2 Id: z of type int [line: 22]                                                                             . . . Child: 2 Id: z of type int [line: 22]
. . Sibling: 8 Const 444 of type int [line: 23]                                                                         . . Sibling: 8 Const 444 of type int [line: 23]
. . Sibling: 9 If [line: 24]                                                                                            . . Sibling: 9 If [line: 24]
. . . Child: 0 Op: !< of type bool [line: 24]                                                                           . . . Child: 0 Op: !< of type bool [line: 24]
. . . . Child: 0 Id: x of type int [line: 24]                                                                           . . . . Child: 0 Id: x of type int [line: 24]
. . . . Child: 1 Const 0 of type int [line: 24]                                                                         . . . . Child: 1 Const 0 of type int [line: 24]
. . . Child: 1 Id: z of type int [line: 24]                                                                             . . . Child: 1 Id: z of type int [line: 24]
. . . Child: 2 If [line: 26]                                                                                            . . . Child: 2 If [line: 26]
. . . . Child: 0 Const true of type bool [line: 26]                                                                     . . . . Child: 0 Const true of type bool [line: 26]
. . . . Child: 1 While [line: 27]                                                                                       . . . . Child: 1 While [line: 27]
. . . . . Child: 0 Const true of type bool [line: 27]                                                                   . . . . . Child: 0 Const true of type bool [line: 27]
. . . . . Child: 1 If [line: 28]                                                                                        . . . . . Child: 1 If [line: 28]
. . . . . . Child: 0 Const true of type bool [line: 28]                                                                 . . . . . . Child: 0 Const true of type bool [line: 28]
. . . . . . Child: 1 Id: x of type int [line: 28]                                                                       . . . . . . Child: 1 Id: x of type int [line: 28]
. . . . . . Child: 2 Id: y of type int [line: 29]                                                                       . . . . . . Child: 2 Id: y of type int [line: 29]
. . . . Child: 2 Id: z of type int [line: 30]                                                                           . . . . Child: 2 Id: z of type int [line: 30]
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P nest.c-                                                                                                         ./c- -P nest.c-
ERROR(18): Symbol 'output' is not declared.                                                                             ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.                                                                             ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'output' is not declared.                                                                             ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.                                                                             ERROR(21): Symbol 'output' is not declared.
ERROR(22): Symbol 'output' is not declared.                                                                             ERROR(22): Symbol 'output' is not declared.
ERROR(23): Symbol 'outnl' is not declared.                                                                              ERROR(23): Symbol 'outnl' is not declared.
ERROR(43): Symbol 'output' is not declared.                                                                             ERROR(43): Symbol 'output' is not declared.
ERROR(44): Symbol 'output' is not declared.                                                                             ERROR(44): Symbol 'output' is not declared.
ERROR(45): Symbol 'output' is not declared.                                                                             ERROR(45): Symbol 'output' is not declared.
ERROR(46): Symbol 'output' is not declared.                                                                             ERROR(46): Symbol 'output' is not declared.
ERROR(47): Symbol 'output' is not declared.                                                                             ERROR(47): Symbol 'output' is not declared.
ERROR(48): Symbol 'outnl' is not declared.                                                                              ERROR(48): Symbol 'outnl' is not declared.
ERROR(58): Symbol 'output' is not declared.                                                                             ERROR(58): Symbol 'output' is not declared.
ERROR(59): Symbol 'output' is not declared.                                                                             ERROR(59): Symbol 'output' is not declared.
ERROR(60): Symbol 'output' is not declared.                                                                             ERROR(60): Symbol 'output' is not declared.
ERROR(61): Symbol 'output' is not declared.                                                                             ERROR(61): Symbol 'output' is not declared.
ERROR(62): Symbol 'output' is not declared.                                                                             ERROR(62): Symbol 'output' is not declared.
ERROR(63): Symbol 'outnl' is not declared.                                                                              ERROR(63): Symbol 'outnl' is not declared.
ERROR(70): Symbol 'output' is not declared.                                                                             ERROR(70): Symbol 'output' is not declared.
ERROR(71): Symbol 'output' is not declared.                                                                             ERROR(71): Symbol 'output' is not declared.
ERROR(72): Symbol 'output' is not declared.                                                                             ERROR(72): Symbol 'output' is not declared.
ERROR(73): Symbol 'output' is not declared.                                                                             ERROR(73): Symbol 'output' is not declared.
ERROR(74): Symbol 'output' is not declared.                                                                             ERROR(74): Symbol 'output' is not declared.
ERROR(75): Symbol 'outnl' is not declared.                                                                              ERROR(75): Symbol 'outnl' is not declared.
ERROR(77): Symbol 'output' is not declared.                                                                             ERROR(77): Symbol 'output' is not declared.
ERROR(78): Symbol 'output' is not declared.                                                                             ERROR(78): Symbol 'output' is not declared.
ERROR(79): Symbol 'output' is not declared.                                                                             ERROR(79): Symbol 'output' is not declared.
ERROR(80): Symbol 'output' is not declared.                                                                             ERROR(80): Symbol 'output' is not declared.
ERROR(81): Symbol 'output' is not declared.                                                                             ERROR(81): Symbol 'output' is not declared.
ERROR(82): Symbol 'outnl' is not declared.                                                                              ERROR(82): Symbol 'outnl' is not declared.
ERROR(89): Symbol 'output' is not declared.                                                                             ERROR(89): Symbol 'output' is not declared.
ERROR(90): Symbol 'output' is not declared.                                                                             ERROR(90): Symbol 'output' is not declared.
ERROR(91): Symbol 'output' is not declared.                                                                             ERROR(91): Symbol 'output' is not declared.
ERROR(92): Symbol 'output' is not declared.                                                                             ERROR(92): Symbol 'output' is not declared.
ERROR(93): Symbol 'output' is not declared.                                                                             ERROR(93): Symbol 'output' is not declared.
ERROR(94): Symbol 'outnl' is not declared.                                                                              ERROR(94): Symbol 'outnl' is not declared.
ERROR(97): Symbol 'output' is not declared.                                                                             ERROR(97): Symbol 'output' is not declared.
ERROR(98): Symbol 'output' is not declared.                                                                             ERROR(98): Symbol 'output' is not declared.
ERROR(99): Symbol 'output' is not declared.                                                                             ERROR(99): Symbol 'output' is not declared.
ERROR(100): Symbol 'output' is not declared.                                                                            ERROR(100): Symbol 'output' is not declared.
ERROR(101): Symbol 'output' is not declared.                                                                            ERROR(101): Symbol 'output' is not declared.
ERROR(102): Symbol 'outnl' is not declared.                                                                             ERROR(102): Symbol 'outnl' is not declared.
ERROR(106): Symbol 'output' is not declared.                                                                            ERROR(106): Symbol 'output' is not declared.
ERROR(107): Symbol 'output' is not declared.                                                                            ERROR(107): Symbol 'output' is not declared.
ERROR(108): Symbol 'output' is not declared.                                                                            ERROR(108): Symbol 'output' is not declared.
ERROR(109): Symbol 'output' is not declared.                                                                            ERROR(109): Symbol 'output' is not declared.
ERROR(110): Symbol 'output' is not declared.                                                                            ERROR(110): Symbol 'output' is not declared.
ERROR(111): Symbol 'outnl' is not declared.                                                                             ERROR(111): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 48                                                                                                    Number of errors: 48

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P ops.c-                                                                                                          ./c- -P ops.c-
ERROR(25): Symbol 'outputb' is not declared.                                                                            ERROR(25): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.                                                                            ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outputb' is not declared.                                                                            ERROR(27): Symbol 'outputb' is not declared.
ERROR(28): Symbol 'outnl' is not declared.                                                                              ERROR(28): Symbol 'outnl' is not declared.
ERROR(30): Symbol 'outputb' is not declared.                                                                            ERROR(30): Symbol 'outputb' is not declared.
ERROR(31): Symbol 'outputb' is not declared.                                                                            ERROR(31): Symbol 'outputb' is not declared.
ERROR(32): Symbol 'outputb' is not declared.                                                                            ERROR(32): Symbol 'outputb' is not declared.
ERROR(33): Symbol 'outnl' is not declared.                                                                              ERROR(33): Symbol 'outnl' is not declared.
ERROR(35): Symbol 'outputb' is not declared.                                                                            ERROR(35): Symbol 'outputb' is not declared.
ERROR(36): Symbol 'outputb' is not declared.                                                                            ERROR(36): Symbol 'outputb' is not declared.
ERROR(37): Symbol 'outputb' is not declared.                                                                            ERROR(37): Symbol 'outputb' is not declared.
ERROR(38): Symbol 'outnl' is not declared.                                                                              ERROR(38): Symbol 'outnl' is not declared.
ERROR(40): Symbol 'outputb' is not declared.                                                                            ERROR(40): Symbol 'outputb' is not declared.
ERROR(41): Symbol 'outputb' is not declared.                                                                            ERROR(41): Symbol 'outputb' is not declared.
ERROR(42): Symbol 'outputb' is not declared.                                                                            ERROR(42): Symbol 'outputb' is not declared.
ERROR(43): Symbol 'outnl' is not declared.                                                                              ERROR(43): Symbol 'outnl' is not declared.
ERROR(45): Symbol 'outputb' is not declared.                                                                            ERROR(45): Symbol 'outputb' is not declared.
ERROR(46): Symbol 'outputb' is not declared.                                                                            ERROR(46): Symbol 'outputb' is not declared.
ERROR(47): Symbol 'outputb' is not declared.                                                                            ERROR(47): Symbol 'outputb' is not declared.
ERROR(48): Symbol 'outnl' is not declared.                                                                              ERROR(48): Symbol 'outnl' is not declared.
ERROR(50): Symbol 'outputb' is not declared.                                                                            ERROR(50): Symbol 'outputb' is not declared.
ERROR(51): Symbol 'outputb' is not declared.                                                                            ERROR(51): Symbol 'outputb' is not declared.
ERROR(52): Symbol 'outputb' is not declared.                                                                            ERROR(52): Symbol 'outputb' is not declared.
ERROR(53): Symbol 'outputb' is not declared.                                                                            ERROR(53): Symbol 'outputb' is not declared.
ERROR(54): Symbol 'outnl' is not declared.                                                                              ERROR(54): Symbol 'outnl' is not declared.
ERROR(56): Symbol 'outputb' is not declared.                                                                            ERROR(56): Symbol 'outputb' is not declared.
ERROR(57): Symbol 'outputb' is not declared.                                                                            ERROR(57): Symbol 'outputb' is not declared.
ERROR(58): Symbol 'outputb' is not declared.                                                                            ERROR(58): Symbol 'outputb' is not declared.
ERROR(59): Symbol 'outputb' is not declared.                                                                            ERROR(59): Symbol 'outputb' is not declared.
ERROR(60): Symbol 'outnl' is not declared.                                                                              ERROR(60): Symbol 'outnl' is not declared.
ERROR(62): Symbol 'outputb' is not declared.                                                                            ERROR(62): Symbol 'outputb' is not declared.
ERROR(63): Symbol 'outputb' is not declared.                                                                            ERROR(63): Symbol 'outputb' is not declared.
ERROR(64): Symbol 'outputb' is not declared.                                                                            ERROR(64): Symbol 'outputb' is not declared.
ERROR(65): Symbol 'outputb' is not declared.                                                                            ERROR(65): Symbol 'outputb' is not declared.
ERROR(66): Symbol 'outnl' is not declared.                                                                              ERROR(66): Symbol 'outnl' is not declared.
ERROR(68): Symbol 'outputb' is not declared.                                                                            ERROR(68): Symbol 'outputb' is not declared.
ERROR(69): Symbol 'outputb' is not declared.                                                                            ERROR(69): Symbol 'outputb' is not declared.
ERROR(70): Symbol 'outputb' is not declared.                                                                            ERROR(70): Symbol 'outputb' is not declared.
ERROR(71): Symbol 'outputb' is not declared.                                                                            ERROR(71): Symbol 'outputb' is not declared.
ERROR(72): Symbol 'outnl' is not declared.                                                                              ERROR(72): Symbol 'outnl' is not declared.
ERROR(74): Symbol 'output' is not declared.                                                                             ERROR(74): Symbol 'output' is not declared.
ERROR(75): Symbol 'output' is not declared.                                                                             ERROR(75): Symbol 'output' is not declared.
ERROR(76): Symbol 'outnl' is not declared.                                                                              ERROR(76): Symbol 'outnl' is not declared.
ERROR(78): Symbol 'output' is not declared.                                                                             ERROR(78): Symbol 'output' is not declared.
ERROR(79): Symbol 'output' is not declared.                                                                             ERROR(79): Symbol 'output' is not declared.
ERROR(80): Symbol 'outnl' is not declared.                                                                              ERROR(80): Symbol 'outnl' is not declared.
ERROR(83): Symbol 'output' is not declared.                                                                             ERROR(83): Symbol 'output' is not declared.
ERROR(84): Symbol 'output' is not declared.                                                                             ERROR(84): Symbol 'output' is not declared.
ERROR(85): Symbol 'output' is not declared.                                                                             ERROR(85): Symbol 'output' is not declared.
ERROR(86): Symbol 'output' is not declared.                                                                             ERROR(86): Symbol 'output' is not declared.
ERROR(87): Symbol 'output' is not declared.                                                                             ERROR(87): Symbol 'output' is not declared.
ERROR(88): Symbol 'outnl' is not declared.                                                                              ERROR(88): Symbol 'outnl' is not declared.
ERROR(90): Symbol 'output' is not declared.                                                                             ERROR(90): Symbol 'output' is not declared.
ERROR(91): Symbol 'output' is not declared.                                                                             ERROR(91): Symbol 'output' is not declared.
ERROR(92): Symbol 'output' is not declared.                                                                             ERROR(92): Symbol 'output' is not declared.
ERROR(93): Symbol 'outnl' is not declared.                                                                              ERROR(93): Symbol 'outnl' is not declared.
ERROR(95): Symbol 'output' is not declared.                                                                             ERROR(95): Symbol 'output' is not declared.
ERROR(96): Symbol 'output' is not declared.                                                                             ERROR(96): Symbol 'output' is not declared.
ERROR(97): Symbol 'output' is not declared.                                                                             ERROR(97): Symbol 'output' is not declared.
ERROR(98): Symbol 'output' is not declared.                                                                             ERROR(98): Symbol 'output' is not declared.
ERROR(99): Symbol 'outnl' is not declared.                                                                              ERROR(99): Symbol 'outnl' is not declared.
ERROR(102): Symbol 'output' is not declared.                                                                            ERROR(102): Symbol 'output' is not declared.
ERROR(103): Symbol 'output' is not declared.                                                                            ERROR(103): Symbol 'output' is not declared.
ERROR(104): Symbol 'output' is not declared.                                                                            ERROR(104): Symbol 'output' is not declared.
ERROR(105): Symbol 'output' is not declared.                                                                            ERROR(105): Symbol 'output' is not declared.
ERROR(106): Symbol 'output' is not declared.                                                                            ERROR(106): Symbol 'output' is not declared.
ERROR(107): Symbol 'output' is not declared.                                                                            ERROR(107): Symbol 'output' is not declared.
ERROR(108): Symbol 'outnl' is not declared.                                                                             ERROR(108): Symbol 'outnl' is not declared.
ERROR(110): Symbol 'output' is not declared.                                                                            ERROR(110): Symbol 'output' is not declared.
ERROR(111): Symbol 'output' is not declared.                                                                            ERROR(111): Symbol 'output' is not declared.
ERROR(113): Symbol 'output' is not declared.                                                                            ERROR(113): Symbol 'output' is not declared.
ERROR(114): Symbol 'outnl' is not declared.                                                                             ERROR(114): Symbol 'outnl' is not declared.
ERROR(118): Symbol 'output' is not declared.                                                                            ERROR(118): Symbol 'output' is not declared.
ERROR(119): Symbol 'output' is not declared.                                                                            ERROR(119): Symbol 'output' is not declared.
ERROR(120): Symbol 'output' is not declared.                                                                            ERROR(120): Symbol 'output' is not declared.
ERROR(121): Symbol 'output' is not declared.                                                                            ERROR(121): Symbol 'output' is not declared.
ERROR(122): Symbol 'outnl' is not declared.                                                                             ERROR(122): Symbol 'outnl' is not declared.
ERROR(126): Symbol 'output' is not declared.                                                                            ERROR(126): Symbol 'output' is not declared.
ERROR(127): Symbol 'output' is not declared.                                                                            ERROR(127): Symbol 'output' is not declared.
ERROR(128): Symbol 'output' is not declared.                                                                            ERROR(128): Symbol 'output' is not declared.
ERROR(129): Symbol 'output' is not declared.                                                                            ERROR(129): Symbol 'output' is not declared.
ERROR(130): Symbol 'outnl' is not declared.                                                                             ERROR(130): Symbol 'outnl' is not declared.
ERROR(134): Symbol 'output' is not declared.                                                                            ERROR(134): Symbol 'output' is not declared.
ERROR(135): Symbol 'output' is not declared.                                                                            ERROR(135): Symbol 'output' is not declared.
ERROR(136): Symbol 'outnl' is not declared.                                                                             ERROR(136): Symbol 'outnl' is not declared.
ERROR(138): Symbol 'output' is not declared.                                                                            ERROR(138): Symbol 'output' is not declared.
ERROR(139): Symbol 'output' is not declared.                                                                            ERROR(139): Symbol 'output' is not declared.
ERROR(140): Symbol 'output' is not declared.                                                                            ERROR(140): Symbol 'output' is not declared.
ERROR(141): Symbol 'outnl' is not declared.                                                                             ERROR(141): Symbol 'outnl' is not declared.
ERROR(143): Symbol 'outputb' is not declared.                                                                           ERROR(143): Symbol 'outputb' is not declared.
ERROR(144): Symbol 'outputb' is not declared.                                                                           ERROR(144): Symbol 'outputb' is not declared.
ERROR(145): Symbol 'outputb' is not declared.                                                                           ERROR(145): Symbol 'outputb' is not declared.
ERROR(146): Symbol 'outnl' is not declared.                                                                             ERROR(146): Symbol 'outnl' is not declared.
ERROR(148): Symbol 'outputb' is not declared.                                                                           ERROR(148): Symbol 'outputb' is not declared.
ERROR(149): Symbol 'outputb' is not declared.                                                                           ERROR(149): Symbol 'outputb' is not declared.
ERROR(150): Symbol 'outputb' is not declared.                                                                           ERROR(150): Symbol 'outputb' is not declared.
ERROR(151): Symbol 'outputb' is not declared.                                                                           ERROR(151): Symbol 'outputb' is not declared.
ERROR(152): Symbol 'outputb' is not declared.                                                                           ERROR(152): Symbol 'outputb' is not declared.
ERROR(153): Symbol 'outputb' is not declared.                                                                           ERROR(153): Symbol 'outputb' is not declared.
ERROR(154): Symbol 'outputb' is not declared.                                                                           ERROR(154): Symbol 'outputb' is not declared.
ERROR(155): Symbol 'outputb' is not declared.                                                                           ERROR(155): Symbol 'outputb' is not declared.
ERROR(156): Symbol 'outputb' is not declared.                                                                           ERROR(156): Symbol 'outputb' is not declared.
ERROR(157): Symbol 'outputb' is not declared.                                                                           ERROR(157): Symbol 'outputb' is not declared.
ERROR(158): Symbol 'outputb' is not declared.                                                                           ERROR(158): Symbol 'outputb' is not declared.
ERROR(159): Symbol 'outputb' is not declared.                                                                           ERROR(159): Symbol 'outputb' is not declared.
ERROR(160): Symbol 'outputb' is not declared.                                                                           ERROR(160): Symbol 'outputb' is not declared.
ERROR(161): Symbol 'outnl' is not declared.                                                                             ERROR(161): Symbol 'outnl' is not declared.
ERROR(163): Symbol 'outputb' is not declared.                                                                           ERROR(163): Symbol 'outputb' is not declared.
ERROR(164): Symbol 'outputb' is not declared.                                                                           ERROR(164): Symbol 'outputb' is not declared.
ERROR(165): Symbol 'outnl' is not declared.                                                                             ERROR(165): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 110                                                                                                   Number of errors: 110

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P optype.c-                                                                                                       ./c- -P optype.c-
WARNING(7): Variable 'a' may be uninitialized when used here.                                                           WARNING(7): Variable 'a' may be uninitialized when used here.
ERROR(8): '<' requires operands of the same type but lhs is type int and rhs is type bool.                              ERROR(8): '<' requires operands of the same type but lhs is type int and rhs is type bool.
WARNING(8): Variable 'b' may be uninitialized when used here.                                                           WARNING(8): Variable 'b' may be uninitialized when used here.
ERROR(9): '<' requires operands of the same type but lhs is type int and rhs is type char.                              ERROR(9): '<' requires operands of the same type but lhs is type int and rhs is type char.
WARNING(9): Variable 'c' may be uninitialized when used here.                                                           WARNING(9): Variable 'c' may be uninitialized when used here.
ERROR(10): '<' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(10): '<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type char.                            ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(13): '<' requires operands of the same type but lhs is type char and rhs is type int.                             ERROR(13): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(14): '<' requires operands of the same type but lhs is type char and rhs is type bool.                            ERROR(14): '<' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(17): Symbol 'x' is not declared.                                                                                  ERROR(17): Symbol 'x' is not declared.
ERROR(18): Symbol 'x' is not declared.                                                                                  ERROR(18): Symbol 'x' is not declared.
ERROR(19): Symbol 'x' is not declared.                                                                                  ERROR(19): Symbol 'x' is not declared.
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 9                                                                                                     Number of errors: 9

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P overlapArray.c-                                                                                                 ./c- -P overlapArray.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
WARNING(2): The variable 'p' seems not to be used.                                                                      WARNING(2): The variable 'p' seems not to be used.
WARNING(4): The variable 'a' seems not to be used.                                                                      WARNING(4): The variable 'a' seems not to be used.
WARNING(6): The variable 'b' seems not to be used.                                                                      WARNING(6): The variable 'b' seems not to be used.
WARNING(9): The variable 'c' seems not to be used.                                                                      WARNING(9): The variable 'c' seems not to be used.
WARNING(13): The variable 'b' seems not to be used.                                                                     WARNING(13): The variable 'b' seems not to be used.
WARNING(16): The variable 'c' seems not to be used.                                                                     WARNING(16): The variable 'c' seems not to be used.
Number of warnings: 6                                                                                                   Number of warnings: 6
Number of errors: 1                                                                                                     Number of errors: 1

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P overlap.c-                                                                                                      ./c- -P overlap.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
WARNING(4): The variable 'p' seems not to be used.                                                                      WARNING(4): The variable 'p' seems not to be used.
WARNING(6): The variable 'a' seems not to be used.                                                                      WARNING(6): The variable 'a' seems not to be used.
WARNING(8): The variable 'b' seems not to be used.                                                                      WARNING(8): The variable 'b' seems not to be used.
WARNING(11): The variable 'c' seems not to be used.                                                                     WARNING(11): The variable 'c' seems not to be used.
WARNING(15): The variable 'b' seems not to be used.                                                                     WARNING(15): The variable 'b' seems not to be used.
WARNING(18): The variable 'c' seems not to be used.                                                                     WARNING(18): The variable 'c' seems not to be used.
Number of warnings: 6                                                                                                   Number of warnings: 6
Number of errors: 1                                                                                                     Number of errors: 1

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P overlapStatic.c-                                                                                                ./c- -P overlapStatic.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
WARNING(4): The variable 'p' seems not to be used.                                                                      WARNING(4): The variable 'p' seems not to be used.
WARNING(6): The variable 'a' seems not to be used.                                                                      WARNING(6): The variable 'a' seems not to be used.
WARNING(8): The variable 'b' seems not to be used.                                                                      WARNING(8): The variable 'b' seems not to be used.
WARNING(11): The variable 'c' seems not to be used.                                                                     WARNING(11): The variable 'c' seems not to be used.
WARNING(15): The variable 'b' seems not to be used.                                                                     WARNING(15): The variable 'b' seems not to be used.
WARNING(18): The variable 'c' seems not to be used.                                                                     WARNING(18): The variable 'c' seems not to be used.
Number of warnings: 6                                                                                                   Number of warnings: 6
Number of errors: 1                                                                                                     Number of errors: 1

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P part2.c-                                                                                                        ./c- -P part2.c-
WARNING(4): Variable 'z' may be uninitialized when used here.                                                           WARNING(4): Variable 'z' may be uninitialized when used here.
ERROR(5): Cannot return an array.                                                                                       ERROR(5): Cannot return an array.
ERROR(20): Symbol 'x' is already declared at line 18.                                                                   ERROR(20): Symbol 'x' is already declared at line 18.
ERROR(26): Symbol 'dog' is already declared at line 18.                                                                 ERROR(26): Symbol 'dog' is already declared at line 18.
WARNING(28): The variable 'z' seems not to be used.                                                                     WARNING(28): The variable 'z' seems not to be used.
ERROR(35): '+' requires operands of type int but lhs is of type char.                                                   ERROR(35): '+' requires operands of type int but lhs is of type char.
WARNING(35): The variable 'd' seems not to be used.                                                                     WARNING(35): The variable 'd' seems not to be used.
ERROR(42): Symbol 'zebu' is not declared.                                                                               ERROR(42): Symbol 'zebu' is not declared.
ERROR(47): '+' requires operands of type int but lhs is of type char.                                                   ERROR(47): '+' requires operands of type int but lhs is of type char.
ERROR(47): Unary 'chsign' requires an operand of type int but was given type bool.                                      ERROR(47): Unary 'chsign' requires an operand of type int but was given type bool.
WARNING(49): Variable 'z' may be uninitialized when used here.                                                          WARNING(49): Variable 'z' may be uninitialized when used here.
Number of warnings: 4                                                                                                   Number of warnings: 4
Number of errors: 7                                                                                                     Number of errors: 7

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P randomRoll.c-                                                                                                   ./c- -P randomRoll.c-
ERROR(11): Symbol 'outputb' is not declared.                                                                            ERROR(11): Symbol 'outputb' is not declared.
ERROR(13): Symbol 'outputb' is not declared.                                                                            ERROR(13): Symbol 'outputb' is not declared.
ERROR(14): Symbol 'outnl' is not declared.                                                                              ERROR(14): Symbol 'outnl' is not declared.
ERROR(16): Symbol 'outputb' is not declared.                                                                            ERROR(16): Symbol 'outputb' is not declared.
ERROR(17): Symbol 'outnl' is not declared.                                                                              ERROR(17): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P return.c-                                                                                                       ./c- -P return.c-
ERROR(13): Symbol 'outputc' is not declared.                                                                            ERROR(13): Symbol 'outputc' is not declared.
ERROR(37): Symbol 'outnl' is not declared.                                                                              ERROR(37): Symbol 'outnl' is not declared.
ERROR(39): Symbol 'output' is not declared.                                                                             ERROR(39): Symbol 'output' is not declared.
ERROR(40): Symbol 'output' is not declared.                                                                             ERROR(40): Symbol 'output' is not declared.
ERROR(41): Symbol 'outnl' is not declared.                                                                              ERROR(41): Symbol 'outnl' is not declared.
ERROR(43): Symbol 'outputc' is not declared.                                                                            ERROR(43): Symbol 'outputc' is not declared.
ERROR(44): Symbol 'outputb' is not declared.                                                                            ERROR(44): Symbol 'outputb' is not declared.
ERROR(45): Symbol 'outnl' is not declared.                                                                              ERROR(45): Symbol 'outnl' is not declared.
ERROR(47): Symbol 'outputb' is not declared.                                                                            ERROR(47): Symbol 'outputb' is not declared.
ERROR(48): Symbol 'outputb' is not declared.                                                                            ERROR(48): Symbol 'outputb' is not declared.
ERROR(49): Symbol 'outnl' is not declared.                                                                              ERROR(49): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 11                                                                                                    Number of errors: 11

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P scope.c-                                                                                                        ./c- -P scope.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
ERROR(7): Symbol 'bat' is not declared.                                                                                 ERROR(7): Symbol 'bat' is not declared.
ERROR(8): 'or' requires operands of type bool but lhs is of type int.                                                   ERROR(8): 'or' requires operands of type bool but lhs is of type int.
ERROR(8): 'or' requires operands of type bool but rhs is of type int.                                                   ERROR(8): 'or' requires operands of type bool but rhs is of type int.
WARNING(8): Variable 'a' may be uninitialized when used here.                                                           WARNING(8): Variable 'a' may be uninitialized when used here.
ERROR(14): Symbol 'b' is not declared.                                                                                  ERROR(14): Symbol 'b' is not declared.
WARNING(15): Variable 'c' may be uninitialized when used here.                                                          WARNING(15): Variable 'c' may be uninitialized when used here.
WARNING(19): The variable 'IWouldNotEatItWithAGoat' seems not to be used.                                               WARNING(19): The variable 'IWouldNotEatItWithAGoat' seems not to be used.
ERROR(25): Symbol 'b' is not declared.                                                                                  ERROR(25): Symbol 'b' is not declared.
ERROR(26): Symbol 'c' is not declared.                                                                                  ERROR(26): Symbol 'c' is not declared.
ERROR(30): Symbol 'b' is not declared.                                                                                  ERROR(30): Symbol 'b' is not declared.
ERROR(31): Symbol 'c' is not declared.                                                                                  ERROR(31): Symbol 'c' is not declared.
WARNING(40): The variable 'bat' seems not to be used.                                                                   WARNING(40): The variable 'bat' seems not to be used.
ERROR(41): Symbol 'x' is not declared.                                                                                  ERROR(41): Symbol 'x' is not declared.
WARNING(44): Variable 'z' may be uninitialized when used here.                                                          WARNING(44): Variable 'z' may be uninitialized when used here.
ERROR(45): Symbol 'p' is not declared.                                                                                  ERROR(45): Symbol 'p' is not declared.
ERROR(46): Symbol 'q' is not declared.                                                                                  ERROR(46): Symbol 'q' is not declared.
ERROR(46): Symbol 'r' is not declared.                                                                                  ERROR(46): Symbol 'r' is not declared.
ERROR(47): Symbol 's' is not declared.                                                                                  ERROR(47): Symbol 's' is not declared.
ERROR(47): Symbol 't' is not declared.                                                                                  ERROR(47): Symbol 't' is not declared.
ERROR(48): Symbol 'cow' is not declared.                                                                                ERROR(48): Symbol 'cow' is not declared.
ERROR(48): Symbol 'u' is not declared.                                                                                  ERROR(48): Symbol 'u' is not declared.
ERROR(48): Symbol 'v' is not declared.                                                                                  ERROR(48): Symbol 'v' is not declared.
ERROR(49): Symbol 'abraxsis' is not declared.                                                                           ERROR(49): Symbol 'abraxsis' is not declared.
ERROR(50): Symbol 'a' is not declared.                                                                                  ERROR(50): Symbol 'a' is not declared.
ERROR(55): Symbol 'g' is already declared at line 2.                                                                    ERROR(55): Symbol 'g' is already declared at line 2.
ERROR(57): Symbol 'g' is already declared at line 2.                                                                    ERROR(57): Symbol 'g' is already declared at line 2.
ERROR(59): Symbol 'x' is not declared.                                                                                  ERROR(59): Symbol 'x' is not declared.
ERROR(62): Symbol 'g' is already declared at line 2.                                                                    ERROR(62): Symbol 'g' is already declared at line 2.
ERROR(63): Symbol 'ant' is already declared at line 3.                                                                  ERROR(63): Symbol 'ant' is already declared at line 3.
Number of warnings: 5                                                                                                   Number of warnings: 5
Number of errors: 25                                                                                                    Number of errors: 25

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P static.c-                                                                                                       ./c- -P static.c-
ERROR(6): Symbol 'output' is not declared.                                                                              ERROR(6): Symbol 'output' is not declared.
ERROR(8): Symbol 'output' is not declared.                                                                              ERROR(8): Symbol 'output' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 2                                                                                                     Number of errors: 2

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P strange.c-                                                                                                      ./c- -P strange.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
ERROR(2): Symbol 'main' is already declared at line 1.                                                                  ERROR(2): Symbol 'main' is already declared at line 1.
ERROR(3): Symbol 'main' is already declared at line 1.                                                                  ERROR(3): Symbol 'main' is already declared at line 1.
ERROR(9): 'main' is a simple variable and cannot be called.                                                             ERROR(9): 'main' is a simple variable and cannot be called.
ERROR(18): 'main' is a simple variable and cannot be called.                                                            ERROR(18): 'main' is a simple variable and cannot be called.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P types3.c-                                                                                                       ./c- -P types3.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
ERROR(5): Symbol 'lund' is already declared at line 3.                                                                  ERROR(5): Symbol 'lund' is already declared at line 3.
WARNING(5): The variable 'a' seems not to be used.                                                                      WARNING(5): The variable 'a' seems not to be used.
ERROR(9): Symbol 'a' is already declared at line 9.                                                                     ERROR(9): Symbol 'a' is already declared at line 9.
ERROR(11): Symbol 'a' is already declared at line 9.                                                                    ERROR(11): Symbol 'a' is already declared at line 9.
ERROR(12): 'a' is a simple variable and cannot be called.                                                               ERROR(12): 'a' is a simple variable and cannot be called.
ERROR(13): Cannot use function 'fred' as a variable.                                                                    ERROR(13): Cannot use function 'fred' as a variable.
ERROR(16): Symbol 'fred' is already declared at line 9.                                                                 ERROR(16): Symbol 'fred' is already declared at line 9.
WARNING(18): The variable 'linda' seems not to be used.                                                                 WARNING(18): The variable 'linda' seems not to be used.
ERROR(20): Symbol 'linda' is already declared at line 18.                                                               ERROR(20): Symbol 'linda' is already declared at line 18.
WARNING(24): The variable 'eowyn' seems not to be used.                                                                 WARNING(24): The variable 'eowyn' seems not to be used.
ERROR(26): Cannot use function 'arwen' as a variable.                                                                   ERROR(26): Cannot use function 'arwen' as a variable.
Number of warnings: 3                                                                                                   Number of warnings: 3
Number of errors: 9                                                                                                     Number of errors: 9

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P types.c-                                                                                                        ./c- -P types.c-
ERROR(8): Symbol 'c' is already declared at line 8.                                                                     ERROR(8): Symbol 'c' is already declared at line 8.
WARNING(8): The variable 'c' seems not to be used.                                                                      WARNING(8): The variable 'c' seems not to be used.
ERROR(9): Symbol 'i' is already declared at line 4.                                                                     ERROR(9): Symbol 'i' is already declared at line 4.
WARNING(10): The variable 'pumpkin' seems not to be used.                                                               WARNING(10): The variable 'pumpkin' seems not to be used.
WARNING(12): Variable 'i' may be uninitialized when used here.                                                          WARNING(12): Variable 'i' may be uninitialized when used here.
ERROR(13): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(13): '+' requires operands of type int but rhs is of type bool.
WARNING(13): Variable 'b' may be uninitialized when used here.                                                          WARNING(13): Variable 'b' may be uninitialized when used here.
ERROR(14): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(14): '+' requires operands of type int but lhs is of type bool.
ERROR(15): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(15): '+' requires operands of type int but lhs is of type bool.
ERROR(15): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(15): '+' requires operands of type int but rhs is of type bool.
ERROR(17): 'and' requires operands of type bool but lhs is of type int.                                                 ERROR(17): 'and' requires operands of type bool but lhs is of type int.
ERROR(17): 'and' requires operands of type bool but rhs is of type int.                                                 ERROR(17): 'and' requires operands of type bool but rhs is of type int.
ERROR(18): 'and' requires operands of type bool but lhs is of type int.                                                 ERROR(18): 'and' requires operands of type bool but lhs is of type int.
ERROR(19): 'and' requires operands of type bool but rhs is of type int.                                                 ERROR(19): 'and' requires operands of type bool but rhs is of type int.
ERROR(23): '<=' requires operands of the same type but lhs is type int and rhs is type bool.                            ERROR(23): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(24): '<=' requires operands of the same type but lhs is type bool and rhs is type int.                            ERROR(24): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(28): '=' requires operands of the same type but lhs is type int and rhs is type bool.                             ERROR(28): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(29): '=' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(29): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(33): '!=' requires operands of the same type but lhs is type int and rhs is type bool.                            ERROR(33): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(34): '!=' requires operands of the same type but lhs is type bool and rhs is type int.                            ERROR(34): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(37): The operation '+' does not work with arrays.                                                                 ERROR(37): The operation '+' does not work with arrays.
WARNING(37): Variable 'ia' may be uninitialized when used here.                                                         WARNING(37): Variable 'ia' may be uninitialized when used here.
ERROR(38): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(38): '+' requires operands of type int but rhs is of type bool.
ERROR(38): The operation '+' does not work with arrays.                                                                 ERROR(38): The operation '+' does not work with arrays.
WARNING(38): Variable 'ba' may be uninitialized when used here.                                                         WARNING(38): Variable 'ba' may be uninitialized when used here.
ERROR(39): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(39): '+' requires operands of type int but lhs is of type bool.
ERROR(39): The operation '+' does not work with arrays.                                                                 ERROR(39): The operation '+' does not work with arrays.
ERROR(40): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(40): '+' requires operands of type int but lhs is of type bool.
ERROR(40): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(40): '+' requires operands of type int but rhs is of type bool.
ERROR(40): The operation '+' does not work with arrays.                                                                 ERROR(40): The operation '+' does not work with arrays.
ERROR(42): 'and' requires operands of type bool but lhs is of type int.                                                 ERROR(42): 'and' requires operands of type bool but lhs is of type int.
ERROR(42): 'and' requires operands of type bool but rhs is of type int.                                                 ERROR(42): 'and' requires operands of type bool but rhs is of type int.
ERROR(42): The operation 'and' does not work with arrays.                                                               ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): 'and' requires operands of type bool but lhs is of type int.                                                 ERROR(43): 'and' requires operands of type bool but lhs is of type int.
ERROR(43): The operation 'and' does not work with arrays.                                                               ERROR(43): The operation 'and' does not work with arrays.
ERROR(44): 'and' requires operands of type bool but rhs is of type int.                                                 ERROR(44): 'and' requires operands of type bool but rhs is of type int.
ERROR(44): The operation 'and' does not work with arrays.                                                               ERROR(44): The operation 'and' does not work with arrays.
ERROR(45): The operation 'and' does not work with arrays.                                                               ERROR(45): The operation 'and' does not work with arrays.
ERROR(48): '<=' requires operands of the same type but lhs is type int and rhs is type bool.                            ERROR(48): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(49): '<=' requires operands of the same type but lhs is type bool and rhs is type int.                            ERROR(49): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(53): '=' requires operands of the same type but lhs is type int and rhs is type bool.                             ERROR(53): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(54): '=' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(54): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(57): '+' requires operands of type int but lhs is of type bool.                                                   ERROR(57): '+' requires operands of type int but lhs is of type bool.
ERROR(58): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(58): '+' requires operands of type int but rhs is of type bool.
ERROR(59): '+' requires operands of type int but rhs is of type bool.                                                   ERROR(59): '+' requires operands of type int but rhs is of type bool.
ERROR(61): 'or' requires operands of type bool but lhs is of type int.                                                  ERROR(61): 'or' requires operands of type bool but lhs is of type int.
ERROR(62): 'or' requires operands of type bool but rhs is of type int.                                                  ERROR(62): 'or' requires operands of type bool but rhs is of type int.
ERROR(63): 'or' requires operands of type bool but rhs is of type int.                                                  ERROR(63): 'or' requires operands of type bool but rhs is of type int.
ERROR(66): Unary 'not' requires an operand of type bool but was given type int.                                         ERROR(66): Unary 'not' requires an operand of type bool but was given type int.
ERROR(67): The operation 'not' does not work with arrays.                                                               ERROR(67): The operation 'not' does not work with arrays.
ERROR(68): The operation 'not' does not work with arrays.                                                               ERROR(68): The operation 'not' does not work with arrays.
ERROR(68): Unary 'not' requires an operand of type bool but was given type int.                                         ERROR(68): Unary 'not' requires an operand of type bool but was given type int.
ERROR(70): Unary 'chsign' requires an operand of type int but was given type bool.                                      ERROR(70): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(72): The operation 'chsign' does not work with arrays.                                                            ERROR(72): The operation 'chsign' does not work with arrays.
ERROR(72): Unary 'chsign' requires an operand of type int but was given type bool.                                      ERROR(72): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(73): The operation 'chsign' does not work with arrays.                                                            ERROR(73): The operation 'chsign' does not work with arrays.
ERROR(76): '>' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(76): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(77): '>' requires operands of the same type but lhs is type int and rhs is type bool.                             ERROR(77): '>' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(78): '>' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(78): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(79): '>' requires operands of the same type but lhs is type bool and rhs is type int.                             ERROR(79): '>' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(79): '>' requires operands of the same type but lhs is type int and rhs is type bool.                             ERROR(79): '>' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(103): 'b' is a simple variable and cannot be called.                                                              ERROR(103): 'b' is a simple variable and cannot be called.
ERROR(104): Cannot index nonarray 'b'.                                                                                  ERROR(104): Cannot index nonarray 'b'.
ERROR(105): Cannot index nonarray 'x'.                                                                                  ERROR(105): Cannot index nonarray 'x'.
ERROR(105): Symbol 'x' is not declared.                                                                                 ERROR(105): Symbol 'x' is not declared.
ERROR(106): Cannot index nonarray 'main'.                                                                               ERROR(106): Cannot index nonarray 'main'.
ERROR(106): Cannot use function 'main' as a variable.                                                                   ERROR(106): Cannot use function 'main' as a variable.
ERROR(107): Cannot index nonarray 'main'.                                                                               ERROR(107): Cannot index nonarray 'main'.
ERROR(107): Cannot use function 'main' as a variable.                                                                   ERROR(107): Cannot use function 'main' as a variable.
ERROR(108): Array 'ba' should be indexed by type int but got type bool.                                                 ERROR(108): Array 'ba' should be indexed by type int but got type bool.
ERROR(108): Array index is the unindexed array 'ba'.                                                                    ERROR(108): Array index is the unindexed array 'ba'.
ERROR(109): Array 'ba' should be indexed by type int but got type char.                                                 ERROR(109): Array 'ba' should be indexed by type int but got type char.
ERROR(110): Cannot use function 'main' as a variable.                                                                   ERROR(110): Cannot use function 'main' as a variable.
ERROR(111): The operation '+' does not work with arrays.                                                                ERROR(111): The operation '+' does not work with arrays.
ERROR(112): Symbol 'a' is not declared.                                                                                 ERROR(112): Symbol 'a' is not declared.
ERROR(113): The operation 'sizeof' only works with arrays.                                                              ERROR(113): The operation 'sizeof' only works with arrays.
ERROR(114): Unary 'chsign' requires an operand of type int but was given type bool.                                     ERROR(114): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(116): Cannot return an array.                                                                                     ERROR(116): Cannot return an array.
Number of warnings: 6                                                                                                   Number of warnings: 6
Number of errors: 72                                                                                                    Number of errors: 72

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P undeclared.c-                                                                                                   ./c- -P undeclared.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
WARNING(1): The variable 'x' seems not to be used.                                                                      WARNING(1): The variable 'x' seems not to be used.
ERROR(3): Symbol 'i' is not declared.                                                                                   ERROR(3): Symbol 'i' is not declared.
ERROR(3): Symbol 'z' is not declared.                                                                                   ERROR(3): Symbol 'z' is not declared.
ERROR(4): Symbol 'i' is not declared.                                                                                   ERROR(4): Symbol 'i' is not declared.
ERROR(4): Symbol 'z' is not declared.                                                                                   ERROR(4): Symbol 'z' is not declared.
ERROR(5): Symbol 'i' is not declared.                                                                                   ERROR(5): Symbol 'i' is not declared.
ERROR(5): Symbol 'i' is not declared.                                                                                   ERROR(5): Symbol 'i' is not declared.
ERROR(6): Symbol 'j' is not declared.                                                                                   ERROR(6): Symbol 'j' is not declared.
ERROR(7): Symbol 'l' is not declared.                                                                                   ERROR(7): Symbol 'l' is not declared.
ERROR(8): Symbol 'm' is not declared.                                                                                   ERROR(8): Symbol 'm' is not declared.
ERROR(9): Symbol 'k' is not declared.                                                                                   ERROR(9): Symbol 'k' is not declared.
Number of warnings: 1                                                                                                   Number of warnings: 1
Number of errors: 11                                                                                                    Number of errors: 11

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P uninit2.c-                                                                                                      ./c- -P uninit2.c-
WARNING(6): Variable 'b' may be uninitialized when used here.                                                           WARNING(6): Variable 'b' may be uninitialized when used here.
WARNING(8): Variable 'aa' may be uninitialized when used here.                                                          WARNING(8): Variable 'aa' may be uninitialized when used here.
WARNING(9): Variable 'bb' may be uninitialized when used here.                                                          WARNING(9): Variable 'bb' may be uninitialized when used here.
WARNING(9): Variable 'cc' may be uninitialized when used here.                                                          WARNING(9): Variable 'cc' may be uninitialized when used here.
WARNING(12): Variable 'dd' may be uninitialized when used here.                                                         WARNING(12): Variable 'dd' may be uninitialized when used here.
Func: main returns type void [line: 1]                                                                                  Func: main returns type void [line: 1]
. Child: 1 Compound [line: 2]                                                                                           . Child: 1 Compound [line: 2]
. . Child: 0 Var: a of type int [line: 3]                                                                               . . Child: 0 Var: a of type int [line: 3]
. . Sibling: 1 Var: b of type int [line: 3]                                                                             . . Sibling: 1 Var: b of type int [line: 3]
. . Sibling: 2 Var: c of type int [line: 3]                                                                             . . Sibling: 2 Var: c of type int [line: 3]
. . Sibling: 3 Var: d of type int [line: 3]                                                                             . . Sibling: 3 Var: d of type int [line: 3]
. . Sibling: 4 Var: aa is array of type int [line: 4]                                                                   . . Sibling: 4 Var: aa is array of type int [line: 4]
. . Sibling: 5 Var: bb is array of type int [line: 4]                                                                   . . Sibling: 5 Var: bb is array of type int [line: 4]
. . Sibling: 6 Var: cc is array of type int [line: 4]                                                                   . . Sibling: 6 Var: cc is array of type int [line: 4]
. . Sibling: 7 Var: dd is array of type int [line: 4]                                                                   . . Sibling: 7 Var: dd is array of type int [line: 4]
. . Sibling: 8 Var: ee is array of type int [line: 4]                                                                   . . Sibling: 8 Var: ee is array of type int [line: 4]
. . Child: 1 Assign: <= of type int [line: 6]                                                                           . . Child: 1 Assign: <= of type int [line: 6]
. . . Child: 0 Id: a of type int [line: 6]                                                                              . . . Child: 0 Id: a of type int [line: 6]
. . . Child: 1 Id: b of type int [line: 6]                                                                              . . . Child: 1 Id: b of type int [line: 6]
. . Sibling: 1 Assign: <= of type int [line: 7]                                                                         . . Sibling: 1 Assign: <= of type int [line: 7]
. . . Child: 0 Id: a of type int [line: 7]                                                                              . . . Child: 0 Id: a of type int [line: 7]
. . . Child: 1 Id: b of type int [line: 7]                                                                              . . . Child: 1 Id: b of type int [line: 7]
. . Sibling: 2 Assign: <= of type int [line: 8]                                                                         . . Sibling: 2 Assign: <= of type int [line: 8]
. . . Child: 0 Id: a of type int [line: 8]                                                                              . . . Child: 0 Id: a of type int [line: 8]
. . . Child: 1 Op: [ of type int [line: 8]                                                                              . . . Child: 1 Op: [ of type int [line: 8]
. . . . Child: 0 Id: aa of type int [line: 8]                                                                           . . . . Child: 0 Id: aa of type int [line: 8]
. . . . Child: 1 Const 3 of type int [line: 8]                                                                          . . . . Child: 1 Const 3 of type int [line: 8]
. . Sibling: 3 Assign: <= of type int [line: 9]                                                                         . . Sibling: 3 Assign: <= of type int [line: 9]
. . . Child: 0 Id: a of type int [line: 9]                                                                              . . . Child: 0 Id: a of type int [line: 9]
. . . Child: 1 Op: [ of type int [line: 9]                                                                              . . . Child: 1 Op: [ of type int [line: 9]
. . . . Child: 0 Id: bb of type int [line: 9]                                                                           . . . . Child: 0 Id: bb of type int [line: 9]
. . . . Child: 1 Op: [ of type int [line: 9]                                                                            . . . . Child: 1 Op: [ of type int [line: 9]
. . . . . Child: 0 Id: cc of type int [line: 9]                                                                         . . . . . Child: 0 Id: cc of type int [line: 9]
. . . . . Child: 1 Const 3 of type int [line: 9]                                                                        . . . . . Child: 1 Const 3 of type int [line: 9]
. . Sibling: 4 Assign: <= of type int [line: 10]                                                                        . . Sibling: 4 Assign: <= of type int [line: 10]
. . . Child: 0 Op: [ of type int [line: 10]                                                                             . . . Child: 0 Op: [ of type int [line: 10]
. . . . Child: 0 Id: cc of type int [line: 10]                                                                          . . . . Child: 0 Id: cc of type int [line: 10]
. . . . Child: 1 Id: c of type int [line: 10]                                                                           . . . . Child: 1 Id: c of type int [line: 10]
. . . Child: 1 Id: a of type int [line: 10]                                                                             . . . Child: 1 Id: a of type int [line: 10]
. . Sibling: 5 Assign: <= of type int [line: 11]                                                                        . . Sibling: 5 Assign: <= of type int [line: 11]
. . . Child: 0 Op: [ of type int [line: 11]                                                                             . . . Child: 0 Op: [ of type int [line: 11]
. . . . Child: 0 Id: cc of type int [line: 11]                                                                          . . . . Child: 0 Id: cc of type int [line: 11]
. . . . Child: 1 Op: + of type int [line: 11]                                                                           . . . . Child: 1 Op: + of type int [line: 11]
. . . . . Child: 0 Id: c of type int [line: 11]                                                                         . . . . . Child: 0 Id: c of type int [line: 11]
. . . . . Child: 1 Id: d of type int [line: 11]                                                                         . . . . . Child: 1 Id: d of type int [line: 11]
. . . Child: 1 Id: a of type int [line: 11]                                                                             . . . Child: 1 Id: a of type int [line: 11]
. . Sibling: 6 Op: [ of type int [line: 12]                                                                             . . Sibling: 6 Op: [ of type int [line: 12]
. . . Child: 0 Id: cc of type int [line: 12]                                                                            . . . Child: 0 Id: cc of type int [line: 12]
. . . Child: 1 Op: [ of type int [line: 12]                                                                             . . . Child: 1 Op: [ of type int [line: 12]
. . . . Child: 0 Id: dd of type int [line: 12]                                                                          . . . . Child: 0 Id: dd of type int [line: 12]
. . . . Child: 1 Const 3 of type int [line: 12]                                                                         . . . . Child: 1 Const 3 of type int [line: 12]
. . Sibling: 7 Assign: <= of type int [line: 13]                                                                        . . Sibling: 7 Assign: <= of type int [line: 13]
. . . Child: 0 Op: [ of type int [line: 13]                                                                             . . . Child: 0 Op: [ of type int [line: 13]
. . . . Child: 0 Id: cc of type int [line: 13]                                                                          . . . . Child: 0 Id: cc of type int [line: 13]
. . . . Child: 1 Op: [ of type int [line: 13]                                                                           . . . . Child: 1 Op: [ of type int [line: 13]
. . . . . Child: 0 Id: ee of type int [line: 13]                                                                        . . . . . Child: 0 Id: ee of type int [line: 13]
. . . . . Child: 1 Const 3 of type int [line: 13]                                                                       . . . . . Child: 1 Const 3 of type int [line: 13]
. . . Child: 1 Const 284 of type int [line: 13]                                                                         . . . Child: 1 Const 284 of type int [line: 13]
Number of warnings: 5                                                                                                   Number of warnings: 5
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P uninit.c-                                                                                                       ./c- -P uninit.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
WARNING(1): The variable 'x' seems not to be used.                                                                      WARNING(1): The variable 'x' seems not to be used.
ERROR(3): Symbol 'z' is already declared at line 3.                                                                     ERROR(3): Symbol 'z' is already declared at line 3.
ERROR(3): Symbol 'z' is already declared at line 3.                                                                     ERROR(3): Symbol 'z' is already declared at line 3.
WARNING(5): Variable 'i' may be uninitialized when used here.                                                           WARNING(5): Variable 'i' may be uninitialized when used here.
WARNING(7): Variable 'g' may be uninitialized when used here.                                                           WARNING(7): Variable 'g' may be uninitialized when used here.
WARNING(8): Variable 'h' may be uninitialized when used here.                                                           WARNING(8): Variable 'h' may be uninitialized when used here.
WARNING(9): Variable 'j' may be uninitialized when used here.                                                           WARNING(9): Variable 'j' may be uninitialized when used here.
WARNING(10): Variable 'k' may be uninitialized when used here.                                                          WARNING(10): Variable 'k' may be uninitialized when used here.
WARNING(11): Variable 'l' may be uninitialized when used here.                                                          WARNING(11): Variable 'l' may be uninitialized when used here.
WARNING(12): Variable 'm' may be uninitialized when used here.                                                          WARNING(12): Variable 'm' may be uninitialized when used here.
ERROR(13): Symbol 'dog' is not declared.                                                                                ERROR(13): Symbol 'dog' is not declared.
ERROR(14): Cannot use function 'main' as a variable.                                                                    ERROR(14): Cannot use function 'main' as a variable.
Number of warnings: 8                                                                                                   Number of warnings: 8
Number of errors: 5                                                                                                     Number of errors: 5

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P varAssign.c-                                                                                                    ./c- -P varAssign.c-
ERROR(13): Symbol 'output' is not declared.                                                                             ERROR(13): Symbol 'output' is not declared.
ERROR(15): Symbol 'output' is not declared.                                                                             ERROR(15): Symbol 'output' is not declared.
ERROR(17): Symbol 'output' is not declared.                                                                             ERROR(17): Symbol 'output' is not declared.
ERROR(18): Symbol 'outnl' is not declared.                                                                              ERROR(18): Symbol 'outnl' is not declared.
ERROR(22): Symbol 'output' is not declared.                                                                             ERROR(22): Symbol 'output' is not declared.
ERROR(24): Symbol 'output' is not declared.                                                                             ERROR(24): Symbol 'output' is not declared.
ERROR(26): Symbol 'output' is not declared.                                                                             ERROR(26): Symbol 'output' is not declared.
ERROR(27): Symbol 'outnl' is not declared.                                                                              ERROR(27): Symbol 'outnl' is not declared.
ERROR(31): Symbol 'output' is not declared.                                                                             ERROR(31): Symbol 'output' is not declared.
ERROR(34): Symbol 'output' is not declared.                                                                             ERROR(34): Symbol 'output' is not declared.
ERROR(37): Symbol 'output' is not declared.                                                                             ERROR(37): Symbol 'output' is not declared.
ERROR(38): Symbol 'outnl' is not declared.                                                                              ERROR(38): Symbol 'outnl' is not declared.
ERROR(42): Symbol 'output' is not declared.                                                                             ERROR(42): Symbol 'output' is not declared.
ERROR(44): Symbol 'output' is not declared.                                                                             ERROR(44): Symbol 'output' is not declared.
ERROR(46): Symbol 'output' is not declared.                                                                             ERROR(46): Symbol 'output' is not declared.
ERROR(47): Symbol 'outnl' is not declared.                                                                              ERROR(47): Symbol 'outnl' is not declared.
ERROR(58): Symbol 'output' is not declared.                                                                             ERROR(58): Symbol 'output' is not declared.
ERROR(59): Symbol 'output' is not declared.                                                                             ERROR(59): Symbol 'output' is not declared.
ERROR(60): Symbol 'outnl' is not declared.                                                                              ERROR(60): Symbol 'outnl' is not declared.
ERROR(65): Symbol 'output' is not declared.                                                                             ERROR(65): Symbol 'output' is not declared.
ERROR(66): Symbol 'output' is not declared.                                                                             ERROR(66): Symbol 'output' is not declared.
ERROR(67): Symbol 'outnl' is not declared.                                                                              ERROR(67): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 22                                                                                                    Number of errors: 22

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P var.c-                                                                                                          ./c- -P var.c-
ERROR(LINKER): A function named 'main()' must be defined.                                                               ERROR(LINKER): A function named 'main()' must be defined.
WARNING(12): Variable 'x' may be uninitialized when used here.                                                          WARNING(12): Variable 'x' may be uninitialized when used here.
WARNING(13): Variable 'y' may be uninitialized when used here.                                                          WARNING(13): Variable 'y' may be uninitialized when used here.
Number of warnings: 2                                                                                                   Number of warnings: 2
Number of errors: 1                                                                                                     Number of errors: 1

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P varPair.c-                                                                                                      ./c- -P varPair.c-
ERROR(10): Symbol 'output' is not declared.                                                                             ERROR(10): Symbol 'output' is not declared.
ERROR(13): Symbol 'output' is not declared.                                                                             ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outnl' is not declared.                                                                              ERROR(14): Symbol 'outnl' is not declared.
ERROR(18): Symbol 'output' is not declared.                                                                             ERROR(18): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.                                                                             ERROR(21): Symbol 'output' is not declared.
ERROR(22): Symbol 'outnl' is not declared.                                                                              ERROR(22): Symbol 'outnl' is not declared.
ERROR(26): Symbol 'output' is not declared.                                                                             ERROR(26): Symbol 'output' is not declared.
ERROR(29): Symbol 'output' is not declared.                                                                             ERROR(29): Symbol 'output' is not declared.
ERROR(30): Symbol 'outnl' is not declared.                                                                              ERROR(30): Symbol 'outnl' is not declared.
ERROR(34): Symbol 'output' is not declared.                                                                             ERROR(34): Symbol 'output' is not declared.
ERROR(37): Symbol 'output' is not declared.                                                                             ERROR(37): Symbol 'output' is not declared.
ERROR(38): Symbol 'outnl' is not declared.                                                                              ERROR(38): Symbol 'outnl' is not declared.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 12                                                                                                    Number of errors: 12

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P while.c-                                                                                                        ./c- -P while.c-
Func: main returns type void [line: 2]                                                                                  Func: main returns type void [line: 2]
. Child: 1 Compound [line: 3]                                                                                           . Child: 1 Compound [line: 3]
. . Child: 0 Var: x of type int [line: 4]                                                                               . . Child: 0 Var: x of type int [line: 4]
. . Child: 1 Assign: <= of type int [line: 5]                                                                           . . Child: 1 Assign: <= of type int [line: 5]
. . . Child: 0 Id: x of type int [line: 5]                                                                              . . . Child: 0 Id: x of type int [line: 5]
. . . Child: 1 Const 0 of type int [line: 5]                                                                            . . . Child: 1 Const 0 of type int [line: 5]
. . Sibling: 1 While [line: 7]                                                                                          . . Sibling: 1 While [line: 7]
. . . Child: 0 Op: > of type bool [line: 7]                                                                             . . . Child: 0 Op: > of type bool [line: 7]
. . . . Child: 0 Id: x of type int [line: 7]                                                                            . . . . Child: 0 Id: x of type int [line: 7]
. . . . Child: 1 Const 10 of type int [line: 7]                                                                         . . . . Child: 1 Const 10 of type int [line: 7]
. . . Child: 1 Assign: ++ of type int [line: 7]                                                                         . . . Child: 1 Assign: ++ of type int [line: 7]
. . . . Child: 0 Id: x of type int [line: 7]                                                                            . . . . Child: 0 Id: x of type int [line: 7]
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 0                                                                                                     Number of errors: 0

==============                                                                                                          ==============
==============                                                                                                          ==============
./c- -P whileif.c-                                                                                                      ./c- -P whileif.c-
ERROR(13): '<=' requires operands of the same type but lhs is type bool and rhs is type int.                            ERROR(13): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
Number of warnings: 0                                                                                                   Number of warnings: 0
Number of errors: 1                                                                                                     Number of errors: 1

* End of testing                                                                                                        * End of testing
Kill all remaining c- processes                                                                                         Kill all remaining c- processes
